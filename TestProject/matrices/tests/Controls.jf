#Id;#TestCase;#Kind;#Depends;#For
INIT;Test case;Never;;
    #Id;#Global;#Let
    getControl;1;def (str) {String s = str.substring(8)\u003bint index = s.indexOf('\'')\u003bString s2 = s.substring(0, index)\u003breturn s2\u003b}\u003b

    #Id;#Global;#Let
    getExp;1;def (pl, v1, v2, v3) {if(pl == 'Web') {return v1\u003b}if(pl == 'Swing') {return v2\u003b}if(pl == 'Win') {return v3\u003b}}\u003b

    #Id;#Global;#Let
    getDelay;1;def (pl) {if(pl == 'Web') {return 10\u003b}if(pl == 'Swing') {return 1000\u003b}if(pl == 'Win') {return 1000\u003b}}\u003b

    // {web,swing,win} or All
    #Id;#Global;#RawTable
    controls;1;Table
    @;On;Before;getRowPar;expand;collapse;expandPar;collapsePar;getRow;colorPar;Name;toggle;getAttr;getAttrPar;getValue;selectInt;select;get;setValue;text;getList;check;getListPar;getValuePar;selectPar
    0;x;'Do.use(\'Label\').move()';'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';Label;;'CentralLabel';'\'CentralLabel\'';'CentralLabel';;;'CentralLabel';;;;'CentralLabel';'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'CentralLabel\'';'\'\''
    1;x;;'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';Button;;'Button';'\'Button\'';'Button';;;'Button';;;;'Button';'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'Button\'';'\'\''
    2;x;;'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';TextBox;;'TextBox';'\'TextBox\'';'';;;'';;'Green';;'';'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'\'';'\'\''
    3;x;;'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';Any;;'Any';'\'Any\'';;;;;;;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'\'';'\'\''
    4;x;'Do.use(\'CheckBox\').move()';'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';CheckBox;getExp(plugin,'true','true','On');'CheckBox';'\'CheckBox\'';getExp(plugin,true,true,'On');;;'CheckBox';;;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';getExp(plugin,'\'true\'','\'true\'','\'On\'');'\'\''
    5;x;'Do.use(\'ToggleButton\').move()';'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';ToggleButton;getExp(plugin,'true','true','On');'ToggleButton';'\'ToggleButton\'';getExp(plugin,true,true,'On');;;'ToggleButton';;;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';getExp(plugin,'\'true\'','\'true\'','\'On\'');'\'\''
    6;x;;'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';ComboBox;;getExp(plugin,'ComboBox','ComboBox','Green');getExp(plugin,'\'ComboBox\'','\'ComboBox\'','\'Green\'');'Green';'Green';'Blue';'Green';;'Green';'[Green, Yellow, Orange, Blue]';'Green';'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'Green\'';'Blue'
    7;x;;'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';'{Head1=tr_3_td_1, Head2=tr_3_td_2, Head3=tr_3_td_3}';'new Color(246,246,246)';Table;;getExp(plugin,'Table','Table','DataGridView');getExp(plugin,'\'Table\'','\'Table\'','\'DataGridView\'');'tr_2_td_2';;;;;getExp(plugin,'tr_2_td_2','Green','Green');;'tr_2_td_2';'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'tr_2_td_2\'';'\'\''
    8;x;'Do.use(\'Slider\').setValue(0)';'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';Slider;;getExp(plugin,'Slider','Slider','');getExp(plugin,'\'Slider\'','\'Slider\'','\'\'');getExp(plugin,'',0,'0');;;;'Slider_30';;;getExp(plugin,'',0,'0');'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';getExp(plugin,'\'\'','0','0');'\'\''
    9;x;;'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';RadioButton;getExp(plugin,'true','true','True');getExp(plugin,'RadioButton','RadioButton','Green');getExp(plugin,'\'RadioButton\'','\'RadioButton\'','\'Green\'');getExp(plugin,'false','false','False');;;'Green';;;;false;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';getExp(plugin,'\'false\'','\'false\'','\'False\'');'\'\''
    10;x;;'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';ProgressBar;;getExp(plugin,'ProgressBar','ProgressBar','');getExp(plugin,'\'ProgressBar\'','\'ProgressBar\'','\'\'');10;;;;;;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'10\'';'\'\''
    11;x;;'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';Panel;;'Panel';'\'Panel\'';'Panel';;;;;'Panel';;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'Panel\'';'\'\''
    12;x;'Do.use(\'List\').select(\'Green\')';'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';List;;getExp(plugin,'List','List','tab2');getExp(plugin,'\'List\'','\'List\'','\'tab2\'');getExp(plugin,'Green\nYellow\nOrange\nBlue','Green','Green');getExp(plugin,'Green\nYellow\nOrange\nBlue','Green','Green');getExp(plugin,'Green\nYellow\nOrange\nBlue','Blue','Blue');;;;'[Green, Yellow, Orange, Blue]';true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';getExp(plugin,'\'Green\nYellow\nOrange\nBlue\'','\'Green\'','\'Green\'');'Blue'
    13;x;'Do.use(\'Dialog\').move()';'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';Dialog;;'Dialog';'\'Dialog\'';;;;;;;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'\'';'\'\''
    14;x;'Do.use(\'Image\').move()';'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';Image;;'Image';'\'Image\'';;;;;;;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'\'';'\'\''
    15;x;;'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';Wait;;'Wait';'\'Wait\'';;;;;;;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'\'';'\'\''
    16;x;;'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';ScrollBar;;getExp(plugin,'ScrollBar','ScrollBar','Vertical Scroll Bar');getExp(plugin,'\'ScrollBar\'','\'ScrollBar\'','\'Vertical Scroll Bar\'');0;;;;'ScrollBar_30';;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'0\'';'\'\''
    17;x;getExp(plugin,'\'\'','Do.use(\'Tree\').select(\'[Green]\')','Do.use(\'Tree\').select(\'Green\')');getExp(plugin,'\'\'','\'[Green][Orange]\'','\'Orange\'');getExp(plugin,'','Expand_[Green, colors]','colors_expand');getExp(plugin,'','Collapse_[Green, colors]','colors_collapse');getExp(plugin,'\'\'','\'[Green][colors]\'','\'Green/colors\'');getExp(plugin,'\'\'','\'[Green][colors]\'','\'Green/colors\'');getExp(plugin,'','{value=[Green][Orange]}','Orange');'new Color(246,246,246)';Tree;;'Tree';'\'Tree\'';getExp(plugin,'','[Green]','Green');getExp(plugin,'','[Green]','YellowOrangeBluecolors');getExp(plugin,'','[Green, Blue]','Blue');;;;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'\'';getExp(plugin,'','[Green][Blue]','Green/Blue')
    18;x;'Do.use(\'Splitter\').setValue(125)';'\'[JTree][Orange]\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';Splitter;;'Splitter';'\'Splitter\'';125;;;;'Splitter_30';;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'125\'';'\'\''
    19;x;'Do.use(\'Menu2\').move()';'\'[JTree][Orange]\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';Tooltip;;;'\'Tooltip\'';'Tooltip';;;'Tooltip';;;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'Tooltip\'';'\'\''
    20;x;'Do.use(\'Menu2\').click(200,10)';'\'[JTree][Orange]\'';'MenuItem3_select';'MenuItem2_select';'\'Menu/MenuItem/MenuItem2\'';'\'Menu/MenuItem/MenuItem2\'';;'new Color(246,246,246)';Menu;;getExp(plugin,'','Menu','Application');getExp(plugin,'\'\'','\'Menu\'','\'Application\'');;;;getExp(plugin,'','Menu','Application');;;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'\'';'\'\''
    21;x;'Do.use(\'Menu2\').click(200,10)';'\'[JTree][Orange]\'';'MenuItem3_select';'MenuItem2_select';'\'MenuItem/MenuItem2\'';'\'MenuItem/MenuItem2\'';;'new Color(246,246,246)';MenuItem;;'MenuItem';'\'MenuItem\'';;;;'MenuItem';;;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'\'';'\'\''
    22;x;'Do.use(\'TabPanel\').select(\'Green\')';'\'[JTree][Orange]\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';TabPanel;;'TabPanel';'\'TabPanel\'';'Green';'Green';'Blue';'TabPanel';;;'[Green, Yellow, Orange, Blue]';true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'Green\'';'Blue'
    23;x;;'\'[JTree][Orange]\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';Spinner;;'Spinner';'\'Spinner\'';getExp(plugin,'',0,'0');;;'Spinner';'Slider_30';;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'0\'';'\'\''
    #EndRawTable

    #Action;$Table;$Expression
    TableConsiderColumnsAs;controls;{'Before','getAttr','getValue','get','setValue','text','getList','check','getListPar','getValuePar','getAttrPar','colorPar','getRow','getRowPar','toggle','select','selectInt','expandPar','collapsePar','expandPar','collapsePar','expand','collapse'}

    #Id;#Global;#RawTable
    operations;1;Table
    @;On;Name;Kind;Operation;After;Expected;Par
    0;x;check;OperationKind.CHECK;Do.use(control);Do.use(control).check(par);true;control.getValuePar
    1;x;checkFALSE;OperationKind.CHECK;Do.use(control);Do.use(control).check(par,false);true;control.getValuePar
    2;x;checkXY;OperationKind.CHECK_XY;Do.use(control);Do.use(control).check(par,1,1);true;control.getValuePar
    3;x;checkRegexp;OperationKind.CHECK_REGEXP;Do.use(control);Do.use(control).checkRegexp('\\w*');true;control.getValuePar
    4;x;checkRegexpFALSE;OperationKind.CHECK_REGEXP;Do.use(control);Do.use(control).checkRegexp('\\w*',false);true;control.getValuePar
    5;x;checkRegexpXY;OperationKind.CHECK_REGEXP_XY;Do.use(control);Do.use(control).checkRegexp('\\w*',1,1);true;control.getValuePar
    6;x;checkAttr;OperationKind.CHECK_ATTR;Do.use(control);Do.use(control).checkAttr('name',par);true;control.getAttrPar
    7;x;checkAttrRegexp;OperationKind.CHECK_ATTR_REGEXP;Do.use(control);Do.use(control).checkAttrRegexp('name','[a-zA-Z0-9_ ]*',true);true;control.getAttrPar
    8;x;checkList;OperationKind.CHECK_LIST;Do.use(control);Do.use(control).checkList(par);true;control.getListPar
    9;x;checkColor;OperationKind.CHECK_COLOR_XY;Do.use('colorButton');Do.use('colorButton').checkColor(5,5,new Color(255,0,0));true;control.colorPar
    10;x;getAttr;OperationKind.GET_ATTR;Do.use(control);Do.use(control).getAttr('name');control.getAttr;
    11;x;getValue;OperationKind.GET_VALUE;Do.use(control);Do.use(control).getValue();control.getValue;
    12;x;getValueXY;OperationKind.GET_VALUE_XY;Do.use(control);Do.use(control).getValue(1,1);control.getValue;
    13;x;get;OperationKind.GET;Do.use(control);Do.use(control).get();control.get;
    14;x;click;OperationKind.CLICK;Do.use(control).click();Do.use('centralLabel').getValue();control.Name + '_click';
    15;x;doubleClick;OperationKind.CLICK_XY;Do.use(control).click(2,2,MouseAction.LeftDoubleClick);Do.use('centralLabel').getValue();control.Name + '_double_click';
    16;x;clickXY;OperationKind.CLICK_XY;Do.use(control).delay(amount).click(2,2);Do.use('centralLabel').getValue();control.Name + '_click';
    17;x;forech;OperationKind.FOREACH;Do.use(control).foreach(Do.click(2,2,MouseAction.LeftDoubleClick));Do.use('centralLabel').getValue();control.Name + '_double_click';
    18;x;setValue;OperationKind.SET;Do.use(control).setValue(30);Do.use('sliderLabel').getValue();control.setValue;
    19;x;text;OperationKind.TEXT;Do.use(control).text('Green');Do.use(control).getValue();control.text;
    20;x;textTrue;OperationKind.TEXT;Do.use(control).text('Green',true);Do.use(control).getValue();control.text;
    21;x;textXY;OperationKind.TEXT_XY;Do.use(control).text('Green',1,1);Do.use(control).getValue(1,1);control.text;
    22;x;push;OperationKind.PUSH;Do.use(control).push();Do.use('pushLabel').getValue();control.Name + '_push';
    23;x;getList;OperationKind.GET_LIST;Do.use(control);Do.use(control).getList();control.getList;
    24;x;toggle;OperationKind.TOGGLE;Do.use(control).toggle(true).toggle(false).toggle(true);Do.use(control).getValue();control.toggle;
    25;x;selectSTRING;OperationKind.SELECT;Do.use(control).select(par).delay(amount);Do.use(control).getValue();control.select;control.selectPar
    26;x;selectINT;OperationKind.SELECT;Do.use(control).select(0).delay(amount);Do.use(control).getValue();control.selectInt;
    27;x;count;OperationKind.COUNT;Do.use(control);Do.use(control).count();1;
    28;x;use;OperationKind.USE;Do.use(control);Do.use(control).use(0).count();1;
    29;x;move;OperationKind.MOVE;Do.use(control).move();Do.use('moveLabel').getValue();control.Name + '_move';
    30;x;moveXY;OperationKind.MOVE_XY;Do.use(control).move(1,1);Do.use('moveLabel').getValue();control.Name + '_move';
    31;x;getRectangle;OperationKind.GET_RECTANGLE;Do.use('colorButton');Do.use('colorButton').getRectangle();'java.awt.Rectangle[x=550,y=800,width=100,height=25]';'
    32;x;getRow;OperationKind.GET_ROW;Do.use(control);Do.use(control).getRow(new StringCondition('Head3',par));control.getRow;control.getRowPar
    33;x;getRowIndexes;OperationKind.GET_ROW_INDEXES;Do.use(control);Do.use(control).getRowIndexes(new StringCondition('Head3',par));'[2]';control.getRowPar
    34;x;getRowByIndex;OperationKind.GET_ROW_BY_INDEX;Do.use(control);Do.use(control).getRowByIndex(2);control.getRow;
    35;x;getRowWithColor;OperationKind.GET_ROW_WITH_COLOR;Do.use(control);Do.use(control).getRowWithColor(2);getExp(plugin, '{Head1=value=\'tr_3_td_1\', color=Color[51, 51, 51], backColor=Color[255, 255, 255], Head2=value=\'tr_3_td_2\', color=Color[51, 51, 51], backColor=Color[255, 255, 255], Head3=value=\'tr_3_td_3\', color=Color[51, 51, 51], backColor=Color[255, 255, 255]}','{Head1=value=\'tr_3_td_1\', color=Color[51, 51, 51], backColor=Color[255, 255, 255], Head2=value=\'tr_3_td_2\', color=Color[51, 51, 51], backColor=Color[255, 255, 255], Head3=value=\'tr_3_td_3\', color=Color[51, 51, 51], backColor=Color[255, 255, 255]}',ErrorKind.FEATURE_NOT_SUPPORTED);
    36;x;getColor;OperationKind.GET_COLOR_XY;Do.use('colorButton');Do.use('colorButton').getColor(5,5);'java.awt.Color[r=255,g=0,b=0]';
    37;x;getTableSize;OperationKind.GET_TABLE_SIZE;Do.use(control);Do.use(control).getTableSize();3;
    38;x;getTable;OperationKind.GET_TABLE;Do.use(control);Do.use(control).getTable();'Table [Head1, Head2, Head3]:3';
    39;x;expand;OperationKind.EXPAND;Do.use(control).expand(par);Do.use('selectLabel').getValue();control.expand;control.expandPar
    40;x;collapse;OperationKind.COLLAPSE;Do.use(control).collapse(par);Do.use('selectLabel').getValue();control.collapse;control.collapsePar
    41;x;wait;OperationKind.WAIT;Do.use('buttonShowArea').click().wait('buttonHideArea', 10000, true);Do.use('buttonHideArea').getAttr('name').click();'hideButton';
    42;x;delay;OperationKind.DELAY;Do.use('buttonShowArea').click().delay(100);Do.use('buttonHideArea').getAttr('name').click();'hideButton';
    43;x;repeat;OperationKind.REPEAT;Do.use('countButtonClear').click().use('countButton').repeat(2, Do.click());Do.use('countLabel').getValue();2;
    44;x;press;OperationKind.PRESS;Do.use(control).press(Keyboard.ESCAPE);Do.use('pressLabel').getValue();control.Name + '_press_Escape';
    45;x;keyDown;OperationKind.KEY_DOWN;Do.use(control).keyDown(Keyboard.CONTROL);Do.use('downUpLabel').getValue();control.Name + '_down_Control';
    46;x;keyUp;OperationKind.KEY_UP;Do.use(control).keyUp(Keyboard.CONTROL);Do.use('downUpLabel').getValue();control.Name + '_up_Control';
    47;x;isEnabledTRUE;OperationKind.IS_ENABLED;Do.use(control);Do.use(control).isEnabled();true;
    48;x;isVisibleTRUE;OperationKind.IS_VISIBLE;Do.use(control);Do.use(control).isVisible();true;
    49;x;isEnabledFALSE;OperationKind.IS_ENABLED;Do.use('notEnabledButton');Do.use('notEnabledButton').isEnabled();false;
    50;x;isVisibleFALSE;OperationKind.IS_VISIBLE;Do.use('invisibleButton');Do.use('invisibleButton').isVisible();getExp(plugin,false,false,ErrorKind.ELEMENT_NOT_FOUND);
    51;x;script;OperationKind.SCRIPT;Do.use('countButtonClear').click().script('counter = 99').use('countButton').click();Do.use('countLabel').getValue();getExp(plugin,100,ErrorKind.FEATURE_NOT_SUPPORTED,ErrorKind.FEATURE_NOT_SUPPORTED);
    52;x;dragNDrop;OperationKind.DRAG_N_DROP;Do.use('Slider').setValue(0).dragNdrop(10, 6, 'Slider', 395, 6);Do.use('sliderLabel').getValue();'Slider_50';
    #EndRawTable

    #Action;$Table;$Expression
    TableConsiderColumnsAs;operations;{'Expected','Par','Kind'}


#Id;#TestCase;#Kind;#Depends;#For
EXECUTE;;;;
    #Id;#Global;#Let
    adapter;1;parameter

    #If
    adapter == 'Web'
        #Call;plugin
        RUN;'Web'

    #EndIf

    #If
    adapter == 'Swing'
        #Call;plugin
        RUN;'Swing'

    #EndIf

    #If
    adapter == 'Win'
        #Call;plugin
        RUN;'Win'

    #EndIf

    #Id;#Action;$Decoraded
    RESTBL1;ResultTable;true

    #Action;$Table;$Title;$BeforeTestCase
    TableReport;RESTBL1.Out;'result';'INIT'


#Id;#TestCase;#Kind;#Depends;#For
SUBCASES;;;;
    #Id;#SubCase;controlName;operationKind
    ERRORS;get_expected_errors;controlName;operation.Kind
        #Id;#Let
        thisControl;appCon.getDictionary().getWindow('Main').getControlForName(null, controlName).getBindedClass()

        #Id;#Let
        errorKind;''

        #If
        thisControl.isAllowed(operationKind) == false || appCon.getApplication().getFactory().isAllowed(thisControl, operationKind) == false
            #Id;#Let
            errorKind;ErrorKind.OPERATION_NOT_ALLOWED

        #EndIf

        #If
        appCon.getApplication().getFactory().isSupported(thisControl) == false
            #Id;#Let
            errorKind;ErrorKind.CONTROL_NOT_SUPPORTED

        #EndIf

        #Return
        errorKind

    #EndSubCase

    #Id;#SubCase;controlName;operationName;operationKind;expected;actual;pluginName;result
    PRINT;Print_result;control.Name;operation.Name;operation.Kind;expected;actual;plugin;'Passed'
        #Off;#Action;
        1;Print;pluginName + ' - ' + controlName + ' - ' + result + ' - ' + operationName

        #If
        result.equals('Failed')
            #Action;$Table;Plugin;Control;Operation;Expected;Actual;Result
            TableAddValue;table_result;pluginName;controlName;operationName;expected;actual;result

        #EndIf

    #EndSubCase

    #Id;#SubCase;plugin
    RUN;Run;'Win'
        #Step;#Kind;#For;#Depends
        'start application';;;
            #Id;#Action;Plugin;Control;Operation;Expected;Actual;Result
            TBL1;TableCreate;;;;;;

            #Id;#Global;#Let
            table_result;1;TBL1.Out

            #Action;$Table;$Colored
            TableConsiderColumnsAs;table_result;'Result'

            #If
            plugin == 'Web'
                #Id;#Action;$AppId;Browser;URL
                APPSTR1;ApplicationStart;mockWebApp;mockWebBrowser;mockWebURL

                #Id;#Global;#Let
                appCon;1;APPSTR1.Out

            #EndIf

            #If
            plugin == 'Swing'
                #Id;#Action;$AppId;Jar;Args;MainClass
                APPSTR1;ApplicationStart;mockSwingApp;mockSwingJar;'';mockSwingClass

                #Id;#Global;#Let
                appCon;1;APPSTR1.Out

            #EndIf

            #If
            plugin == 'Win'
                #Id;#Action;$AppId;Exec;WorkDir;Args
                APPSTR1;ApplicationStart;mockWinApp;mockWinExec;mockWinDir;''

                #Id;#Global;#Let
                appCon;1;APPSTR1.Out

            #EndIf

            #Id;#Global;#Let
            failedOwn;1;false

        #EndStep

        #Id;#Let
        num;0

        #ForEach;#In
        control;controls
            #Id;#Let
            num;num + 1

            #If
            control.On.equals('')
                #Continue

            #EndIf

            #Step;#Kind;#For;#Depends
            plugin + ' - '+ control.Name;;;
                #Id;#Global;#Let
                failedList;1;''

                #Id;#Let
                startTime;DateTime.current().getTime()

                #Id;#Let
                failed;false

                #Id;#Let
                field;'DLG.Out.Dummy_'  + control.Name + '_After'

                #Id;#Let
                needNum;-1

                #Id;#Let
                map;new LinkedHashMap()

                #Id;#Let
                expectedErrorsMap;new LinkedHashMap()

                #RepOff;#ForEach;#In
                1;operation;operations
                    #Id;#Let
                    dummy_key;'Dummy_' + control.Name + '_' + operation.Name

                    #Id;#Let
                    needNum;needNum + 1

                    #Id;#Let
                    controlName;control.Name

                    #If
                    operation.On.equals('')
                        #Continue

                    #EndIf

                    #Id;#Let
                    before;Do.use(control.Name).delay(1)

                    #Id;#Let
                    op;operation.Operation

                    #Id;#Let
                    after;operation.After

                    #If
                    operation.Operation.contains('par') || operation.After.contains('par')
                        #If
                        operation.Par != null
                            #Id;#Let
                            op;op.replace('par',operation.Par)

                            #Id;#Let
                            after;after.replace('par',operation.Par)

                        #EndIf

                    #EndIf

                    #If
                    operation.Operation.contains('amount') || operation.After.contains('amount')
                        #Id;#Let
                        op;op.replace('amount',getDelay(plugin).toString())

                    #EndIf

                    // // TODO: this has to remove after controls will be completed successfully
                    #If
                    !operation.Operation.contains('control')
                        #Id;#Let
                        controlName;getControl(operation.Operation)

                    #EndIf

                    // // TODO: this has to remove after controls will be completed successfully
                    #If
                    !operation.After.contains('control')
                        #Id;#Let
                        someControl;getControl(operation.After)

                        #If
                        !someControl.contains('Label')
                            #Id;#Let
                            controlName;someControl

                        #EndIf

                    #EndIf

                    #If
                    operation.Operation.contains('control') || operation.After.contains('control')
                        #Id;#Let
                        after;after.replace('control','\'' + control.Name + '\'')

                        #Id;#Let
                        op;op.replace('control','\'' + control.Name + '\'')

                    #EndIf

                    #If
                    control.Before != null
                        #Id;#Let
                        before;control.Before

                    #EndIf

                    #If
                    op.isEmpty()
                        #Id;#Let
                        op;'Do.delay(1)'

                    #EndIf

                    #Let
                    map.put(dummy_key + '_Before',before)

                    #Let
                    map.put(dummy_key + '_Operation',op)

                    #Let
                    map.put(dummy_key + '_After',after)

                    #Id;#Call;controlName;operationKind
                    expected;ERRORS;controlName;operation.Kind

                    #Let
                    expectedErrorsMap.put(control.Name + '_' + operation.Name,expected)

                #EndForEach

                #Id;#IgnoreErr;#Action;$Dialog;$AppConnection;$Fields;$StopOnFail
                DLG;1;DialogFill;'Main';appCon;map;false

                #RepOff;#ForEach;#In
                1;operation;operations
                    #If
                    plugin.equals('Win') && operation.Kind == OperationKind.SET && control.Name.equals('Spinner')
                        #Action;
                        Print;'TODO: operation \'setValue\' for \'Spinner\' in \'Win\' pluggin was skipped'

                        #Continue

                    #EndIf

                    #If
                    operation.On.equals('')
                        #Continue

                    #EndIf

                    #Id;#Let
                    goToAssert;false

                    #Id;#Let
                    dummy_key;'Dummy_' + control.Name + '_' + operation.Name

                    #Id;#Let
                    actual;DLG.Out.get(dummy_key + '_After')

                    #If
                    DLG.Errors != null && DLG.Errors.get(dummy_key + '_Operation') instanceof MatrixError
                        #Id;#Let
                        actual;DLG.Errors.get(dummy_key + '_Operation').Kind

                    #EndIf

                    #If
                    DLG.Errors != null && DLG.Errors.get(dummy_key + '_After') instanceof MatrixError
                        #Id;#Let
                        actual;DLG.Errors.get(dummy_key + '_After').Kind

                    #EndIf

                    #Id;#Let
                    expected;operation.Expected

                    #If
                    expectedErrorsMap.get(control.Name + '_' + operation.Name) instanceof ErrorKind
                        #Id;#Let
                        expected;expectedErrorsMap.get(control.Name + '_' + operation.Name)

                    #EndIf

                    #Id;#Let
                    goToAssert;true

                    #Assert;#Message
                    expected.toString() == actual.toString();

                    #Id;#Call;controlName;operationName;operationKind;expected;actual;pluginName;result
                    CALL_1;PRINT;control.Name;operation.Name;operation.Kind;expected;actual;plugin;'Passed'

                    #OnError
                        #If
                        goToAssert
                            #Id;#Call;controlName;operationName;operationKind;expected;actual;pluginName;result
                            CALL_1;PRINT;control.Name;operation.Name;operation.Kind;expected;actual;plugin;'Failed'

                        #Else
                            #Id;#Call;controlName;operationName;operationKind;expected;actual;pluginName;result
                            CALL_1;PRINT;control.Name;operation.Name;operation.Kind;'Exception';'Exception';plugin;'Failed'


                        #EndIf

                        #Id;#Let
                        failedList;failedList + operation.Name + ', '

                        #Id;#Let
                        failed;true

                        #Continue


                #EndForEach

                #Id;#Let
                elapsedTime;DateTime.current().getTime() - startTime

                #Id;#Let
                resultControl;'Passed'

                #If
                failed
                    #Id;#Let
                    failed_func;def (str) {String s = str.substring(0, str.length()-2)\u003bString s2 = ' - ' + s\u003breturn s2\u003b}\u003b

                    #Id;#Let
                    failedList;failed_func(failedList)

                    #Id;#Let
                    resultControl;'Failed'

                #EndIf

                #Action;
                Print;resultControl + ' - ' + plugin + ' #' + num +  ' ' + control.Name + ' (' + elapsedTime + ' ms' + ')' + failedList

                #Assert;#Message
                failed == false;'fail'

            #EndStep

            #OnError
                #Id;#Let
                failedOwn;true


        #EndForEach

        #Step;#Kind;#For;#Depends
        'close application';;;
            #Id;#Action;$AppConnection
            APPSTP1;ApplicationStop;appCon

            #Action;$Table;$Title;$BeforeTestCase
            TableReport;table_result;'Result';'INIT'

            #If
            failedOwn
                #Action;
                Print;'Summary: ' + plugin + ' - Failed'

            #Else
                #Action;
                Print;'Summary: ' + plugin + ' - Passed'


            #EndIf

            #Assert;#Message
            failedOwn == false;'failedOwn'

        #EndStep

    #EndSubCase


