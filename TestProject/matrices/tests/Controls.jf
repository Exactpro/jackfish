// ////////////////////////////////////////////////////////////////////////////////
// // Copyright (c) 2009-2017, Exactpro Systems
// // Quality Assurance & Related Software Development for Innovative Trading Systems.
// // London Stock Exchange Group.
// // All rights reserved.
// // This is unpublished, licensed software, confidential and proprietary
// // information which is the property of Exactpro Systems or its licensors.
// ////////////////////////////////////////////////////////////////////////////////
#Id;#TestCase;#Kind;#Depends;#For
INIT;Test case;;;
    #Id;#Global;#Let
    getControl;1;def (str) {String s = str.substring(8)\u003bint index = s.indexOf('\'')\u003bString s2 = s.substring(0, index)\u003breturn s2\u003b}\u003b

    #Id;#Global;#Let
    getExp;1;def (pl, v1, v2, v3, v4, v5) {if(pl == 'InternetExplorer') {return v1\u003b}if(pl == 'Chrome') {return v2\u003b}if(pl == 'Swing') {return v3\u003b}if(pl == 'JavaFx') {return v4\u003b}if(pl == 'Win') {return v5\u003b}}\u003b

    #Id;#Global;#Let
    getDelay;1;def (pl) {if(pl == 'InternetExplorer') {return 1000\u003b}if(pl == 'Chrome') {return 10\u003b}if(pl == 'Swing' || pl == 'JavaFx') {return 1000\u003b}if(pl == 'Win') {return 1000\u003b}}\u003b

    #Id;#Global;#Let
    getNewLine;1;def (pl) {if(pl == 'InternetExplorer') {return '\n'\u003b}if(pl == 'Chrome' || pl == 'JavaFx') {return '\n'\u003b}if(pl == 'Swing') {return '\r\n'\u003b}if(pl == 'Win') {return '\r\n'\u003b}}\u003b

    #Id;#Global;#Let
    getAttr;1;def (pl, c) {if(pl == 'InternetExplorer' || pl == 'Chrome' || pl == 'Swing' || pl == 'Win') {return '\'name\''\u003b}if(pl == 'JavaFx') {if (c=='Dialog') {return '\'title\''} else {return '\'id\''}}}\u003b

    // {Chrome,InternetExplorer,Swing,Win} or All
    #Id;#Global;#RawTable
    controls;1;Table
    @;On;Name;Before;getRowPar;expand;collapse;expandPar;collapsePar;getRow;colorPar;toggle;getAttr;getAttrPar;getValue;selectInt;select;get;setValue;text;textTrue;getList;check;getListPar;getValuePar;selectPar;scrollTo;clickXYPar;clickDoubleXYPar
    0;x;Label;'Do.use(\'protocolClear\').click()';'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';;'CentralLabel';'\'CentralLabel\'';'CentralLabel';;;'CentralLabel';;;;;'CentralLabel';'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'CentralLabel\'';'\'\'';;'2,2';'2,2,MouseAction.LeftDoubleClick'
    1;x;Button;'Do.use(\'protocolClear\').click()';'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';;'Button';'\'Button\'';'Button';;;'Button';;;;;'Button';'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'Button\'';'\'\'';;'2,2';'2,2,MouseAction.LeftDoubleClick'
    2;x;TextBox;'Do.use(\'protocolClear\').click()';'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';;'TextBox';'\'TextBox\'';'Green';;;'Green';;'GreenGreen';'Green';;'Green';'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'Green\'';'\'\'';;'2,2';'2,2,MouseAction.LeftDoubleClick'
    3;x;Any;'Do.use(\'protocolClear\').click()';'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';;'Any';'\'Any\'';;;;;;;;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'\'';'\'\'';;'2,2';'2,2,MouseAction.LeftDoubleClick'
    4;x;CheckBox;'Do.use(\'protocolClear\').click()';'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';getExp(plugin,'true','true','true','true','On');'CheckBox';'\'CheckBox\'';getExp(plugin,true,true,true,true,'On');;;'CheckBox';;;;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';getExp(plugin,'\'true\'','\'true\'','\'true\'','\'true\'','\'On\'');'\'\'';;'2,2';'2,2,MouseAction.LeftDoubleClick'
    5;x;ToggleButton;'Do.use(\'protocolClear\').click()';'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';getExp(plugin,'true','true','true','true','On');'ToggleButton';'\'ToggleButton\'';getExp(plugin,true,true,true,true,'On');;;'ToggleButton';;;;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';getExp(plugin,'\'true\'','\'true\'','\'true\'','\'true\'','\'On\'');'\'\'';;'2,2';'2,2,MouseAction.LeftDoubleClick'
    6;x;ComboBox;'Do.use(\'protocolClear\').click()';'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';;'ComboBox';'\'ComboBox\'';'Green';'Green';'Blue';'Green';;getExp(plugin,'Green','Green','GreenGreen','GreenGreen','GreenGreen');'Green';'[Green, Yellow, Orange, Blue]';'Green';'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'Green\'';'\'Blue\'';control.Name + '_scroll';'2,2';'2,2,MouseAction.LeftDoubleClick'
    7;x;Table;'Do.use(\'protocolClear\').click()';'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';'{Head1=tr_3_td_1, Head2=tr_3_td_2, Head3=tr_3_td_3}';'new Color(246,246,246)';;getExp(plugin,'Table','Table','Table','Table','DataGridView');getExp(plugin,'\'Table\'','\'Table\'','\'Table\'','\'Table\'','\'DataGridView\'');'tr_2_td_2';;;;;getExp(plugin,'tr_2_td_2','tr_2_td_2','Green','Green','Green');getExp(plugin,'tr_2_td_2','tr_2_td_2','Green','Green','Green');;'tr_2_td_2';'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'tr_2_td_2\'';'\'\'';;'2,2';'2,2,MouseAction.LeftDoubleClick'
    8;x;Slider;'Do.use(\'protocolClear\').click().use(\'Slider\').setValue(0)';'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';;'Slider';'\'Slider\'';getExp(plugin,'left: 0%\u003b','left: 0%\u003b',0,0.0,'0');;;;'Slider_30';;;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';getExp(plugin,'\'left: 0%\u003b\'','\'left: 0%\u003b\'','0','0.0','0');'\'\'';;'2,2';'2,2,MouseAction.LeftDoubleClick'
    9;x;RadioButton;'Do.use(\'protocolClear\').click()';'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';getExp(plugin,'true','true','true','true','True');getExp(plugin,'RadioButton','RadioButton','RadioButton','RadioButton','Green');getExp(plugin,'\'RadioButton\'','\'RadioButton\'','\'RadioButton\'','\'RadioButton\'','\'Green\'');getExp(plugin,'false','false','false','false','False');;;'Green';;;;;false;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';getExp(plugin,'\'false\'','\'false\'','\'false\'','\'false\'','\'False\'');'\'\'';;'2,2';'2,2,MouseAction.LeftDoubleClick'
    10;x;ProgressBar;'Do.use(\'protocolClear\').click()';'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';;'ProgressBar';'\'ProgressBar\'';getExp(plugin,10,10,10,0.3,10);;;;;;;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';getExp(plugin,'\'10\'','\'10\'','\'10\'','\'0.3\'','\'10\'');'\'\'';;'2,2';'2,2,MouseAction.LeftDoubleClick'
    11;x;Panel;'Do.use(\'protocolClear\').click()';'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';;'Panel';'\'Panel\'';'Panel';;;'Panel';;'Panel';'Panel';;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'Panel\'';'\'\'';;'2,2';'2,2,MouseAction.LeftDoubleClick'
    12;x;List;getExp(plugin,'Do.use(\'protocolClear\').click()','Do.use(\'protocolClear\').click()','Do.use(\'protocolClear\').click().use(\'List\').select(\'Green\')','Do.use(\'protocolClear\').click().use(\'List\').select(\'Green\')','Do.use(\'protocolClear\').click().use(\'List\').select(\'Green\')');'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';;getExp(plugin,'List','List','List','List','tab2');getExp(plugin,'\'List\'','\'List\'','\'List\'','\'List\'','\'tab2\'');getExp(plugin,'Green\nYellow\nOrange\nBlue','Green\nYellow\nOrange\nBlue','Green','Green','Green');getExp(plugin,'Green\nYellow\nOrange\nBlue','Green\nYellow\nOrange\nBlue','Green','Green','Green');getExp(plugin,'Green\nYellow\nOrange\nBlue','Green\nYellow\nOrange\nBlue','Blue','Blue','Blue');;;;;'[Green, Yellow, Orange, Blue]';true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';getExp(plugin,'\'Green\nYellow\nOrange\nBlue\'','\'Green\nYellow\nOrange\nBlue\'','\'Green\'','\'Green\'','\'Green\'');'\'Blue\'';control.Name + '_scroll';'2,2';'2,2,MouseAction.LeftDoubleClick'
    13;x;Dialog;'Do.use(\'protocolClear\').click()';'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';;'Dialog';'\'Dialog\'';;;;;;;;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'\'';'\'\'';;'50,80';'50,80,MouseAction.LeftDoubleClick'
    14;x;Image;'Do.use(\'protocolClear\').click()';'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';;'Image';'\'Image\'';;;;;;;;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'\'';'\'\'';;'2,2';'2,2,MouseAction.LeftDoubleClick'
    15;x;Wait;'Do.use(\'protocolClear\').click()';'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';;'Wait';'\'Wait\'';;;;;;;;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'\'';'\'\'';;'2,2';'2,2,MouseAction.LeftDoubleClick'
    16;x;ScrollBar;'Do.use(\'protocolClear\').click()';'\'tr_3_td_3\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';;'ScrollBar';'\'ScrollBar\'';getExp(plugin,'','',0,0.0,'0');;;;'ScrollBar_30';;;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';getExp(plugin,'\'\'','\'\'','\'0\'','\'0.0\'','\'0\'');'\'\'';;'2,2';'2,2,MouseAction.LeftDoubleClick'
    17;x;Tree;getExp(plugin,'Do.use(\'protocolClear\').click()','Do.use(\'protocolClear\').click()','Do.use(\'protocolClear\').click().use(\'Tree\').expand(\'//item[@name=\\\'Green\\\']\').select(\'//item[@name=\\\'Green\\\']\')','Do.use(\'protocolClear\').click().use(\'Tree\').expand(\'//item[@name=\\\'Green\\\']\').select(\'//item[@name=\\\'Green\\\']\')','Do.use(\'protocolClear\').click().use(\'Tree\').expand(\'//item[@name=\\\'Green\\\']\').select(\'//item[@name=\\\'Green\\\']\').scrollTo(4)');'\'tr_3_td_3\'';getExp(plugin,'','','Expand_[Green, colors]','colors_expand','colors_expand');getExp(plugin,'','','Collapse_[Green, colors]','colors_collapse','colors_collapse');getExp(plugin,'\'\'','\'\'','\'//item[@name=\\\'colors\\\']\'','\'//item[@name=\\\'colors\\\']\'','\'//item[@name=\\\'colors\\\']\'');getExp(plugin,'\'\'','\'\'','\'//item[@name=\\\'colors\\\']\'','\'//item[@name=\\\'colors\\\']\'','\'//item[@name=\\\'colors\\\']\'');;'new Color(246,246,246)';;'Tree';'\'Tree\'';getExp(plugin,'','','[Green]','[Green]','YellowOrangeBluecolors');getExp(plugin,'','','Green','Green','YellowOrangeBluecolors');getExp(plugin,'','','[Green, Blue]','Blue','Blue');;;;;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'\'';getExp(plugin,'','','\'//item[@name=\\\'Blue\\\']\'','\'//item[@name=\\\'Blue\\\']\'','\'//item[@name=\\\'Blue\\\']\'');control.Name + '_scroll';'2,2';'2,2,MouseAction.LeftDoubleClick'
    18;x;Splitter;'Do.use(\'protocolClear\').click().use(\'Splitter\').setValue(125)';'\'[JTree][Orange]\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';;'Splitter';'\'Splitter\'';125;;;;'Splitter_30';;;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'125\'';'\'\'';;'2,2';'2,2,MouseAction.LeftDoubleClick'
    19;x;Tooltip;'Do.use(\'protocolClear\').click().use(\'Menu2\').move()';'\'[JTree][Orange]\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';;;'\'Tooltip\'';'Tooltip';;;'Tooltip';;;;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'Tooltip\'';'\'\'';;'2,2';'2,2,MouseAction.LeftDoubleClick'
    20;x;Menu;'Do.use(\'protocolClear\').click().use(\'Menu2\').click(200,10)';'\'[JTree][Orange]\'';'MenuItem3_select';'MenuItem2_select';'\'Menu/MenuItem/MenuItem2\'';'\'Menu/MenuItem/MenuItem2\'';;'new Color(246,246,246)';;getExp(plugin,'','','Menu','Menu','Application');getExp(plugin,'\'\'','\'\'','\'Menu\'','\'Menu\'','\'Application\'');;;;getExp(plugin,'','','Menu','Menu','Application');;;;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'\'';'\'\'';;'2,2';'2,2,MouseAction.LeftDoubleClick'
    21;x;MenuItem;getExp(plugin,'Do.use(\'protocolClear\').click()','Do.use(\'protocolClear\').click()','Do.use(\'protocolClear\').click().use(\'Menu2\').click(200,10).click()','Do.use(\'protocolClear\').click().use(\'Menu2\').click(30,60)','Do.use(\'protocolClear\').click().use(\'Menu2\').click(30,60)');'\'[JTree][Orange]\'';'MenuItem3_select';'MenuItem2_select';'\'MenuItem/MenuItem2\'';'\'MenuItem/MenuItem2\'';;'new Color(246,246,246)';;'MenuItem';'\'MenuItem\'';'MenuItem';;;'MenuItem';;;;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'\'';'\'\'';;'2,2';'2,2,MouseAction.LeftDoubleClick'
    22;x;TabPanel;'Do.use(\'protocolClear\').click().use(\'TabPanel\').select(\'Green\')';'\'[JTree][Orange]\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';;'TabPanel';'\'TabPanel\'';'Green';'Green';'Blue';'TabPanel';;;;'[Green, Yellow, Orange, Blue]';true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'Green\'';'\'Blue\'';;'2,2';'2,2,MouseAction.LeftDoubleClick'
    23;x;Spinner;'Do.use(\'protocolClear\').click()';'\'[JTree][Orange]\'';;;'\'Menu2/MenuItem2/MenuItem3\'';'\'Menu2/MenuItem2/MenuItem3\'';;'new Color(246,246,246)';;'Spinner';'\'Spinner\'';getExp(plugin,'','',0,0,'0');;;'Spinner';'Slider_30';;;;true;'new ArrayList([\'Green\',\'Yellow\', \'Orange\',\'Blue\']),false';'\'0\'';'\'\'';;'2,2';'2,2,MouseAction.LeftDoubleClick'
    #EndRawTable

    #Action;$Table;$Expression
    TableConsiderColumnsAs;controls;{'Before','getAttr','getValue','get','setValue','text','textTrue','getList','check','getListPar','getValuePar','getAttrPar','colorPar','getRow','getRowPar','toggle','select','selectInt','selectPar','expandPar','collapsePar','expandPar','collapsePar','expand','collapse','scrollTo','clickXYPar','clickDoubleXYPar'}

    #Id;#Global;#RawTable
    operations;1;Table
    @;On;Name;Kind;Before;Operation;After;Expected;Par
    0;x;check;OperationKind.CHECK;;Do.use(control);Do.use(control).check(par);true;control.getValuePar
    1;x;checkFALSE;OperationKind.CHECK;;Do.use(control);Do.use(control).check(par,false);true;control.getValuePar
    2;x;checkXY;OperationKind.CHECK_XY;;Do.use(control);Do.use(control).check(par,1,1);true;control.getValuePar
    3;x;checkRegexp;OperationKind.CHECK_REGEXP;;Do.use(control);Do.use(control).checkRegexp('(\\w+|\\p{Punct}|\\s)+');true;control.getValuePar
    4;x;checkRegexpFALSE;OperationKind.CHECK_REGEXP;;Do.use(control);Do.use(control).checkRegexp('(\\w+|\\p{Punct}|\\s)+',false);true;control.getValuePar
    5;x;checkRegexpXY;OperationKind.CHECK_REGEXP_XY;;Do.use(control);Do.use(control).checkRegexp('(\\w+|\\p{Punct}|\\s)+',1,1);true;control.getValuePar
    6;x;checkAttr;OperationKind.CHECK_ATTR;;Do.use(control);Do.use(control).checkAttr(attr,par);true;control.getAttrPar
    7;x;checkAttrRegexp;OperationKind.CHECK_ATTR_REGEXP;;Do.use(control);Do.use(control).checkAttrRegexp(attr,'(\\w+|\\p{Punct}|\\s)+',true);true;control.getAttrPar
    8;x;checkList;OperationKind.CHECK_LIST;;Do.use(control);Do.use(control).checkList(par);true;control.getListPar
    9;x;checkColor;OperationKind.CHECK_COLOR_XY;;Do.use('colorButton');Do.use('colorButton').checkColor(5,5,new Color(255,0,0));true;control.colorPar
    10;x;getAttr;OperationKind.GET_ATTR;;Do.use(control);Do.use(control).getAttr(attr);control.getAttr;
    11;x;getValue;OperationKind.GET_VALUE;;Do.use(control);Do.use(control).getValue();control.getValue;
    12;x;getValueXY;OperationKind.GET_VALUE_XY;;Do.use(control);Do.use(control).getValue(1,1);control.getValue;
    13;x;get;OperationKind.GET;;Do.use(control);Do.use(control).get();control.get;
    14;x;click;OperationKind.CLICK;;Do.use(control).click();Do.use('centralLabel').getValue();control.Name + '_click';
    15;x;doubleClick;OperationKind.CLICK_XY;;Do.use(control).click(par);Do.use('centralLabel').getValue();control.Name + '_double_click';control.clickDoubleXYPar
    16;x;clickXY;OperationKind.CLICK_XY;;Do.use(control).delay(amount).click(par);Do.use('centralLabel').getValue();control.Name + '_click';control.clickXYPar
    17;x;forech;OperationKind.FOREACH;;Do.use(control).foreach(Do.click(par));Do.use('centralLabel').getValue();control.Name + '_double_click';control.clickDoubleXYPar
    18;x;setValue;OperationKind.SET;;Do.use(control).setValue(30);Do.use('sliderLabel').getValue();control.setValue;
    19;x;text;OperationKind.TEXT;;Do.use(control).text('Green');Do.use(control).get();control.text;
    20;x;textTrue;OperationKind.TEXT;;Do.use(control).text('Green',true);Do.use(control).get();control.textTrue;
    21;x;textXY;OperationKind.TEXT_XY;;Do.use(control).text('Green',1,1);Do.use(control).getValue(1,1);control.text;
    22;x;push;OperationKind.PUSH;;Do.use(control).push();Do.use('pushLabel').getValue();control.Name + '_push';
    23;x;getList;OperationKind.GET_LIST;;Do.use(control);Do.use(control).getList();control.getList;
    24;x;toggle;OperationKind.TOGGLE;;Do.use(control).toggle(true).toggle(false).toggle(true);Do.use(control).getValue();control.toggle;
    25;x;selectSTRING;OperationKind.SELECT;;Do.use(control).select(par).delay(amount);Do.use(control).getValue();control.select;control.selectPar
    26;x;selectINT;OperationKind.SELECT_BY_INDEX;;Do.use(control).select(0).delay(amount);Do.use(control).getValue();control.selectInt;
    27;x;count;OperationKind.COUNT;;Do.use(control);Do.use(control).count();1;
    28;x;use;OperationKind.USE;;Do.use(control);Do.use(control).use(0).count();1;
    29;x;move;OperationKind.MOVE;;Do.use(control).move();Do.use('moveLabel').getValue();control.Name + '_move';
    30;x;moveXY;OperationKind.MOVE_XY;;Do.use(control).move(1,1);Do.use('moveLabel').getValue();control.Name + '_move';
    31;x;getRectangle;OperationKind.GET_RECTANGLE;;Do.use('colorButton');Do.use('colorButton').getRectangle();'java.awt.Rectangle[x=550,y=800,width=100,height=25]';'
    32;x;getRow;OperationKind.GET_ROW;;Do.use(control);Do.use(control).getRow(new StringCondition('Head3',par));control.getRow;control.getRowPar
    33;x;getRowIndexes;OperationKind.GET_ROW_INDEXES;;Do.use(control);Do.use(control).getRowIndexes(new StringCondition('Head3',par));'[2]';control.getRowPar
    34;x;getRowByIndex;OperationKind.GET_ROW_BY_INDEX;;Do.use(control);Do.use(control).getRowByIndex(2);control.getRow;
    35;x;getRowWithColor;OperationKind.GET_ROW_WITH_COLOR;;Do.use(control);Do.use(control).getRowWithColor(2);getExp(plugin,'{Head1=value=\'tr_3_td_1\', color=Color[51, 51, 51], backColor=Color[255, 255, 255], Head2=value=\'tr_3_td_2\', color=Color[51, 51, 51], backColor=Color[255, 255, 255], Head3=value=\'tr_3_td_3\', color=Color[51, 51, 51], backColor=Color[255, 255, 255]}','{Head1=value=\'tr_3_td_1\', color=Color[51, 51, 51], backColor=Color[255, 255, 255], Head2=value=\'tr_3_td_2\', color=Color[51, 51, 51], backColor=Color[255, 255, 255], Head3=value=\'tr_3_td_3\', color=Color[51, 51, 51], backColor=Color[255, 255, 255]}','{Head1=value=\'tr_3_td_1\', color=Color[51, 51, 51], backColor=Color[255, 255, 255], Head2=value=\'tr_3_td_2\', color=Color[51, 51, 51], backColor=Color[255, 255, 255], Head3=value=\'tr_3_td_3\', color=Color[51, 51, 51], backColor=Color[255, 255, 255]}','{Head1=value=\'tr_3_td_1\', color=Color[51, 51, 51], backColor=Color[255, 255, 255], Head2=value=\'tr_3_td_2\', color=Color[51, 51, 51], backColor=Color[255, 255, 255], Head3=value=\'tr_3_td_3\', color=Color[51, 51, 51], backColor=Color[255, 255, 255]}',ErrorKind.FEATURE_NOT_SUPPORTED);
    36;x;getColor;OperationKind.GET_COLOR_XY;;Do.use('colorButton');Do.use('colorButton').getColor(5,5);'java.awt.Color[r=255,g=0,b=0]';
    37;x;getTableSize;OperationKind.GET_TABLE_SIZE;;Do.use(control);Do.use(control).getTableSize();3;
    38;x;getTable;OperationKind.GET_TABLE;;Do.use(control);Do.use(control).getTable();'Table [Head1, Head2, Head3]:3';
    39;x;expand;OperationKind.EXPAND;;Do.use(control).expand(par);Do.use('selectLabel').getValue();control.expand;control.expandPar
    40;x;collapse;OperationKind.COLLAPSE;;Do.use(control).collapse(par);Do.use('selectLabel').getValue();control.collapse;control.collapsePar
    41;x;wait;OperationKind.WAIT;;Do.use('buttonShowArea').click().wait('buttonHideArea', 10000, true);Do.use('buttonHideArea').get().click();'hideButton';
    42;x;delay;OperationKind.DELAY;;Do.use('buttonShowArea').click().delay(100);Do.use('buttonHideArea').get().click();'hideButton';
    43;x;repeat;OperationKind.REPEAT;Do.use('countButtonClear').click();Do.use('countButton').repeat(2, Do.click());Do.use('countLabel').getValue();2;
    44;x;press;OperationKind.PRESS;Do.use('countButtonClear').click();Do.use(control).press(Keyboard.A);Do.use('protocolText').getValue();getExp(plugin,control.Name + '_down_65' + getNewLine(plugin) + control.Name + '_press_97' + getNewLine(plugin) + control.Name + '_up_65',control.Name + '_down_65' + getNewLine(plugin) + control.Name + '_press_97' + getNewLine(plugin) + control.Name + '_up_65',control.Name + '_down_65' + getNewLine(plugin) + control.Name + '_press_65' + getNewLine(plugin) + control.Name + '_up_65',control.Name + '_down_65' + getNewLine(plugin) + control.Name + '_press_97' + getNewLine(plugin) + control.Name + '_up_65',control.Name + '_down_65' + getNewLine(plugin) + control.Name + '_press_97' + getNewLine(plugin) + control.Name + '_up_65');
    45;x;keyDown;OperationKind.KEY_DOWN;Do.use('countButtonClear').click();Do.use(control).keyDown(Keyboard.SHIFT).press(Keyboard.A).keyUp(Keyboard.SHIFT);Do.use('protocolText').getValue();control.Name + '_down_16' + getNewLine(plugin) + control.Name + '_down_65' + getNewLine(plugin) + control.Name + '_press_65' + getNewLine(plugin) + control.Name + '_up_65' + getNewLine(plugin) + control.Name + '_up_16';
    46;x;keyUp;OperationKind.KEY_UP;Do.use('countButtonClear').click();Do.use(control).keyDown(Keyboard.SHIFT).press(Keyboard.A).keyUp(Keyboard.SHIFT);Do.use('protocolText').getValue();control.Name + '_down_16' + getNewLine(plugin) + control.Name + '_down_65' + getNewLine(plugin) + control.Name + '_press_65' + getNewLine(plugin) + control.Name + '_up_65' + getNewLine(plugin) + control.Name + '_up_16';
    47;x;isEnabledTRUE;OperationKind.IS_ENABLED;;Do.use(control);Do.use(control).isEnabled();true;
    48;x;isVisibleTRUE;OperationKind.IS_VISIBLE;;Do.use(control);Do.use(control).isVisible();true;
    49;x;isEnabledFALSE;OperationKind.IS_ENABLED;;Do.use('notEnabledButton');Do.use('notEnabledButton').isEnabled();false;
    50;x;isVisibleFALSE;OperationKind.IS_VISIBLE;;Do.use('invisibleButton');Do.use('invisibleButton').isVisible();getExp(plugin,false,false,false,ErrorKind.ELEMENT_NOT_FOUND,ErrorKind.ELEMENT_NOT_FOUND);
    51;x;script;OperationKind.SCRIPT;;Do.use('countButtonClear').click().script('counter = 99').use('countButton').click();Do.use('countLabel').getValue();getExp(plugin,100,100,ErrorKind.FEATURE_NOT_SUPPORTED,ErrorKind.FEATURE_NOT_SUPPORTED,ErrorKind.FEATURE_NOT_SUPPORTED);
    52;x;dragNDrop;OperationKind.DRAG_N_DROP;;Do.use('Slider').setValue(0).dragNdrop(10, 6, 'Slider', 395, 6);Do.use('sliderLabel').getValue();'Slider_50';
    53;x;getTree;OperationKind.GET_TREE;;Do.use(control);Do.use(control).getTree();'Xml[#document: null]';
    54;x;apply;OperationKind.APPLY;;Do.use(control).apply('//item[@name=\'colors\']',Do.click(-10,10,MouseAction.LeftClick));Do.use('selectLabel').getValue();control.expand;
    55;x;scrollTo;OperationKind.SCROLL_TO;Do.use(control).click(210,5,MouseAction.LeftClick);Do.use(control).scrollTo(3).delay(amount);Do.use('protocolText').getValue();control.scrollTo;
    #EndRawTable

    #Action;$Table;$Expression
    TableConsiderColumnsAs;operations;{'Expected','Par','Kind'}


#Id;#TestCase;#Kind;#Depends;#For
EXECUTE;;;;
    #Assert;#Message
    isdef parameter && parameter >= 0 && parameter <=3;'Parater for the matrix shoud be defind and has value from 0 to 4. Actual : ' + parameter

    #Id;#Let
    allPlugins;['InternetExplorer', 'Win', 'Swing', 'Chrome']

    #Id;#Let
    pluginName;allPlugins[parameter]

    #Id;#Call;plugin
    CALL_3;RUN;pluginName

    #Id;#Action;$Decoraded
    RESTBL1;ResultTable;true

    #Action;$Table;$Title;$BeforeTestCase
    TableReport;RESTBL1.Out;'result';'INIT'


#Id;#TestCase;#Kind;#Depends;#For
SUBCASES;;;;
    #Id;#SubCase;controlName;operationKind
    ERRORS;get_expected_errors;controlName;operation.Kind
        #Id;#Let
        thisControl;appCon.getDictionary().getWindow('Main').getControlForName(null, controlName).getBindedClass()

        #Id;#Let
        errorKind;''

        #If
        thisControl.isAllowed(operationKind) == false || appCon.getApplication().getFactory().isAllowed(thisControl, operationKind) == false
            #Id;#Let
            errorKind;ErrorKind.OPERATION_NOT_ALLOWED

        #EndIf

        #If
        appCon.getApplication().getFactory().isSupported(thisControl) == false
            #Id;#Let
            errorKind;ErrorKind.CONTROL_NOT_SUPPORTED

        #EndIf

        #Return
        errorKind

    #EndSubCase

    #Id;#SubCase;controlName;operationName;operationKind;expected;actual;pluginName;result
    PRINT;Print_result;control.Name;operation.Name;operation.Kind;expected;actual;plugin;'Passed'
        #Off;#Action;
        1;Print;pluginName + ' - ' + controlName + ' - ' + result + ' - ' + operationName

        #If
        result.equals('Failed')
            #Action;$Table;Plugin;Control;Operation;Expected;Actual;Result
            TableAddValue;table_result;pluginName;controlName;operationName;expected;actual;result

        #Else
            #Off;#Action;$Table;Plugin;Control;Operation;Expected;Actual;Result
            1;TableAddValue;table_result;pluginName;controlName;operationName;expected;actual;result


        #EndIf

    #EndSubCase

    #Id;#SubCase;plugin
    RUN;Run;pluginName
        #Step;#Kind;#For;#Depends
        'start application';;;
            #Id;#Action;Plugin;Control;Operation;Expected;Actual;Result
            TBL1;TableCreate;;;;;;

            #Id;#Global;#Let
            table_result;1;TBL1.Out

            #Action;$Table;$Colored
            TableConsiderColumnsAs;table_result;'Result'

            #If
            plugin == 'JavaFx'
                #Id;#Action;$AppId;Jar;MainClass
                APPSTR1;ApplicationStart;mockJavaFxApp;mockJavaFxJar;mockJavaFxMainClass

                #Id;#Global;#Let
                appCon;1;APPSTR1.Out

            #EndIf

            #If
            plugin == 'InternetExplorer'
                #Id;#Action;$AppId;Browser;URL
                APPSTR1;ApplicationStart;mockWebApp;'InternetExplorer';mockWebURL

                #Id;#Global;#Let
                appCon;1;APPSTR1.Out

            #EndIf

            #If
            plugin == 'Chrome'
                #Id;#Action;$AppId;Browser;URL
                APPSTR1;ApplicationStart;mockWebApp;'Chrome';mockWebURL

                #Id;#Global;#Let
                appCon;1;APPSTR1.Out

            #EndIf

            #If
            plugin == 'Swing'
                #Id;#Action;$AppId;Jar;Args;MainClass
                APPSTR1;ApplicationStart;mockSwingApp;mockSwingJar;'';mockSwingClass

                #Id;#Global;#Let
                appCon;1;APPSTR1.Out

            #EndIf

            #If
            plugin == 'Win'
                #Id;#Action;$AppId;Exec;WorkDir;Args
                APPSTR1;ApplicationStart;mockWinApp;mockWinExec;mockWinDir;''

                #Id;#Global;#Let
                appCon;1;APPSTR1.Out

            #EndIf

            #Id;#Global;#Let
            failedOwn;1;false

        #EndStep

        #Id;#Let
        num;0

        #ForEach;#In
        control;controls
            #Id;#Let
            num;num + 1

            #If
            control.On.equals('')
                #Continue

            #EndIf

            #Step;#Kind;#For;#Depends
            plugin + ' - '+ control.Name;;;
                #Id;#Global;#Let
                failedList;1;''

                #Id;#Let
                startTime;DateTime.current().getTime()

                #Id;#Let
                failed;false

                #Id;#Let
                field;'DLG.Out.Dummy_'  + control.Name + '_After'

                #Id;#Let
                needNum;-1

                #Id;#Let
                map;new LinkedHashMap()

                #Id;#Let
                expectedErrorsMap;new LinkedHashMap()

                #RepOff;#ForEach;#In
                1;operation;operations
                    #Id;#Let
                    dummy_key;'Dummy_' + control.Name + '_' + operation.Name

                    #Id;#Let
                    needNum;needNum + 1

                    #Id;#Let
                    controlName;control.Name

                    #If
                    operation.On.equals('')
                        #Continue

                    #EndIf

                    #Id;#Let
                    beforeControl;Do.use(control.Name).delay(1)

                    #Id;#Let
                    beforeOperation;Do.use(control.Name).delay(1)

                    #Id;#Let
                    op;operation.Operation

                    #Id;#Let
                    after;operation.After

                    #If
                    operation.Operation.contains('attr') || operation.After.contains('attr')
                        #Id;#Let
                        op;op.replace('attr',getAttr(plugin, control.Name))

                        #Id;#Let
                        after;after.replace('attr',getAttr(plugin, control.Name))

                    #EndIf

                    #If
                    operation.Operation.contains('par') || operation.After.contains('par')
                        #If
                        operation.Par != null
                            #Id;#Let
                            op;op.replace('par',operation.Par)

                            #Id;#Let
                            after;after.replace('par',operation.Par)

                        #EndIf

                    #EndIf

                    #If
                    operation.Operation.contains('amount') || operation.After.contains('amount')
                        #Id;#Let
                        op;op.replace('amount',getDelay(plugin).toString())

                    #EndIf

                    // // TODO: this has to remove after controls will be completed successfully
                    #If
                    !operation.Operation.contains('control')
                        #Id;#Let
                        controlName;getControl(operation.Operation)

                    #EndIf

                    // // TODO: this has to remove after controls will be completed successfully
                    #If
                    !operation.After.contains('control')
                        #Id;#Let
                        someControl;getControl(operation.After)

                        #If
                        !someControl.contains('Label') && !someControl.contains('protocolText')
                            #Id;#Let
                            controlName;someControl

                        #EndIf

                    #EndIf

                    #If
                    operation.Operation.contains('control')
                        #Id;#Let
                        op;op.replace('control','\'' + control.Name + '\'')

                    #EndIf

                    #If
                    operation.After.contains('control')
                        #Id;#Let
                        after;after.replace('control','\'' + control.Name + '\'')

                    #EndIf

                    #If
                    !Str.IsNullOrEmpty(operation.Before)
                        #Id;#Let
                        beforeOperation;operation.Before

                    #EndIf

                    #If
                    operation.Before.contains('control')
                        #Id;#Let
                        beforeOperation;operation.Before

                        #Id;#Let
                        beforeOperation;beforeOperation.replace('control','\'' + control.Name + '\'')

                    #EndIf

                    #If
                    !Str.IsNullOrEmpty(control.Before)
                        #Id;#Let
                        beforeControl;control.Before

                    #EndIf

                    #If
                    op.isEmpty()
                        #Id;#Let
                        op;'Do.delay(1)'

                    #EndIf

                    #Let
                    map.put(dummy_key + '_BeforeControl',beforeControl)

                    #Let
                    map.put(dummy_key + '_BeforeOperation',beforeOperation)

                    #Let
                    map.put(dummy_key + '_Operation',op)

                    #Let
                    map.put(dummy_key + '_After',after)

                    #Id;#Call;controlName;operationKind
                    expected;ERRORS;controlName;operation.Kind

                    #Let
                    expectedErrorsMap.put(control.Name + '_' + operation.Name,expected)

                #EndForEach

                #Id;#IgnoreErr;#Action;$Dialog;$AppConnection;$Fields;$StopOnFail
                DLG;1;DialogFill;'Main';appCon;map;false

                #RepOff;#ForEach;#In
                1;operation;operations
                    #If
                    plugin.equals('Win') && operation.Kind == OperationKind.SET && control.Name.equals('Spinner')
                        #Action;
                        Print;'TODO: operation \'setValue\' for \'Spinner\' in \'Win\' pluggin was skipped'

                        #Continue

                    #EndIf

                    #If
                    operation.On.equals('')
                        #Continue

                    #EndIf

                    #Id;#Let
                    goToAssert;false

                    #Id;#Let
                    dummy_key;'Dummy_' + control.Name + '_' + operation.Name

                    #Id;#Let
                    actual;DLG.Out.get(dummy_key + '_After')

                    #If
                    DLG.Errors != null && DLG.Errors.get(dummy_key + '_Operation') instanceof MatrixError
                        #Id;#Let
                        actual;DLG.Errors.get(dummy_key + '_Operation').Kind

                    #EndIf

                    #If
                    DLG.Errors != null && DLG.Errors.get(dummy_key + '_After') instanceof MatrixError
                        #Id;#Let
                        actual;DLG.Errors.get(dummy_key + '_After').Kind

                    #EndIf

                    #Id;#Let
                    expected;operation.Expected

                    #If
                    expectedErrorsMap.get(control.Name + '_' + operation.Name) instanceof ErrorKind
                        #Id;#Let
                        expected;expectedErrorsMap.get(control.Name + '_' + operation.Name)

                    #EndIf

                    #Id;#Let
                    goToAssert;true

                    #Assert;#Message
                    expected.toString() == actual.toString();

                    #Id;#Call;controlName;operationName;operationKind;expected;actual;pluginName;result
                    CALL_1;PRINT;control.Name;operation.Name;operation.Kind;expected;actual;plugin;'Passed'

                    #OnError
                        #If
                        goToAssert
                            #Id;#Call;controlName;operationName;operationKind;expected;actual;pluginName;result
                            CALL_1;PRINT;control.Name;operation.Name;operation.Kind;expected;actual;plugin;'Failed'

                        #Else
                            #Id;#Call;controlName;operationName;operationKind;expected;actual;pluginName;result
                            CALL_1;PRINT;control.Name;operation.Name;operation.Kind;'Exception';'Exception';plugin;'Failed'


                        #EndIf

                        #Id;#Let
                        failedList;failedList + operation.Name + ', '

                        #Id;#Let
                        failed;true

                        #Continue


                #EndForEach

                #Id;#Let
                elapsedTime;DateTime.current().getTime() - startTime

                #Id;#Let
                resultControl;'Passed'

                #If
                failed
                    #Id;#Let
                    failed_func;def (str) {String s = str.substring(0, str.length()-2)\u003bString s2 = ' - ' + s\u003breturn s2\u003b}\u003b

                    #Id;#Let
                    failedList;failed_func(failedList)

                    #Id;#Let
                    resultControl;'Failed'

                #EndIf

                #Action;
                Print;resultControl + ' - ' + plugin + ' #' + num +  ' ' + control.Name + ' (' + elapsedTime + ' ms' + ')' + failedList

                #Assert;#Message
                failed == false;'Please see extended information about which operations for this control was failed in the table above.'

            #EndStep

            #OnError
                #Id;#Let
                failedOwn;true


        #EndForEach

        #Step;#Kind;#For;#Depends
        'close application';;;
            #Id;#Action;$AppConnection
            APPSTP1;ApplicationStop;appCon

            #Action;$Table;$Title;$BeforeTestCase
            TableReport;table_result;'Result';'INIT'

            #If
            failedOwn
                #Action;
                Print;'Summary: ' + plugin + ' - Failed'

            #Else
                #Action;
                Print;'Summary: ' + plugin + ' - Passed'


            #EndIf

            #Assert;#Message
            failedOwn == false;'Please see extended information about which controls and operations were failed in the table above.'

        #EndStep

    #EndSubCase


