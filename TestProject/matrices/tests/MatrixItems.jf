#Id;#TestCase;#Kind;#Depends;#For
VISIBILITY;Variable visibility;Never;;
    // ======================================================================
    // var files visibility
    #Assert;#Message
    isdef TRUE;'Should be defined in vars.ini'

    // ======================================================================
    // local vars have priority
    #Id;#Global;#Let
    mixed;1;100

    #Assert;#Message
    mixed == 100;'Expected=' + 100 + ' Actual=' + mixed

    #Id;#Let
    mixed;150

    #Assert;#Message
    mixed == 150;'Expected=' + 150 + ' Actual=' + mixed

    #Id;#Let
    local1;123

    // ======================================================================
    // override global value
    #Step;#Kind;#For;#Depends
    ;;;
        // 
        #Assert;#Message
        local1 == 123;'Expected=' + 123 + ' Actual=' + local1

        // still the same
        #Assert;#Message
        mixed == 150;'Expected=' + 150 + ' Actual=' + mixed

        #Id;#Let
        mixed;300

        // 
        #Assert;#Message
        mixed == 300;'Expected=' + 150 + ' Actual=' + mixed

        #Id;#Global;#Let
        global;1;1000

        #Id;#Let
        local;777

    #EndStep

    #Assert;#Message
    mixed == 150;'Expected=' + 150 + ' Actual=' + mixed

    #Assert;#Message
    global == 1000;'Expected=' + 1000 + ' Actual=' + global

    #Assert;#Message
    !(isdef local);'Shouldnt be defined here'

    #Id;#Let
    newlocal;888

    // ======================================================================
    // visibility subcase results
    #Id;#Let
    additional;555

    // 
    #Id;#Global;#Call;#additional
    callResGlobal;1;TestSub;1

    #Assert;#Message
    callResGlobal == 101;'Should be defined here'

    // 
    #Id;#Call;#additional
    callRes;TestSub;2

    #Assert;#Message
    callRes == 102;'Should be defined here'

    #Assert;#Message
    additional == 555;'Should be defined here'

    #Id;#SubCase;#additional
    TestSub;;global3
        #Assert;#Message
        additional != 555;'Expected !=' + 555 + ' Actual=' + additional

        #Return
        100 + additional

    #EndSubCase


#Id;#TestCase;#Kind;#Depends;#For
VISIBILITY;Variable visibility continue;;;
    #SetHandler;#Kind
    onStepStartLocal;OnStepStart

    #Assert;#Message
    mixed == 100;'Expected=' + 100 + ' Actual=' + mixed

    #Assert;#Message
    !(isdef newlocal);'Shouldnt be defined here'

    #Assert;#Message
    callResGlobal == 101;'Should be defined here'

    #Assert;#Message
    !(isdef callRes);'Shouldnt be defined here'

    // ======================================================================
    // Step var visibility
    #Id;#Let
    local2;1

    #Id;#Global;#Let
    global2;1;2

    #Action;#local3
    Vars;3

    #Global;#Action;#global3
    1;Vars;4

    #Step;#Kind;#For;#Depends
    ;;;
        #Assert;#Message
        local2 == 1;'Should be defined here'

        #Assert;#Message
        global2 == 2;'Should be defined here'

        #Assert;#Message
        local3 == 3;'Should be defined here'

        #Assert;#Message
        global3 == 4;'Should be defined here'

        #Call;#additional
        TestSub;local2

        #Call;#additional
        TestSub;global2

        #Call;#additional
        TestSub;local3

        #Call;#additional
        TestSub;global3

        #Id;#Let
        stepLocal;3

        #Id;#Global;#Let
        stepGlobal;1;4

    #EndStep

    #Assert;#Message
    local2 == 1;'Should be defined here'

    #Assert;#Message
    global2 == 2;'Should be defined here'

    #Assert;#Message
    !(isdef stepLocal);'Shouldnt be defined here'

    #Assert;#Message
    stepGlobal == 4;'Should be defined here'

    #Id;#SubCase
    onStepStartLocal;onStepStartLocal
        #Assert;#Message
        isdef global2;'Should be defined'

        #Assert;#Message
        !(isdef local2);'Shouldnt be defined'

    #EndSubCase


