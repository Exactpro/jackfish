////////////////////////////////////////////////////////////////////////////////
// Copyright 2009-2018 Exactpro (Exactpro Systems Limited)
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
////////////////////////////////////////////////////////////////////////////////
#Id;#TestCase;#Kind;#Depends;#For
T1;T1;;;
    #Id;#Global;#Let
    t;1;1

    #Id;#Global;#Let
    s;1;0

    #Id;#Global;#Let
    res;1;''

    #SetHandler;#Kind
    onStepStart;OnStepStart

    #SetHandler;#Kind
    onStepFinish;OnStepFinish

    #SetHandler;#Kind
    onStepError;OnStepError

    #Step;#Kind;#For;#Depends
    'S1';;;
        #Id;#Global;#Let
        s;1;1

    #EndStep

    #Step;#Kind;#For;#Depends
    'S2';;;
        #Id;#Global;#Let
        s;1;2

        #Fail
        's2'

        #OnError
            #Id;#Global;#Let
            res;1;res + 'OnError '


    #EndStep

    #SetHandler;#Kind
    ;OnStepError

    #Step;#Kind;#For;#Depends
    'S3';;;
        #Id;#Global;#Let
        s;1;3

        #Fail
        's3'

        #OnError
            #Id;#Global;#Let
            res;1;res + err.Message+'e6 '


    #EndStep

    #Id;#SubCase
    onStepStart;OnStepStart
        #Id;#Global;#Let
        res;1;res + 'SS' + (s+1) + ' '

    #EndSubCase

    #Id;#SubCase
    onStepFinish;OnStepFinish
        #Id;#Global;#Let
        res;1;res + 'SF' + s + ' '

    #EndSubCase

    #Id;#SubCase;errr
    onStepError;OnStepError;
        #Id;#Global;#Let
        res;1;res + 'SE' + s + errr.Message + ' '

    #EndSubCase


#Id;#TestCase;#Kind;#Depends;#For
T2;T2;;;
    #Id;#Global;#Let
    t;1;2

    #SetHandler;#Kind
    onStart;OnTestCaseStart

    #SetHandler;#Kind
    onFinish;OnTestCaseFinish

    #SetHandler;#Kind
    onError;OnTestCaseError

    #Id;#SubCase
    onStart;OnStart
        #Id;#Global;#Let
        res;1;res + 'S' + (t+1) + ' '

    #EndSubCase

    #Id;#SubCase
    onFinish;OnFinish
        #Id;#Global;#Let
        res;1;res + 'F' + t + ' '

    #EndSubCase

    #Id;#SubCase;errr
    onError;OnError;
        #Id;#Global;#Let
        res;1;res + 'E' + t + errr.Message + ' '

    #EndSubCase


#Id;#TestCase;#Kind;#Depends;#For
T3;T3;;;
    #Id;#Global;#Let
    t;1;3

    #Fail
    'f3'


#Id;#TestCase;#Kind;#Depends;#For
T4;T4;;;
    #Id;#Global;#Let
    t;1;4

    #SetHandler;#Kind
    ;OnTestCaseStart

    #SetHandler;#Kind
    ;OnTestCaseFinish


#Id;#TestCase;#Kind;#Depends;#For
T5;T5;;;
    #Id;#Global;#Let
    t;1;5

    #Fail
    'f5'

    #OnError
        #Id;#Global;#Let
        res;1;res + err.Message+'e5 '



#Id;#TestCase;#Kind;#Depends;#For
T6;T6;;;
    #Id;#Global;#Let
    t;1;6

    #SetHandler;#Kind
    ;OnTestCaseError

    #Fail
    'f6'

    #OnError
        #Id;#Global;#Let
        res;1;res + err.Message+'e6 '



#Id;#TestCase;#Kind;#Depends;#For
T7;T7;;;
    #Id;#Global;#Let
    t;1;7

    #Action;res
    Print;res

    #Assert;#Message
    res == 'SS1 SF1 SS2 OnError SS3 s3e6 F2 S3 E3f3 S4 f5e5 f6e6 ';'test failed'



