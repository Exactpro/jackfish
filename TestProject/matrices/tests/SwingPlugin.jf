#TestCase;#Kind;#Depends;#For
Prepare;;;
    #Id;#Global;#Let
    plugin;1;'Swing'


#TestCase;#Kind;#Depends;#For
Application start;Never;;
    #Step;#Kind;#For;#Depends
    'App start without any';;;
        #Id;#Action;#Assert;$AppId
        APPSTR2;ApplicationStart;This.Kind == ErrorKind.EXCEPTION && This.Result == Result.Failed;'SWING'

    #EndStep

    #Step;#Kind;#For;#Depends
    'App start without jar';;;
        #Id;#Action;#Assert;$AppId;MainClass
        APPSTR2;ApplicationStart;This.Kind == ErrorKind.EXCEPTION && This.Result == Result.Failed;'SWING';

    #EndStep

    #Step;#Kind;#For;#Depends
    'App start with invalid class name';;;
        #Id;#Action;#Assert;$AppId;Jar;MainClass
        APPSTR2;ApplicationStart;This.Kind == ErrorKind.EXCEPTION && This.Result == Result.Failed;'SWING';mockSwingJar;new Date()

    #EndStep

    #Step;#Kind;#For;#Depends
    'App start with invalid jar file';;;
        #Id;#Action;#Assert;$AppId;Jar;MainClass
        APPSTR2;ApplicationStart;This.Kind == ErrorKind.EXCEPTION && This.Result == Result.Failed;'SWING';new Date();mockSwingClass

    #EndStep

    #Step;#Kind;#For;#Depends
    'App start with valid parameters';;;
        #Id;#Action;$AppId;Jar;MainClass
        APPSTR1;ApplicationStart;'SWING';mockSwingJar;mockSwingClass

        #Id;#Action;$AppConnection
        APPSTP1;ApplicationStop;APPSTR1.Out

    #EndStep


// //TODO need add tests
#TestCase;#Kind;#Depends;#For
Appliaction connect;;;

#TestCase;#Kind;#Depends;#For
Application (Get properties, Move, Resize);;;
    #Id;#Step;#Kind;#For;#Depends
    Start;;;;
        #Id;#Global;#Call;plugin
        appCon;1;testLib.runPlugin;plugin

    #EndStep

    #Step;#Kind;#For;#Depends
    'Get properties';;;
        #Id;#Action;$AppConnection;Title
        APPPAR1;ApplicationGetProperties;appCon;

        #Assert;#Message
        APPPAR1.Out.Title == 'frame0';'Actula name : ' +APPPAR1.Out.Title

    #EndStep

    #Step;#Kind;#For;#Depends
    'Move';;;
        #Action;$X;$Y;$AppConnection
        ApplicationMove;10;10;appCon

    #EndStep

    #Step;#Kind;#For;#Depends
    'Resize';;;
        #Action;$Resize;$AppConnection
        ApplicationResize;Resize.Minimize;appCon

        #Action;$Resize;$AppConnection
        ApplicationResize;Resize.Maximize;appCon

        #Action;$Resize;$AppConnection
        ApplicationResize;Resize.Normal;appCon

        #Id;#Action;$AppConnection;$Height;$Width
        APPSZ1;ApplicationResize;appCon;200;200

    #EndStep

    #Id;#Step;#Kind;#For;#Depends
    Stop;;;;
        #Id;#Action;$AppConnection
        APPSTP1;ApplicationStop;appCon

    #EndStep


#TestCase;#Kind;#Depends;#For
Appliaction negative;;;
    #Id;#Step;#Kind;#For;#Depends
    Start;;;;
        #Id;#Global;#Call;plugin
        appCon;1;testLib.runPlugin;plugin

    #EndStep

    #Id;#Step;#Kind;#For;#Depends
    Negative;;;;
        #Id;#Action;#Assert;$AppConnection
        APPR1;ApplicationRefresh;This.Kind == ErrorKind.EXCEPTION && This.Result == Result.Failed;appCon

        #Id;#Action;#Assert;$Navigate;$AppConnection
        APPPNVG1;ApplicationNavigate;This.Kind == ErrorKind.EXCEPTION && This.Result == Result.Failed;NavigateKind.BACK;appCon

        #Id;#Action;#Assert;$AppConnection
        APPNI1;ApplicationNewInstance;This.Kind == ErrorKind.EXCEPTION && This.Result == Result.Failed;appCon

        #Id;#Action;#Assert;$AppConnection
        APPCW1;ApplicationCloseWindow;This.Kind == ErrorKind.EXCEPTION && This.Result == Result.Failed;appCon

        #Id;#Action;#Assert;$AppConnection
        APPSW1;ApplicationSwitchTo;This.Kind == ErrorKind.EXCEPTION && This.Result == Result.Failed;appCon

        #Id;#Action;$AppConnection
        APPSTP1;ApplicationStop;appCon

    #EndStep

    #Id;#Step;#Kind;#For;#Depends
    Stop;;;;
        #Action;$AppConnection
        ApplicationStop;appCon

    #EndStep


#TestCase;#Kind;#Depends;#For
Dialog get properties;;;
    #Id;#Step;#Kind;#For;#Depends
    Start;;;;
        #Id;#Global;#Call;plugin
        appCon;1;testLib.runPlugin;plugin

    #EndStep

    #Id;#Step;#Kind;#For;#Depends
    Positive;;;;
        #Id;#Let
        x;1111

        #Id;#Let
        y;111

        #Id;#Let
        width;555

        #Id;#Let
        height;555

        #Action;$Dialog;$X;$Y;$AppConnection
        DialogMove;'Dialog';x;y;appCon

        #Action;$Height;$Width;$Dialog;$AppConnection
        DialogResize;height;width;'Dialog';appCon

        #Id;#Action;#Assert;$Size;$Position;$Dialog;$AppConnection
        APPPAR6;DialogGetProperties;This.Result == Result.Passed && This.Out.Size.getWidth() == width && This.Out.Size.getWidth() == height  && This.Out.Position.getX() == x && This.Out.Position.getY() == y;;;'Dialog';appCon

        #Id;#Action;#Assert;$Position;$Dialog;$AppConnection
        APPPAR6;DialogGetProperties;This.Result == Result.Passed && This.Out.Position != null;;'Dialog';appCon

        #Id;#Action;#Assert;$Size;$Dialog;$AppConnection
        APPPAR6;DialogGetProperties;This.Result == Result.Passed && This.Out.Size != null;;'Dialog';appCon

        #Id;#Action;#Assert;$Dialog;$AppConnection
        APPPAR6;DialogGetProperties;This.Result == Result.Passed;'Dialog';appCon

    #EndStep

    #Id;#Step;#Kind;#For;#Depends
    Negative;;;;
        #Id;#Action;#Assert;$Dialog;$AppConnection
        APPPAR7;DialogGetProperties;This.Result == Result.Failed && This.Kind == ErrorKind.DIALOG_NOT_FOUND;'Dialogg';appCon

        #Id;#Action;#Assert;$Dialog;$AppConnection
        APPPAR8;DialogGetProperties;This.Result == Result.Failed && This.Kind == ErrorKind.EMPTY_PARAMETER;'Dialog';

        #Id;#Action;#Assert;$Dialog;$AppConnection
        APPPAR9;DialogGetProperties;This.Result == Result.Failed && This.Kind == ErrorKind.EMPTY_PARAMETER;;appCon

        #Id;#Action;#Assert;$Dialog;$AppConnection
        APPPAR10;DialogGetProperties;This.Result == Result.Failed && This.Kind == ErrorKind.EXPRESSION_ERROR;'Dialog';asd

    #EndStep

    #Id;#Step;#Kind;#For;#Depends
    Stop;;;;
        #Action;$AppConnection
        ApplicationStop;appCon

    #EndStep


#TestCase;#Kind;#Depends;#For
Dialog resize;Never;;
    #Id;#Step;#Kind;#For;#Depends
    Start;;;;
        #Id;#Global;#Call;plugin
        appCon;1;testLib.runPlugin;plugin

    #EndStep

    // 
    #Step;#Kind;#For;#Depends
    'Negative';;;
        #Action;#Assert;$Dialog;$AppConnection
        DialogResize;This.Result == Result.Failed && This.Kind == ErrorKind.EMPTY_PARAMETER;;appCon

        #Action;#Assert;$Dialog;$AppConnection
        DialogResize;This.Result == Result.Failed && This.Kind == ErrorKind.EMPTY_PARAMETER;'Dialog';

        #Action;#Assert;$Dialog;$AppConnection
        DialogResize;This.Result == Result.Failed && This.Kind == ErrorKind.WRONG_PARAMETERS;'Dialog';new Date()

        #Action;#Assert;$Dialog;$AppConnection
        DialogResize;This.Kind == ErrorKind.WRONG_PARAMETERS;'Dialog';appCon

        #Action;#Assert;$Dialog;$AppConnection;$Resize
        DialogResize;This.Kind == ErrorKind.WRONG_PARAMETERS;'Dialog';appCon;

        #Action;#Assert;$Dialog;$AppConnection;$Resize;$Height
        DialogResize;This.Kind == ErrorKind.WRONG_PARAMETERS;'Dialog';appCon;Resize.Maximize;10

    #EndStep

    // 
    #Step;#Kind;#For;#Depends
    'Negative - Swing';;;
        #Action;#Assert;$Dialog;$AppConnection;$Resize
        DialogResize;This.Result == Result.Failed && This.Kind == ErrorKind.EXCEPTION;'Dialog';appCon;Resize.Maximize

    #EndStep

    // 
    #Step;#Kind;#For;#Depends
    'Positive';;;
        #Action;#Assert;$Dialog;$AppConnection;$Height;$Width
        DialogResize;This.Result == Result.Passed;'Dialog';appCon;500;500

    #EndStep

    #Id;#Step;#Kind;#For;#Depends
    Stop;;;;
        #Action;$AppConnection
        ApplicationStop;appCon

    #EndStep


