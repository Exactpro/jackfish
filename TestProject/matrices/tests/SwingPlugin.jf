#TestCase;#Kind;#Depends;#For
Application start;Never;;
    #Step;#Kind;#For;#Depends
    'App start without any';;;
        #Id;#Action;#Assert;$AppId
        APPSTR2;ApplicationStart;This.Kind == ErrorKind.EXCEPTION && This.Result == Result.Failed;'SWING'

    #EndStep

    #Step;#Kind;#For;#Depends
    'App start without jar';;;
        #Id;#Action;#Assert;$AppId;MainClass
        APPSTR2;ApplicationStart;This.Kind == ErrorKind.EXCEPTION && This.Result == Result.Failed;'SWING';

    #EndStep

    #Step;#Kind;#For;#Depends
    'App start with invalid class name';;;
        #Id;#Action;#Assert;$AppId;Jar;MainClass
        APPSTR2;ApplicationStart;This.Kind == ErrorKind.EXCEPTION && This.Result == Result.Failed;'SWING';mockSwingJar;new Date()

    #EndStep

    #Step;#Kind;#For;#Depends
    'App start with invalid jar file';;;
        #Id;#Action;#Assert;$AppId;Jar;MainClass
        APPSTR2;ApplicationStart;This.Kind == ErrorKind.EXCEPTION && This.Result == Result.Failed;'SWING';new Date();mockSwingClass

    #EndStep

    #Step;#Kind;#For;#Depends
    'App start with valid parameters';;;
        #Id;#Action;$AppId;Jar;MainClass
        APPSTR1;ApplicationStart;'SWING';mockSwingJar;mockSwingClass

        #Id;#Action;$AppConnection
        APPSTP1;ApplicationStop;APPSTR1.Out

    #EndStep


// //TODO need add tests
#TestCase;#Kind;#Depends;#For
Appliaction connect;;;

#TestCase;#Kind;#Depends;#For
;;;
    #Id;#Action;$AppId;Jar;MainClass
    APPSTR1;ApplicationStart;'SWING';mockSwingJar;mockSwingClass

    #Step;#Kind;#For;#Depends
    'Get properties';;;
        #Id;#Action;$AppConnection;Title
        APPPAR1;ApplicationGetProperties;APPSTR1.Out;

        #Assert;#Message
        APPPAR1.Out.Title == 'frame0';'Actula name : ' +APPPAR1.Out.Title

    #EndStep

    #Step;#Kind;#For;#Depends
    'Move';;;
        #Action;$X;$Y;$AppConnection
        ApplicationMove;10;10;APPSTR1.Out

    #EndStep

    #Step;#Kind;#For;#Depends
    'Resize';;;
        #Action;$Resize;$AppConnection
        ApplicationResize;Resize.Minimize;APPSTR1.Out

        #Action;$Resize;$AppConnection
        ApplicationResize;Resize.Maximize;APPSTR1.Out

        #Action;$Resize;$AppConnection
        ApplicationResize;Resize.Normal;APPSTR1.Out

        #Id;#Action;$AppConnection;$Height;$Width
        APPSZ1;ApplicationResize;APPSTR1.Out;200;200

    #EndStep

    #Id;#Action;$AppConnection
    APPSTP1;ApplicationStop;APPSTR1.Out


#TestCase;#Kind;#Depends;#For
Appliaction negative;;;
    #Id;#Action;$AppId;Jar;Args;MainClass
    APPSTR1;ApplicationStart;mockSwingApp;mockSwingJar;;mockSwingClass

    #Id;#Action;#Assert;$AppConnection
    APPR1;ApplicationRefresh;This.Kind == ErrorKind.EXCEPTION && This.Result == Result.Failed;APPSTR1.Out

    #Id;#Action;#Assert;$Navigate;$AppConnection
    APPPNVG1;ApplicationNavigate;This.Kind == ErrorKind.EXCEPTION && This.Result == Result.Failed;NavigateKind.BACK;APPSTR1.Out

    #Id;#Action;#Assert;$AppConnection
    APPNI1;ApplicationNewInstance;This.Kind == ErrorKind.EXCEPTION && This.Result == Result.Failed;APPSTR1.Out

    #Id;#Action;#Assert;$AppConnection
    APPCW1;ApplicationCloseWindow;This.Kind == ErrorKind.EXCEPTION && This.Result == Result.Failed;APPSTR1.Out

    #Id;#Action;#Assert;$AppConnection
    APPSW1;ApplicationSwitchTo;This.Kind == ErrorKind.EXCEPTION && This.Result == Result.Failed;APPSTR1.Out

    #Id;#Action;$AppConnection
    APPSTP1;ApplicationStop;APPSTR1.Out


#Id;#TestCase;#Kind;#Depends;#For
Properties;Dialog get properties;;;
    #Id;#Step;#Kind;#For;#Depends
    Start;;;;
        #Id;#Global;#Action;MainClass;Args;Jar;$AppId
        APPSTR4;1;ApplicationStart;mockSwingClass;'';mockSwingJar;mockSwingApp

    #EndStep

    #Id;#Step;#Kind;#For;#Depends
    Positive;;;;
        #Id;#Action;#Assert;$Size;$Position;$Dialog;$AppConnection
        APPPAR6;DialogGetProperties;This.Result == Result.Passed && This.Out.Size != null && This.Out.Position != null;;;'Dialog';APPSTR4.Out

        #Id;#Action;#Assert;$Position;$Dialog;$AppConnection
        APPPAR6;DialogGetProperties;This.Result == Result.Passed && This.Out.Position != null;;'Dialog';APPSTR4.Out

        #Id;#Action;#Assert;$Size;$Dialog;$AppConnection
        APPPAR6;DialogGetProperties;This.Result == Result.Passed && This.Out.Size != null;;'Dialog';APPSTR4.Out

        #Id;#Action;#Assert;$Dialog;$AppConnection
        APPPAR6;DialogGetProperties;This.Result == Result.Passed;'Dialog';APPSTR4.Out

    #EndStep

    #Id;#Step;#Kind;#For;#Depends
    Negative;;;;
        #Id;#Action;#Assert;$Dialog;$AppConnection
        APPPAR7;DialogGetProperties;This.Result == Result.Failed && This.Kind == ErrorKind.DIALOG_NOT_FOUND;'Dialogg';APPSTR4.Out

        #Id;#Action;#Assert;$Dialog;$AppConnection
        APPPAR8;DialogGetProperties;This.Result == Result.Failed && This.Kind == ErrorKind.EMPTY_PARAMETER;'Dialog';

        #Id;#Action;#Assert;$Dialog;$AppConnection
        APPPAR9;DialogGetProperties;This.Result == Result.Failed && This.Kind == ErrorKind.EMPTY_PARAMETER;;APPSTR4.Out

        #Id;#Action;#Assert;$Dialog;$AppConnection
        APPPAR10;DialogGetProperties;This.Result == Result.Failed && This.Kind == ErrorKind.EXPRESSION_ERROR;'Dialog';asd

    #EndStep

    #Id;#Step;#Kind;#For;#Depends
    Stop;;;;
        #Action;$AppConnection
        ApplicationStop;APPSTR4.Out

    #EndStep


