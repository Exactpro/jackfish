////////////////////////////////////////////////////////////////////////////////
// Copyright 2009-2018 Exactpro (Exactpro Systems Limited)
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
////////////////////////////////////////////////////////////////////////////////
#TestCase;#Kind;#Depends;#For
Negative testing;;;
    #Step;#Kind;#For;#Depends
    'Test start without browser';;;
        #Id;#Action;#Assert;$AppId
        APPSTR1;ApplicationStart;This.Result == Result.Failed && This.Kind == ErrorKind.EXCEPTION;mockWebApp

    #EndStep

    #Step;#Kind;#For;#Depends
    'Test start without url';;;
        #Id;#Action;#Assert;$AppId;Browser
        APPSTR1;ApplicationStart;This.Result == Result.Failed && This.Kind == ErrorKind.EXCEPTION;mockWebApp;'Chrome'

    #EndStep

    #Step;#Kind;#For;#Depends
    'Test start with inavlid browser';;;
        #Id;#Action;#Assert;$AppId;Browser;URL
        APPSTR2;ApplicationStart;This.Result == Result.Failed && This.Kind == ErrorKind.EXCEPTION;mockWebApp;new Date();'http://google.ru'

    #EndStep


#TestCase;#Kind;#Depends;#For
Test chrome;Never;;
    #Step;#Kind;#For;#Depends
    'start app without chromedriverpath';;;
        #Id;#Action;#Assert;$AppId;Browser;URL
        APPSTR3;ApplicationStart;This.Kind == ErrorKind.EXCEPTION && This.Result == Result.Failed;'WEB_WITHOUT_ANY_DRIVERS_PATH';'Chrome';mockWebURL

    #EndStep

    #Step;#Kind;#For;#Depends
    'start app with invalid chromedriverpath';;;
        #Id;#Action;#Assert;$AppId;Browser;URL
        APPSTR3;ApplicationStart;This.Kind == ErrorKind.EXCEPTION && This.Result == Result.Failed;'WEB_WITH_INVALID_ANY_DRIVERS_PATH';'Chrome';mockWebURL

    #EndStep

    // TODO add test
    #Step;#Kind;#For;#Depends
    'start app with chromedriverbinary';;;
    #EndStep


// Test for selenium 3+
#Off;#TestCase;#Kind;#Depends;#For
1;Test firefox;;;
    #Step;#Kind;#For;#Depends
    'start app without geckodriver path';;;
        #Id;#Action;#Assert;$AppId;Browser;URL
        APPSTR3;ApplicationStart;This.Kind == ErrorKind.EXCEPTION && This.Result == Result.Failed;'WEB_WITHOUT_ANY_DRIVERS_PATH';'Firefox';mockWebURL

    #EndStep

    #Step;#Kind;#For;#Depends
    'start app with invalid geckodriver path';;;
        #Id;#Action;#Assert;$AppId;Browser;URL
        APPSTR3;ApplicationStart;This.Kind == ErrorKind.EXCEPTION && This.Result == Result.Failed;'WEB_WITH_INVALID_ANY_DRIVERS_PATH';'Chrome';mockWebURL

    #EndStep

    // TODO add test
    #Step;#Kind;#For;#Depends
    'start with firefoxprofile';;;
    #EndStep

    #Step;#Kind;#For;#Depends
    'test most used actions';Never;;
        #Id;#Action;$AppId;Browser;URL
        APPSTR4;ApplicationStart;mockWebApp;'Firefox';mockWebURL

        #Id;#Call;app
        CALL_1;checkBrowser;APPSTR4.Out

        #Action;$AppConnection
        ApplicationStop;APPSTR4.Out

        #OnError
            #Action;$AppConnection
            ApplicationStop;APPSTR4.Out

            #Fail
            err


    #EndStep


#Off;#TestCase;#Kind;#Depends;#For
1;Test IE;;;
    #If
    !Sys.osName().startsWith('Win')
        #Return
        'Current OS is not Windows'

    #EndIf

    #Step;#Kind;#For;#Depends
    'start app without iedriver path';;;
        #Id;#Action;#Assert;$AppId;Browser;URL
        APPSTR3;ApplicationStart;This.Kind == ErrorKind.EXCEPTION && This.Result == Result.Failed;'WEB_WITHOUT_ANY_DRIVERS_PATH';'InternetExplorer';mockWebURL

    #EndStep

    #Step;#Kind;#For;#Depends
    'start app with invalid iedriver path';;;
        #Id;#Action;#Assert;$AppId;Browser;URL
        APPSTR3;ApplicationStart;This.Kind == ErrorKind.EXCEPTION && This.Result == Result.Failed;'WEB_WITH_INVALID_ANY_DRIVERS_PATH';'InternetExplorer';mockWebURL

    #EndStep

    #Step;#Kind;#For;#Depends
    'test most used actions';Never;;
        #Id;#Action;$AppId;Browser;URL
        APPSTR4;ApplicationStart;mockWebApp;'InternetExplorer';mockWebURL

        #Id;#Call;app
        CALL_1;checkBrowser;APPSTR4.Out

        #Action;$AppConnection
        ApplicationStop;APPSTR4.Out

        #OnError
            #Action;$AppConnection
            ApplicationStop;APPSTR4.Out

            #Fail
            err


    #EndStep


#Id;#TestCase;#Kind;#Depends;#For
Properties;Dialog get properties;;;
    #Id;#Step;#Kind;#For;#Depends
    Start;;;;
        #Id;#Global;#Action;$AppId;Browser;URL
        APPSTR1;1;ApplicationStart;mockWebApp;mockWebBrowser;mockWebURL

    #EndStep

    // //Not supported for web. see negative test
    #Id;#Step;#Kind;#For;#Depends
    Positive;;;;
    #EndStep

    #Id;#Step;#Kind;#For;#Depends
    Negative;;;;
        #Id;#Action;#Assert;$Position;$Size;$Dialog;$AppConnection
        APPPAR1;DialogGetProperties;This.Result == Result.Failed && This.Kind == ErrorKind.FEATURE_NOT_SUPPORTED;;;'Main';APPSTR1.Out

    #EndStep

    #Id;#Step;#Kind;#For;#Depends
    Stop;;;;
        #Action;$AppConnection
        ApplicationStop;APPSTR1.Out

    #EndStep


#TestCase;#Kind;#Depends;#For
DialogMove;;;
    #Id;#Step;#Kind;#For;#Depends
    Start;;;;
        #Id;#Global;#Action;Browser;URL;$AppId
        APPSTR5;1;ApplicationStart;mockWebBrowser;mockWebURL;mockWebApp

    #EndStep

    #Id;#Step;#Kind;#For;#Depends
    Positive;;;;
    #EndStep

    #Id;#Step;#Kind;#For;#Depends
    Negative;;;;
        #Action;#Assert;$Dialog;$X;$Y;$AppConnection
        DialogMove;This.Result == Result.Failed && This.Kind == ErrorKind.FEATURE_NOT_SUPPORTED;'Main';1;1;APPSTR5.Out

    #EndStep


#Id;#TestCase;#Kind;#Depends;#For
Stop;;;;
    #Action;$AppConnection
    ApplicationStop;APPSTR5.Out


