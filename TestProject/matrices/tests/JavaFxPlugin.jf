// ////////////////////////////////////////////////////////////////////////////////
// // Copyright (c) 2009-2017, Exactpro Systems
// // Quality Assurance & Related Software Development for Innovative Trading Systems.
// // London Stock Exchange Group.
// // All rights reserved.
// // This is unpublished, licensed software, confidential and proprietary
// // information which is the property of Exactpro Systems or its licensors.
// ////////////////////////////////////////////////////////////////////////////////
#TestCase;#Kind;#Depends;#For
Prepare;;;
    #Id;#Global;#Let
    plugin;1;'JavaFx'


#TestCase;#Kind;#Depends;#For
Dialog get properties;Never;;
    #Id;#Step;#Kind;#For;#Depends
    Start;;;;
        #Id;#Global;#Call;plugin
        appCon;1;testLib.runPlugin;plugin

    #EndStep

    #Id;#Step;#Kind;#For;#Depends
    Positive;;;;
        #Id;#Let
        x;1111

        #Id;#Let
        y;111

        #Id;#Let
        width;555

        #Id;#Let
        height;555

        #Action;$Dialog;$X;$Y;$AppConnection
        DialogMove;'Dialog';x;y;appCon

        #Action;$Height;$Width;$Dialog;$AppConnection
        DialogResize;height;width;'Dialog';appCon

        #Id;#Action;#Assert;$Size;$Position;$Dialog;$AppConnection
        APPPAR6;DialogGetProperties;This.Result == Result.Passed && This.Out.Size.getWidth() == width && This.Out.Size.getWidth() == height  && This.Out.Position.getX() == x && This.Out.Position.getY() == y;;;'Dialog';appCon

        #Id;#Action;#Assert;$Size;$Dialog;$AppConnection
        APPPAR3;DialogGetProperties;This.Result == Result.Passed && This.Out.Size != null;;'Dialog';appCon

        #Id;#Action;#Assert;$Position;$Dialog;$AppConnection
        APPPAR4;DialogGetProperties;This.Result == Result.Passed && This.Out.Position != null;;'Dialog';appCon

        #Id;#Action;#Assert;$Dialog;$AppConnection
        APPPAR5;DialogGetProperties;This.Result == Result.Passed && This.Out.size == 0;'Dialog';appCon

    #EndStep

    #Id;#Step;#Kind;#For;#Depends
    Negative;;;;
        #Id;#Action;#Assert;$Dialog;$AppConnection
        APPPAR7;DialogGetProperties;This.Result == Result.Failed && This.Kind == ErrorKind.DIALOG_NOT_FOUND;'Dialogg';appCon

        #Id;#Action;#Assert;$Dialog;$AppConnection
        APPPAR8;DialogGetProperties;This.Result == Result.Failed && This.Kind == ErrorKind.EMPTY_PARAMETER;'Dialog';

        #Id;#Action;#Assert;$Dialog;$AppConnection
        APPPAR9;DialogGetProperties;This.Result == Result.Failed && This.Kind == ErrorKind.EMPTY_PARAMETER;;appCon

        #Id;#Action;#Assert;$Dialog;$AppConnection
        APPPAR10;DialogGetProperties;This.Result == Result.Failed && This.Kind == ErrorKind.EXPRESSION_ERROR;'Dialog';asd

    #EndStep

    #Id;#Step;#Kind;#For;#Depends
    Stop;;;;
        #Action;$AppConnection
        ApplicationStop;appCon

    #EndStep


#TestCase;#Kind;#Depends;#For
Dialog resize;Never;;
    #Id;#Step;#Kind;#For;#Depends
    Start;;;;
        #Id;#Global;#Call;plugin
        appCon;1;testLib.runPlugin;plugin

    #EndStep

    // 
    #Step;#Kind;#For;#Depends
    'Negative';;;
        #Action;#Assert;$Dialog;$AppConnection
        DialogResize;This.Result == Result.Failed && This.Kind == ErrorKind.EMPTY_PARAMETER;;appCon

        #Action;#Assert;$Dialog;$AppConnection
        DialogResize;This.Result == Result.Failed && This.Kind == ErrorKind.EMPTY_PARAMETER;'Dialog';

        #Action;#Assert;$Dialog;$AppConnection
        DialogResize;This.Result == Result.Failed && This.Kind == ErrorKind.WRONG_PARAMETERS;'Dialog';new Date()

        #Action;#Assert;$Dialog;$AppConnection
        DialogResize;This.Kind == ErrorKind.WRONG_PARAMETERS;'Dialog';appCon

        #Action;#Assert;$Dialog;$AppConnection;$Resize
        DialogResize;This.Kind == ErrorKind.EMPTY_PARAMETER;'Dialog';appCon;

        #Action;#Assert;$Dialog;$AppConnection;$Resize;$Height
        DialogResize;This.Kind == ErrorKind.WRONG_PARAMETERS;'Dialog';appCon;Resize.Maximize;10

    #EndStep

    // 
    #Step;#Kind;#For;#Depends
    'Positive';;;
        #Action;#Assert;$Dialog;$AppConnection;$Height;$Width
        DialogResize;This.Result == Result.Passed;'Dialog';appCon;500;500

        #Action;#Assert;$Dialog;$AppConnection;$Resize
        DialogResize;This.Result == Result.Passed;'Dialog';appCon;Resize.Maximize

    #EndStep

    #Id;#Step;#Kind;#For;#Depends
    Stop;;;;
        #Action;$AppConnection
        ApplicationStop;appCon

    #EndStep


#TestCase;#Kind;#Depends;#For
DialogMove;;;
    #Id;#Step;#Kind;#For;#Depends
    Start;;;;
        #Id;#Global;#Call;plugin
        appCon;1;testLib.runPlugin;plugin

    #EndStep

    #Id;#Step;#Kind;#For;#Depends
    Negative;;;;
        #Action;#Assert;$Dialog;$X;$Y;$AppConnection
        DialogMove;This.Result == Result.Failed && This.Kind == ErrorKind.DIALOG_NOT_FOUND;'DialogNotExistException';1;1;appCon

        #Action;#Assert;$Dialog;$X;$Y;$AppConnection
        DialogMove;This.Result == Result.Failed && This.Kind == ErrorKind.EMPTY_PARAMETER;'Dialog';1;;appCon

        #Action;#Assert;$Dialog;$X;$Y;$AppConnection
        DialogMove;This.Result == Result.Failed && This.Kind == ErrorKind.EMPTY_PARAMETER;;1;1;appCon

        #Action;#Assert;$Dialog;$X;$Y;$AppConnection
        DialogMove;This.Result == Result.Failed && This.Kind == ErrorKind.EMPTY_PARAMETER;'Dialog';;1;appCon

        #Action;#Assert;$Dialog;$X;$Y;$AppConnection
        DialogMove;This.Result == Result.Failed && This.Kind == ErrorKind.EMPTY_PARAMETER;'Dialog';1;1;

        #Action;#Assert;$Dialog;$X;$Y;$AppConnection
        DialogMove;This.Result == Result.Failed && This.Kind == ErrorKind.EXPRESSION_ERROR;'Dialog';1;1;asd

    #EndStep

    #Id;#Step;#Kind;#For;#Depends
    Positive;;;;
        #Id;#Action;$Position;$Dialog;$AppConnection
        APPPAR1;DialogGetProperties;;'Dialog';appCon

        #Id;#Let
        currentX;APPPAR1.Out.Position.getX()

        #Id;#Let
        currentY;APPPAR1.Out.Position.getY()

        #Id;#Let
        newX;currentX + 100

        #Id;#Let
        newY;currentY + 100

        #Action;$Dialog;$X;$Y;$AppConnection
        DialogMove;'Dialog';newX;newY;appCon

        #Id;#Action;$Position;$Dialog;$AppConnection
        APPPAR6;DialogGetProperties;;'Dialog';appCon

        #Assert;#Message
        APPPAR6.Out.Position.getX() == newX;'Error while moving by X from ' + currentX + ' to ' + newX

        #Assert;#Message
        APPPAR6.Out.Position.getY() == newY;'Error while moving by Y from ' + currentY + ' to ' + newY

    #EndStep

    #Id;#Step;#Kind;#For;#Depends
    Stop;;;;
        #Action;$AppConnection
        ApplicationStop;appCon

    #EndStep


