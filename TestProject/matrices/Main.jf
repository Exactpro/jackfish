#Id;#TestCase;#Kind;#Depends;#For
INIT;Setup;;;
    #Id;#Global;#Action;#Decoraded
    RESTBL1;1;ResultTable;true


// 
#Id;#TestCase;#Kind;#Depends;#For
Test;EventHandlers;;;
    #Call;#testName
    runMatrix;'EventHandlers'


#Id;#TestCase;#Kind;#Depends;#For
Test;Basic;;;
    #Call;#testName
    runMatrix;'Basic'


#Id;#TestCase;#Kind;#Depends;#For
Test;CheckMockWeb;;;
    #Call;#testName
    runMatrix;'CheckMockWeb'


#Id;#TestCase;#Kind;#Depends;#For
Test;CheckMockSwing;;;
    #Call;#testName
    runMatrix;'CheckMockSwing'


// 
#Id;#TestCase;#Kind;#Depends;#For
REPORT;Cleanup;;;
    #Action;#Table;#Title;#BeforeTestCase
    TableReport;RESTBL1.Out;'All tests';'INIT'

    // RM38487 (impossible to use Result as a field) solved for this case
    #Id;#Action;#Table;#Result
    TBLSLCT1;TableSelect;RESTBL1.Out;new RegexpCondition('Result', '^.*Failed.*$')

    #Assert;#Message
    TBLSLCT1.Out.size() == 0;'There are fails in the tests'

    #Id;#SubCase;#testName
    runMatrix;Running test;'CheckMockSwing'
        #Id;#Action;#Matrix
        MXRN1;MatrixRun;matrixTestsPath + testName +  '.jf'

        #Id;#Action;#Matrix
        MXWT1;MatrixWait;MXRN1.Out

        #Id;#Action;#Decoraded;#Matrix
        RESTBL2;ResultTable;true;MXRN1.Out

        #Action;#UnitedTable;#MainTable
        TableUnion;RESTBL2.Out;RESTBL1.Out

    #EndSubCase


