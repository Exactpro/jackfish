#TestCase;#Kind;#Depends;#For
Testbench;;;
    #Action;#key;#begin
    Vars;0;System.currentTimeMillis()

    #While
    key < 100
        #Action;#key
        Vars;key + 1

    #EndWhile

    #Action;#now
    Print;System.currentTimeMillis() - begin


#TestCase;#Kind;#Depends;#For
ActionFor;;;
    #Global;#Action;#result
    1;Vars;0

    #Action;#from;#to;#step
    Vars;0;15;1

    #For;#From;#To;#Step
    i;from;to;step
        #Global;#Action;#result
        1;Vars;result + i

    #EndFor

    #Action;#result
    Print;result


#TestCase;#Kind;#Depends;#For
Test matrix start;;;
    #Action;#Str
    Print;'starting Matrix1'

    #Id;#Action;#Matrix;#At
    M1;MatrixRun;'matrices/Matrix1.jf';DateTime.addTime(0, 0, 7)

    #Action;#Str
    Print;'starting Matrix2'

    #Id;#Action;#Matrix;#At
    M2;MatrixRun;'matrices/Matrix2.jf';DateTime.addTime(0, 0, 5)

    #Action;#Str
    Print;'wait Matrix1'

    #Action;#Matrix
    MatrixWait;M1.Out

    #Action;#Str
    Print;'wait Matrix2'

    #Action;#Matrix
    MatrixWait;M2.Out

    #Action;#Str
    Print;'the End'


#TestCase;#Kind;#Depends;#For
Test Store;;;
    #Action;#date
    Vars;new Date()

    #Action;#Name;#Value
    Store;'myStoreValue';date

    #Action;#date
    Print;date


#TestCase;#Kind;#Depends;#For
test Restore;;;
    #Action;#Time
    Wait;3000

    #Id;#Action;#Name
    restoreValue;Restore;'myStoreValue'

    #Action;#out;#newDate
    Print;restoreValue.Out;new Date()


#TestCase;#Kind;#Depends;#For
test execute;;;
    #Id;#Action;#Command;#Wait
    EXEC1;Execute;'ls';true


#TestCase;#Kind;#Depends;#For
null;;;
    #Id;#Action;#Content
    TXT1;TextCreate;'#TestCase\nfirst case\n#Action\u003B#s\nPrint\u003B222'

    #Id;#Action;#Text
    MXRN1;MatrixRunFromText;TXT1.Out

    #Id;#Action;#Matrix;#Time
    MXWT1;MatrixWait;MXRN1.Out;1000


