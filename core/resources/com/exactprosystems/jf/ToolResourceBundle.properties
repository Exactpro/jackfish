#region general
DragNDropListTooltip=""Use drag-n-drop to reorder elements"
Default=""
#endregion

#//region actions
DefaultOutputDescription="No output value."

#//region actions.app
AppConnectionDescription=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application the indicated action belongs to.It is the output value of such actions as {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
AppCloseWindowGeneralDescription=Plug-in dependent action. The purpose of the action is to close the currently active window of the application. When the application is a browser, the action closes the currently active tab.
AppCloseWindowOutputDescription=Returns the title bar of the window which was closed.
AppCloseWindowExample={{#\n#Id;#Action;#AppConnection\nACW;ApplicationCloseWindow;app\n\n#Assert;#Message\n!Str.IsNullOrEmpty(ACW.Out);'String is null or empty'#}}

#//endregion

#//region actions.tables
TableCreateGeneralDescriptions=This action is determined to create a table (object type {{$Table$}}). Object Table is set as the two-dimensional structure consisting of rows and columns. Ordering of Rows starts with 0, columns are named. Object Table can be created with  {{@RawTable@}}, with actions {{@TableCreate@}} , {{@TableLoadFromFile@}} , {{@TableLoadFromDir@}} , {{@TableSelect@}} and method {{@Do.getTable()@}}. {{`|header1|header2|`}} {{`|value1 |value2 |`}} {{`|value1 |value2 |`}} 
TableCreateAdditionalDesc=Additional parameters are used to assign column titles. The value field of parameter is left empty.
TABLE_CREATE_EXAMPLE={{`1.Create a table with columns Name and Age.`}}{{`2. Verify that the created object has columns  set initially.`}}\n{{#\n#Id;#Action;#Name;#Age\nTC;TableCreate;;\n#Assert;#Message\nTC.Out.getHeader(0)=='Name' && TC.Out.getHeader(1)=='Age';'Table isn't correct'#}}\n
TableCreateOutputDesc=Table structure.
TableAddColumnsGeneralDesc=This action is determined to add columns to the table given. It can be used if a table is created from different sources or if new columns are added to the table given.
TABLE_ADD_COLUMNS_EXAMPLES={{`1. Create a table with column Name.`}}{{`2. Add to the table created column Age (to the line number 0).`}}{{`3. Verify that the table has columns Name and Age. `}}{{#\n#Id;#RawTable\nTC;Table\n@;Name\n0;\n#EndRawTable\n#Action;#Index;#Table;#Columns\nTableAddColumns;0;TC;{'Age'}\n#Assert;#Message\nTC.getHeader(0) == 'Name' && TC.getHeader(1) == 'Age';'Table is not correct'#}}
TABLE_ADD_VALUE_EXAMPLE={{`1. Create a table with columns Name and Age. Add a value into 0 line to a column Name. A cell in a column Age leave empty.`}}{{`2. Verify that a value in the first line of a column Name is equal 'Mike', Age is equal  null. Column Age is filled with a value null. `}}{{#\n#Id;#RawTable\nTC;Table\n@;Name;Age\n0;;\n#EndRawTable\n#Action;#Index;#Table;#Name\nTableAddValue;0;TC;'Mike'\n#Assert;#Message\nTC.get(0).get('Name') == 'Mike' && TC.get(0).get('Age') == null;'Not equals'#}}
TABLE_ADD_VALUE_GENERAL_DESC=This action  is determined to add lines to a Table..
TABLE_ADD_VALUE_ADDITIONAL_DESC=Are used to insert values where a parameter name - a column name, a parameter value - a cell value.
TABLE_COLUMN_AS_LIST_GENERAL_DESC=This action extract one column of a table and returns it as a list of values.
TABLE_COLUMN_AS_LIST_OUTPUT_DESC=List of strings.
TABLE_COLUMN_RENAME_GENERAL_DESC=This action is determined to rename a column in the table given.
TABLE_COLUMN_RENAME_ADDITIONAL_DESC=The column name given is indicated in a parameter's name, a new column name is in a parameter's value.
TABLE_COLUMN_RENAME_EXAMPLE={{`1. Create a table with columns Name and Age.`}}{{`2. Rename column Name into FirstName.`}}{{`3. Verify that a new name is assigned to a column. `}}{{#\n#Id;#RawTable\nTC;Table\n@;Name;Age\n0;;\n#EndRawTable\n#Action;#Table;#Name\nTableColumnRename;TC;'FirstName'\n#Assert;#Message\nTC.getHeader(0) == 'FirstName';'Values is not equals'#}}
TABLE_COMPARE_TWO_GENERAL_DESC=This action is determined to compare two tables.
TABLE_COMPARE_TWO_EXAMPLE={{`1. Create a table with columns Name and Age. The first table line is applied with values Mike and 42 accordingly.`}}{{`2. Create a table similar to the previous. The first table line is applied with values Mike and 42 accordingly.`}}{{`3. Compare two tables.`}}Information about distinctions ( line number and columns titles which values do not match) is reported as a result of this action in form of:{{`Differences`}}{{`# Expected Actual`}}{{`0 [ Name : Mike, Age : 42 ] [ Name : Mike, Age : 41 ]`}}{{`Age 42 41`}}{{`If tables have different columns numbers, distinctions in cells will be ignored and information about all columns titles is displayed.`}} {{#\n#Id;#RawTable\nTC;Table\n@;Name;Age\n0;Mike;42\n#EndRawTable\n#Id;#RawTable\nTC1;Table\n@;Name;Age\n0;Mike;41\n#EndRawTable\n#Action;#Expected;#Actual\nTableCompareTwo;TC;TC1#}}
TABLE_COMPARE_TWO_OUTPUT_DESC=A table as a result of compare.
#//endregion

#//endregion

#region tool.wizard
WizardSuccess_1=Wizard '{'{0}'}' success
WIZARD_ERROR_ON_CONFIG_REFRESH=Error on refresh config
WIZARD_ERROR_ON_SHOW_ELEMENT=Error on show element
WIZARD_ERROR_ON_DISPLAY_WINDOW=Error on display window
WIZARD_ERROR_ON_CREATE_DOCUMENT_2=Error on create {0} of kind {1}
WIZARD_ERROR_ON_LOAD_DOC_1=Error on load {0}
WIZARD_ERROR_ON_CREATE_DOC_1=Error on save {0}
WIZARD_ERROR_ON_CREATE_COPY=
WIZARD_WIZARD=Wizard
WIZARDS=Wizards
WIZARD_NO_ONE_ACCESSIBLE=No one wizard is accessible here
WIZARD_CHOOSE_WIZARD=Choose wizard
WIZARD_HELP=Help
WIZARD_ACCEPT=Accept
WIZARD_REFUSE=Refuse

#region tool.wizard.all
Start=Start
Scan=Scan
CheckTable=Check table
SelectConnectionInfo=Please select stored connection and dialog
SelectDialog=Select dialog: 
SelectStoredConn=Select stored connection:
Connect=Connect
Failed=Failed
Stop=Stop
ErrorOnApplicationStop=Error on application stop
Success=Success
Loading=Loading...
ErrorOnCloseWizard=Error on close wizard
EnterNameOfVar=Enter name of var here
Status=Status: 
StoreAs=Store as: 
SelectConverterFromCombobox=Select converter from the above combobox
Scanning=Scanning...
AppResizeConverterDescription=It converting the action ApplicationResize from old to new format.\nOld action contains 3 fields : Maximize, Minimize and Normal.\nUser can set several parameters and it will throw exception.\nIn new format user can''t do it, because these parameters replaced to one new parameter : Resize\nExample.\nOld action :\n    #Action;$AppConnection;$Maximize\n    ApplicationResize;CALL_7;true\nwill converted to \n    #Action;$AppConnection;$Resize\n    ApplicationResize;Resize.Maximize\n
Dialog=Dialog : 
SelfID=Self id : 
ErrorOnSetSelfId=Error on set self id
OnOpen=On open
OnClose=On close
SelfIdNotFound=Self control not found
SelfControlIsEmpty=Self control is empty
ApplicationNotStarted=Application is not started.\nStart it before call the wizard.
DictionaryWizardException=DictionaryWizard exception
ErrorOnGenerateOnOpen=Error on generate onOpen
ErrorOnGenerateOnClose=Error on generate onClose
NothingToUpdate=Nothing to update
UpdatingElements=Updating elements
StartUpdatingItemOf=Start updating item {0} of {1}
ErrorOnArrangeOne=Error on arrange one
EndUpdating=End updating {0} of {1}
ErrorOnFindElements=Error on find elements
Connection=Connection : 
Number=Number
About=About
Less=Less
Great=Great
Between=Between
SelectDistance=Select distance : 
All=All
Significant=Significant
UseDistance=Use distances : 
SelectFunctions=Select functions : 
AllOk=All ok
Checking=Checking...
SelectMoreElements=Select more than zero elements from listView above
CreatingTable=Creating table...
Relation=Relation {0} -> {1}
Check=Check
Save=Save
CantSaveInvalidDoSpecFunc=Can''t save, because {0} is invalid doSpec function
CantCheckInvalidDoSpecFunc=Can''t check, because {0} is invalid doSpec function
VariableWithNameExist=Variable with name ''{0}'' already exist
Namespases=Namespases
WhereToMove=Where to move: 
WizardMustBeInvokedFromNamespace=The wizard must be invoked on SubCase from Namespace
MatrixContainsReferences={0} contains {1} reference(s)
NoChangesNeeded=No changes needed.
ERROR_ON_CREATE_COPY=Error on create copy
OLD_VALUE_1=old value : {0}
SELECT_NEW_VALUE=, select new value : 
WIZARD_DICTIONARY_NAME_1=Dictionary : {0}
DICTIONARY_OK=Dictionary is ok
ERROR_ON_TABLE_CREATE=Error while table creating. Please check file name or file extension.
WIZARD_NO_FILE_NAME=No file name specified.
WIZARD_ERROR_IN_FILENAME=Error in filename.
WIZARD_FILE_NOT_CSV=The file ''{0}'' is not a CSV.
WIZARD_FILE_READ_ONLY_1=The file ''{0}'' is read-only and can''t be changed.
WIZARD_DELIMETR_INCORRECT=Delimiter is incorrect or empty.
WIZARD_ENTER_XPATH=Enter xpath here
WIZARD_HELPER=Helper
WIZARD_RELATIVE=Relative
WIZARD_USE_TEXT=use text()
#endregion

#endregion
