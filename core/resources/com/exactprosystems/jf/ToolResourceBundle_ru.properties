################################################################################
# Copyright (c) 2009-2018, Exactpro Systems LLC
# www.exactpro.com
# Build Software to Test Software
#
# All rights reserved.
# This is unpublished, licensed software, confidential and proprietary
# information which is the property of Exactpro Systems LLC or its licensors.
################################################################################

#region general
DRAG_N_DROP_LIST_TOOLTIP=""Use drag-n-drop to reorder elements"
DEFAULT=""

#endregion

#//region actions
DEFAULT_OUTPUT_DESCRIPTION="No output value."

#//region actions.app
APP_CONNECTION_NAME_DESCRIPTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application the indicated action belongs to.It is the output value of such actions as {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
APP_CLOSE_WINDOW_GENERAL_DESCRIPTION=Plug-in dependent action. The purpose of the action is to close the currently active window of the application. When the application is a browser, the action closes the currently active tab.
APP_CLOSE_WINDOW_OUTPUT_DESCRIPTION=Returns the title bar of the window which was closed.
APP_CLOSE_WINDOW_EXAMPLES={{#\n#Id;#Action;#AppConnection\nACW;ApplicationCloseWindow;app\n\n#Assert;#Message\n!Str.IsNullOrEmpty(ACW.Out);'String is null or empty'#}}
APP_CONNECT_TO_GENERAL_DESC=Plug-in dependent action. The purpose of the action is connect to the running application. The action requires some additional parameters which depend on the type of the plug-in used.
APP_CONNECT_TO_ADDITIONAL_DESC=The parameters are determined by the chosen plug-in.For example, the available parameters for win.jar are the following:{{` {{$Main window$}} - a text string to search for the window of the application to connect to.`}}{{` {{$Height$}} - the height of the window.`}} {{` {{$Width$}} - the width of the window.`}} The parameters can be chosen in the dialogue window opened with the context menu of this action in {{$'All parameters'$}} option.
APP_CONNECT_TO_OUTPUT_DESC=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application the indicated action belongs to. Should be created with an active {{$'Global'$}} flag.
APP_CONNECT_TO_EXAMPLE={{#\n#Id;#Global;#Action;#Browser;#URL;#AppId\napp;1;ApplicationStart;'Chrome';'http://google.com';'WEB'\n\n#Assert;#Message\napp.Out.IsGood();'Connection is not established'#}}
APPLICATION_CONNECT_TO_ID=Adapter key, one of those described in the {{$App entries$}} branch of the configuration, will be used to start the corresponding plug-in and to select the dictionary.
APPLICATION_CONNECT_TO_CONNECTION=A special object which identifies the started application session. In case this parameter is not empty the reconnect is performed.  It is the output value of such actions as {{@ApplicationStart@}}.
APP_GET_PROPERTIES_GENERAL_DESC=Plug-in dependent action. The purpose of the action is to get certain properties from the available connection.
APP_GET_PROPERTIES_ADDITIONAL_DESC=The parameters are determined by the chosen plug-in. {{`For example, additional parameters {{$Title$}} and {{$URL$}} are available for web plug-in. They are necessary to get the information about the title bar and the address respectively.`}} The parameters can be chosen in the dialogue window opened with the context menu of this action in {{$'All parameters'$}} option.
APP_GET_PROPERTIES_OUTPUT_DESC=Associative array which displays the names of the elements processed by the action along with prpperties received from the app.
APP_GET_PROPERTIES_EXAMPLE={{#\n#Id;#Action;#URL;#AppConnection\nAGP1;ApplicationGetProperties;;app\n\n#Assert;#Message\n!Str.IsNullOrEmpty(AGP1.Out.URL);'String is null or empty'#}}
APPLICATION_GET_PROPERTIES_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application the indicated action belongs to.It is the output value of such actions as {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
APP_MOVE_GENERAL_DESC=Plug-in depend action. This action is used for moving the main window
APP_MOVE_EXAMPLE={{#{{`#Id;#Action;Exec;WorkDir;$AppId`}}{{`APPSTR1;ApplicationStart;'C:/Windows/notepad.exe';'C:/Windows';Win`}}{{``}}{{`#Action;$X;$Y;$AppConnection`}}{{`ApplicationMove;100;100;APPSTR1.Out`}}#}}
APPLICATION_MOVE_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application the indicated action belongs to. It is the output value of such actions as {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
APPLICATION_MOVE_X=The X coordinate for move window.
APPLICATION_MOVE_Y=The Y coordinate for move window
APP_NAVIGATE_GENERAL_DESC=Navigate inside application.
APP_NAVIGATE_ADDITIONAL_DESC=The parameters are determined by the chosen plug-in. {{`For example, an additional parameter {{$Navigate$}} is available for web plug-in. It has two values {{$BACK$}} and {{$FORWARD$}} which help to move within the browser back and forward respectively.`}} The parameters can be chosen in the dialogue window opened with the context menu of this action in {{$'All parameters'$}} option.
APP_NAVIGATE_EXAMPLE={{#\n#Action;#Navigate;#Navigate;#AppConnection\nApplicationNavigate;NavigateKind.BACK;NavigateKind.FORWARD;app#}}
APPLICATION_NAVIGATE_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application the indicated action belongs to. It is the output value of such actions as {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
APPLICATION_NAVIGATE_KIND=Where navigate. See additional field description
APP_NEW_INSTANCE_GENERAL_DESC=Plug-in dependent action. The action is used to open new windows in the web browser.
APP_NEW_INSTANCE_ADDITIONAL_DESC=The parameters are determined by the chosen plug-in. For example, the available parameters for win.jar are the following: {{` {{$URL$}} - string. It defines the URL.`}} {{` {{$Browser$}} - string. It defines which browser should be launched.`}} The parameters can be chosen in the dialogue window opened with the context menu of this action in {{$'All parameters'$}} option.
APP_NEW_INSTANCE_EXAMPLE={{#\n#Id;#Action;#Browser;#URL;#AppConnection\nAPPNI1;ApplicationNewInstance;'Chrome';'http://google.com';app#}}
APPLICATION_NEW_INSTANCE_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application the indicated action belongs to. It is the output value of such actions as {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
APP_REFRESH_GENERAL_DESC=Plug-in dependent action. The purpose of the action is to refresh the application window. It should be used only with web plug-in.
APP_REFRESH_EXAMPLE={{#\n#Action;#AppConnection\nApplicationRefresh;app\n#}}
APPLICATION_REFRESH_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application the indicated action belongs to. It is the output value of such actions as {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
APP_RESIZE_GENERAL_DESC=The purpose of the action is to change the window size of the application under test.
APP_RESIZE_EXAMPLE=Example 1.{{#\n#Action;#AppConnection;#Width;#Height\nApplicationResize;app;1000;1000\n#}} \nExample 2.{{#\n#Action;#Maximize;#AppConnection\nApplicationResize;true;app\n#}}
APPLICATION_RESIZE_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application the indicated action belongs to. It is the output value of such actions as {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
APPLICATION_RESIZE_HEIGHT=The window height is changed to the specified height.
APPLICATION_RESIZE_WIDTH=The window width is changed to the specified width.
APPLICATION_RESIZE_RESIZE=Type of resizing. Must be Resize.Maximize, Resize.Minimize or Resize.Normal
APP_SET_PROPERTIES_GENERAL_DESC=Plug-in dependent action. The purpose of the action is to set certain properties into the available connection.
APP_SET_PROPERTIES_ADDITIONAL_DESC=The parameters are determined by the chosen plug-in. {{`For example, additional parameters {{$CookieAdd$}} and {{$CookieRemove$}} are available for web plug-in. They are necessary to add and to remove a cookie respectively.`}} The parameters can be chosen in the dialoguewindow opened with the context menu of this action in {{$'All parameters'$}} option.
APP_SET_PROPERTIES_EXAMPLE={{#\n#Id;#Action;#CookieRemove\nAGP1;ApplicationGetProperties;'name'\n\n#Assert;#Message\nAGP1.Out.CookieRemove;'Cookie was not removed'#}}
APPLICATION_SET_PROPERTIES_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application the indicated action belongs to.It is the output value of such actions as {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
APP_START_GENERAL_DESC=The purpose of the action is to launch the application under test. The type of the application is determined by the chosen plug-in (see also {{@GUI plug-ins@}}). The action requires some additional parameters, which depend on the type of the plug-in used. The parameters are not mandatory from the standpoint of the tool itself, but they are required for the plug-in to launch the application correctly.
APP_START_ADDITIONAL_DESC=The structure and meaning of parameters depend on the plug-in used. For example, web.jarrequires the following list {{` {{$Browser$}} - the browser in which the web application is started, `}} {{` {{$URL$}} - the Internet link to the application server. `}}In order to avoid errors in writing these additional parameters, the user can add them by usingthe matrices editor accessible via the 'All parameters...' context menu after the {{$AppId$}} parameter has been filled (and is filled by the constant string).
APP_START_OUTPUT_DESC=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application the indicated action belongs to. For example, in order to shut down the application under test and to free its resources via the {{$ApplicationStop$}} action the user must pass a valid object to this action, which was received from {{$ApplicationStart$}} action.
APP_START_EXAMPLE=As a rule, {{$ApplicationStart$}} is placed in one of the initial TestCases where initialization is performed. Therefore it requires that the {{$Global$}} flag be set, as access to the output value is necessary within the whole matrix rather than just within the {{$TestCase$}} containing the action. {{#\n#Id;#Global;#Action;#AppId;#Browser;#URL\nAPPSTR1;1;ApplicationStart;'WEB';Browser;Env1 #}} It is a standart using this action with web.jar plugin.
APPLICATION_START_APP_ID=Adapter key, one of those described in the App entries branch of the configuration, which will be used for starting the corresponding plug-in and selecting the dictionary. The plug-in, in its turn, will start the application under test using the transferred parameters. If no record is found in a configuration for the corresponding {{$AppId$}}, the action will result in an error.
APP_STOP_GENERAL_DESC=The purpose of the action is to close the application under test. As a rule, ApplicationStop is placed in one of the last TestCases to stop the application initialized in {{@ApplicationStart@}} or {{@ApplicationConnectTo@}}. The flag {{$'Global'$}} (indicated with letter 'G') should be set in actions {{@ApplicationStart@}} or {{@ApplicationConnectTo@}}.
APP_STOP_EXAMPLE={{#\n#Action;#AppConnection\nApplicationStop;app\n#}}
APPLICATION_STOP_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application the indicated action belongs to. It is the output value of such actions as {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
APPLICATION_STOP_NEED_KILL=If true, the process will killed
APP_SWITCH_TO_GENERAL_DESC=Plug-in dependent action. The purpose of the action is to switch the focus among windows/tabs of the web application.
APP_SWITCH_TO_ADDITIONAL_DESC=The parameters are determined by the chosen plug-in. {{`For example, additional parameters {{$Title$}} and {{$URL$}} are available for web plug-in. They are necessary to get the information about the title bar and the address respectively.`}} The parameters can be chosen in the dialogue window opened with the context menu of this action in {{$'All parameters'$}} option.
APP_SWITCH_TO_OUTPUT_DESC=It returns the title bar of the window which gained the focus.
APP_SWITCH_TO_EXAMPLE={{#\n#Id;#Action;#Title;#AppConnection\nAST;ApplicationSwitchTo;'Title';app\n#Assert;#Message\nStr.IsNullOrEmpty(AST.Out);'Title is null'#}}
APPLICATION_SWITCH_TO_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application the indicated action belongs to. It is the output value of such actions as {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
APPLICATION_SWITCH_TO_SOFT_CONDITION=If the parameter value is true, the string in Title will be compared to the window title bar using the 'contains' principle. The window title bar is allowed to have the value of Title field and not to be the same.
ACTIONS_HELPER_CHOOSE_APP_ERROR=Choose default application at first.
#//endregion

#//region actions.tables
TABLE_CREATE_GENERAL_DESC=This action is determined to create a table (object type {{$Table$}}). Object Table is set as the two-dimensional structure consisting of rows and columns. Ordering of Rows starts with 0, columns are named. Object Table can be created with  {{@RawTable@}}, with actions {{@TableCreate@}} , {{@TableLoadFromFile@}} , {{@TableLoadFromDir@}} , {{@TableSelect@}} and method {{@Do.getTable()@}}. {{`|header1|header2|`}} {{`|value1 |value2 |`}} {{`|value1 |value2 |`}}
TABLE_CREATE_ADDITIONAL_DESC=Additional parameters are used to assign column titles. The value field of parameter is left empty.
TABLE_CREATE_EXAMPLE={{`1.Create a table with columns Name and Age.`}}{{`2. Verify that the created object has columns  set initially.`}}\n{{#\n#Id;#Action;#Name;#Age\nTC;TableCreate;;\n#Assert;#Message\nTC.Out.getHeader(0)=='Name' && TC.Out.getHeader(1)=='Age';'Table isn't correct'#}}\n
TABLE_CREATE_OUTPUT_DESC=Table structure.
TABLE_ADD_COLUMNS_GENERAL_DESC=This action is determined to add columns to the table given. It can be used if a table is created from different sources or if new columns are added to the table given.
TABLE_ADD_COLUMNS_EXAMPLES={{`1. Create a table with column Name.`}}{{`2. Add to the table created column Age (to the line number 0).`}}{{`3. Verify that the table has columns Name and Age. `}}{{#\n#Id;#RawTable\nTC;Table\n@;Name\n0;\n#EndRawTable\n#Action;#Index;#Table;#Columns\nTableAddColumns;0;TC;{'Age'}\n#Assert;#Message\nTC.getHeader(0) == 'Name' && TC.getHeader(1) == 'Age';'Table is not correct'#}}
TABLE_ADD_COLUMNS_TABLE=Таблица в которую необходимо добавить колонки
TABLE_ADD_COLUMNS_COLUMNS=Массив имён заголовков колонок
TABLE_ADD_COLUMNS_INDEX=Номер линии куда необходимо добавить. Нумерация начинается с 0. По умолчанию будет вставка в конец таблицы.
TABLE_ADD_VALUE_EXAMPLE={{`1. Create a table with columns Name and Age. Add a value into 0 line to a column Name. A cell in a column Age leave empty.`}}{{`2. Verify that a value in the first line of a column Name is equal 'Mike', Age is equal  null. Column Age is filled with a value null. `}}{{#\n#Id;#RawTable\nTC;Table\n@;Name;Age\n0;;\n#EndRawTable\n#Action;#Index;#Table;#Name\nTableAddValue;0;TC;'Mike'\n#Assert;#Message\nTC.get(0).get('Name') == 'Mike' && TC.get(0).get('Age') == null;'Not equals'#}}
TABLE_ADD_VALUE_GENERAL_DESC=This action  is determined to add lines to a Table..
TABLE_ADD_VALUE_ADDITIONAL_DESC=Are used to insert values where a parameter name - a column name, a parameter value - a cell value.
TABLE_ADD_VALUE_TABLE=Таблица, куда необходимо добавить линию.
TABLE_ADD_VALUE_INDEX=Индекс линии, где будет добавлена новая строка. Если отрицательное значение - добавление в конец таблицы. Нумерация начинается с 0.
TABLE_COLUMN_AS_LIST_GENERAL_DESC=This action extract one column of a table and returns it as a list of values.
TABLE_COLUMN_AS_LIST_OUTPUT_DESC=List of strings.
TABLE_COLUMN_AS_LIST_EXAMPLE={{#{{`#Id;#RawTable`}}{{`DATA2;Table`}}{{`@;A`}}{{`0;1`}}{{`1;2`}}{{`2;3`}}{{`3;4`}}{{`4;5`}}{{`#EndRawTable`}}{{``}}{{`#Id;#Action;#Assert;$Table;$Column`}}{{`TBL2;TableColumnAsList;This.Out.size() == 5 && This.Result == Result.Passed && This.Out[0] == '1';DATA2;'A'`}}#}}
TABLE_COLUMN_AS_LIST_TABLE=Таблица из которой будет извлечена колонка.
TABLE_COLUMN_AS_LIST_COLUMN=Имя колонки для извлечения.
TABLE_COLUMN_AS_LIST_GET_VALUES=Если true извлекаем значения, в противном случае - выражения.
TABLE_COLUMN_RENAME_GENERAL_DESC=This action is determined to rename a column in the table given.
TABLE_COLUMN_RENAME_ADDITIONAL_DESC=The column name given is indicated in a parameter's name, a new column name is in a parameter's value.
TABLE_COLUMN_RENAME_EXAMPLE={{`1. Create a table with columns Name and Age.`}}{{`2. Rename column Name into FirstName.`}}{{`3. Verify that a new name is assigned to a column. `}}{{#\n#Id;#RawTable\nTC;Table\n@;Name;Age\n0;;\n#EndRawTable\n#Action;#Table;#Name\nTableColumnRename;TC;'FirstName'\n#Assert;#Message\nTC.getHeader(0) == 'FirstName';'Values is not equals'#}}
TABLE_COLUMN_RENAME_TABLE=Таблица, в которой необходимо переименовать колонку/колонки
TABLE_COMPARE_TWO_GENERAL_DESC=This action is determined to compare two tables.
TABLE_COMPARE_TWO_EXAMPLE={{`1. Create a table with columns Name and Age. The first table line is applied with values Mike and 42 accordingly.`}}{{`2. Create a table similar to the previous. The first table line is applied with values Mike and 42 accordingly.`}}{{`3. Compare two tables.`}}Information about distinctions ( line number and columns titles which values do not match) is reported as a result of this action in form of:{{`Differences`}}{{`# Expected Actual`}}{{`0 [ Name : Mike, Age : 42 ] [ Name : Mike, Age : 41 ]`}}{{`Age 42 41`}}{{`If tables have different columns numbers, distinctions in cells will be ignored and information about all columns titles is displayed.`}} {{#\n#Id;#RawTable\nTC;Table\n@;Name;Age\n0;Mike;42\n#EndRawTable\n#Id;#RawTable\nTC1;Table\n@;Name;Age\n0;Mike;41\n#EndRawTable\n#Action;#Expected;#Actual\nTableCompareTwo;TC;TC1#}}
TABLE_COMPARE_TWO_OUTPUT_DESC=A table as a result of compare.
TABLE_COMPARE_TWO_ACTUAL=Таблица для сравнения.
TABLE_COMPARE_TWO_EXPECTED=Таблица, с которой будут сравнивать.
TABLE_COMPARE_TWO_EXCLUDE=Массив имён колонок, которые не будут учавствовать в сравнении.
TABLE_COMPARE_TWO_IGNORE_ROWS_ORDER=Игнорировать порядок строк.
TABLE_COMPARE_TWO_COMPARE_VALUES=Если true - сравнивать значения, иначе - сравнивать строки, представляющие собой значения.
TABLE_CONSIDER_COLUMN_AS_GENERAL_DESC=This action is determined  to take string values stored in a table to a certain data type. \nObjects Table are filled with string values by default. It is used in case when it is needed to perform an action with data stored in a table not as a line but as a one type of data given: {{$Integer$}}, {{$String$}}, {{$Boolean$}}, {{$Double$}}, {{$BigDecimal$}}, {{$Date$}}, and also {{$Expression$}} which is used to name cells which include expressions in mvel language. These expressions s will be calculated  when actions TableReport (if parameter ReportValues is used), TableSaveToFile (if parameter SaveValues is used), TableCompareTwo are performed.
TABLE_CONSIDER_COLUMN_AS_EXAMPLE={{`1. Create a table with columns Name and Age, SalaryPerYear and populate it with values.`}}{{`2. Set data type  Integer for column  Age.`}}{{`3. Using action TableSelect select all rows with value more than 25(int) in column Age.`}}{{`4. Verify that TableConsiderColumnsAs is correct. `}}{{#\n#Id;#RawTable\nTC;Table\n@;Name;Age;SalaryPerYear\n0;Mike;42;12000 * 12\n1;John;32;25000*12\n2;Fred;21;7000*12\n#EndRawTable\n#Action;#Table;#Integer\nTableConsiderColumnsAs;TC;'Age'\n#Id;#Action;#Table;#Age\nTS;TableSelect;TC;new NumberCondition('Age','>',25)\n#Action;#Expression;#Table\nTableConsiderColumnsAs;'SalaryPerYear';TS.Out\n#Assert;#Message\nTS.Out.size() == 2 && TS.Out.get(0).get('SalaryPerYear') == '144000'#}}
TABLE_CONSIDER_COLUMN_AS_TABLE=Таблица для преобразования.
TABLE_CONSIDER_COLUMN_AS_STRING=Массив имён колонок, для которых необходимо преобразовать тип содержимого в String.
TABLE_CONSIDER_COLUMN_AS_BOOLEAN=Массив имён колонок, для которых необходимо преобразовать тип содержимого в Boolean.
TABLE_CONSIDER_COLUMN_AS_INTEGER=Массив имён колонок, для которых необходимо преобразовать тип содержимого в Integer.
TABLE_CONSIDER_COLUMN_AS_DOUBLE=Массив имён колонок, для которых необходимо преобразовать тип содержимого в Double.
TABLE_CONSIDER_COLUMN_AS_BIG_DECIMAL=Массив имён колонок, для которых необходимо преобразовать тип содержимого в BigDecimal.
TABLE_CONSIDER_COLUMN_AS_DATE=Массив имён колонок, для которых необходимо преобразовать тип содержимого в Date.
TABLE_CONSIDER_COLUMN_AS_EXPRESSION=Массив имён колонок, для которых необходимо преобразовать тип содержимого в Expression.
TABLE_CONSIDER_COLUMN_AS_GROUP=Массив имён колонок, для которых необходимо преобразовать тип содержимого в Group.
TABLE_CONSIDER_COLUMN_AS_HYPERLINK=Массив имён колонок, для которых необходимо преобразовать тип содержимого в Hyperlink.
TABLE_CONSIDER_COLUMN_AS_COLORED=Массив имён колонок, для которых необходимо преобразовать тип содержимого в Colored.
TABLE_EDIT_GENERAL_DESK=Edit a table via interaction with a user
TABLE_EDIT_ADDITIONAL_DESC=Values where a parameter name - a table column name, a parameter value - true, if it is allowed to edit.
TABLE_EDIT_EXAMPLE={{#\n#Id;#RawTable\nTC;Table\n@;Name;Age;City\n0;Mike;25;London\n1;Jane;21;Moscow\n2;Ann;19;France\n#EndRawTable\n\n#Action;$Table;$Title;Name;Age;City\nTableEdit;TC;'Title';true;false;true\n\n#Action;$Table;$Title\nTableReport;TC;'table after edit'\n\n #}}
TABLE_EDIT_OUTPUT_DESC=Returns true if the user pushed the button Ok.
TABLE_EDIT_TITLE=Заголовок
TABLE_EDIT_TABLE=Таблица для редактирования.
TABLE_GET_ROW_INDEXES_GENERAL_DESC=This action is used for searching a suitable line numbers in the table given. Can be applied when it Is needed to get all indexes of the such lines.
TABLE_GET_ROW_INDEXES_ADDITIONAL_DESC=Columns containing the data which defines the search conditions. Column title is given in the parameter's value. In the value it is needed to specify the content which defines the search.
TABLE_GET_ROW_INDEXES_OUTPUT_DESC=Outputs the index list matching to conditions.
TABLE_GET_ROW_INDEXES_EXAMPLE={{#\n#Id;#RawTable\nTC;Table\n@;Name;Column\n0;Mike;2\n1;John;32\n2;Fred;2\n3;Mike;1\n4;Angel;10\n5;John;40\n#EndRawTable\n\n#Action;$Table;$Integer\nTableConsiderColumnsAs;TC;'Column'\n\n#Id;#Action;$Table;Column;Name\nTBLIDX1;TableGetRowIndexes;TC;new NumberCondition('Column','>',2);'John'\n\n#Assert;#Message\nTBLIDX1.Out == [1,5];\n\n#}}
TABLE_GET_ROW_INDEXES_TABLE=таблица, в которой будет вестись поиск строки.
TABLE_LEFT_JOIN_GENERAL_DESK=This action is determined to join tables as in SQL Left Join.
TABLE_LEFT_JOIN_ADDITIONAL_DESC=Additional parameters are used to assign column titles.
TABLE_LEFT_JOIN_OUTPUT_DESC=Table structure.
TABLE_LEFT_JOIN_EXAMPLE={{`1. Create a table with columns Name and Language. Populate it with few rows.`}}{{`2. Create a table with columns Name and CityId. Populate it with few rows.`}}{{`3. Use Left Join choosing rows from the first table on condition: matching column Name. `}}{{#\n#Id;#RawTable\nCity;Table\n@;id;Name;Language\n0;1;London;us\n1;2;Moscow;ru\n2;3;France;fr\n#EndRawTable\n\n#Id;#RawTable\nPerson;Table\n@;Name;CityId\n0;Andrey;1\n1;Victor;2\n2;Aleksander;1\n3;Valery;4\n4;Kate;3\n#EndRawTable\n\n#Id;#Action;$Condition;$LeftTable;$LeftAlias; \n $RightTable;$RightAlias;CityName;Language\nTBLJN1;TableLeftJoin;'person.CityId == city.id'; \n Person;'person';City;'city';'city.Name';'city.Language'\n\n#Action;$Table;$Title\nTableReport;TBLJN1.Out;'title'#}}
TABLE_LEFT_JOIN_RIGHT_TABLE=Таблица, чьи строки соответствуют условию.
TABLE_LEFT_JOIN_LEFT_TABLE=Иаблица, чья строки выбираются в соответствии с условием.
TABLE_LEFT_JOIN_RIGHT_ALIAS=Псевдоним для строк таблицы справа.
TABLE_LEFT_JOIN_LEFT_ALIAS=Псевдоним для строк таблицы слева.
TABLE_LEFT_JOIN_CONDITION=Выражение для выборки строк.
TABLE_LOAD_FROM_DIR_GENERAL_DESC=This action is determined to get directory structure as an object Table. Can be used to check required files in  this directory.
TABLE_LOAD_FROM_DIR_OUTPUT_DESC=Table which consists columns Name, Size, Date, Is directory, Hidden. Each table row contains data corresponding a file/folder in this directory. If it is directed to a null directory or file, an object Table is created without any columns or rows. If it is directed to an empty directory, a table is created with column titles and 0 rows.
TABLE_LOAD_FROM_DIR_EXAMPLE={{`1. Create a table with information about files/folders in directory Home.`}}\n{{#\n#Id;#Action;#Dir\nTBLD1;TableLoadFromDir;System.getProperty('user.home')#}}
TABLE_LOAD_FROM_DIR_DIRECTORY=Путь к папке. Запрещено использовать метасимволы.
TABLE_LOAD_FROM_FILE_GENERAL_DESK=This action is determined to create a table from file csv. {{`{{$CSV$}} (Comma-Separated Values) - a text format, which is determined to display table data.Specification: Each file row is a table row. The first row contains column titles.`}}
TABLE_LOAD_FROM_FILE_OUTPUT_DESK=If file is not found, object Table is not created.
TABLE_LOAD_FROM_FILE_EXAMPLE={{`1. Get table downloaded from file testTable.csv divided internally with '|'. Verify that table is downloaded correctly.`}}{{#\n#Id;#Action;#Assert;#File;#Delimiter\nTLFF;TableLoadFromFile;TLFF.Out.size() > 0;'PathToFile/testTable.csv';'|'#}}
TABLE_LOAD_FROM_FILE_FILE=Путь к файлу
TABLE_LOAD_FROM_FILE_DELIMITER=Любой символ, используемый для разделения значений. По умолчанию ','
TABLE_REMOVE_COLUMNS_GENERAL_DESK=This action is determined  to delete columns in a table given. (Object type Table). Can be used to correct the table.
TABLE_REMOVE_COLUMNS_EXAMPLE={{`1. Create a table with columns Name,Age,Gender,Salary`}}{{`2. Delete columns Name, Age, Gender  in a table  given.`}}{{`3.Verify that headings are deleted. `}}{{#\n#Id;#RawTable\nTC;Table\n@;Name;Age;Gender;Salary\n0;;;;\n#EndRawTable\n#Action;#Table;#Columns\nTableRemoveColumns;TC;{'Name','Age','Gender'}\n#Assert;#Message\nTC.getHeader(0) == 'Salary';#}}
TABLE_REMOVE_COLUMNS_TABLE=Таблица, из которой удалят колонки.
TABLE_REMOVE_COLUMNS_COLUMNS=Массив имён колонок для удаления.
TABLE_REMOVE_ROW_GENERAL_DESC=This action is used to delete a selected line in a table given.
TABLE_REMOVE_ROW_OUTPUT_DESC=True if removing is successful
TABLE_REMOVE_ROW_EXAMPLE={{` 1. Create a table with columns Name and Age. Add two lines with data to the table. `}}{{` 2. Delete the first line in the table, the line with the index 0. `}}{{` 3. Verify that the first line was deleted and was replaced with the line containing data about Anna. `}}{{#\n#Id;#RawTable\nTC;Table\n@;Name;Age\n0;Mike;25\n1;Anna;20\n#EndRawTable\n#Id;#Action;#Table;#Index\nTBLRR1;TableRemoveRow;TC;0\n#Assert;#Message\nTC.get(0).get('Name') == 'Anna';'Table is not correct'#}}
TABLE_REMOVE_ROW_TABLE=Таблица, из которой удалят строки.
TABLE_REMOVE_ROW_ROW=Номер удаляемой линии. Нумерация начинается с 0. В случае отрицательного значения будет удалена последняя линия.
TABLE_REPLACE_GENERAL_DESC=This action is used to replace cell values if the value is equal to the given one or complies with a regular expression.
TABLE_REPLACE_EXAMPLE={{`1. Create a table with columns Name and Age. Add four lines with data about Mike, Anna, John, Bruce.`}}{{`2. Replace all that comply with Regexp with 'passed'.`}}{{`3. Verify if everything was correct.`}} {{#\n#Id;#RawTable\nTC;Table\n@;Name;Mail\n0;John;c0nst@money.simply.net\n1;Mike;somebody@dev.com.ua\n2;Bruce;Name.Sur_name@gmail.com\n3;Anna;user33@somewhere.in.the.net\n#EndRawTable\n#Id;#Let\nrgxp;'[a-zA-Z]{1}[a-zA-Z\\\\\\\\d\\\\\\\\.\\\\\\\\_]+@([a-zA-Z]+\\\\\\\\.){1,2}((net)|(com)|(org))'\n#Action;#Regexp;#Replace;#Table;#Columns\nTableReplace;rgxp;'passed';TC;'Mail'\n#Assert;#Message\nTC.get(0).get('Mail')=='passed' && TC.get(2).get('Mail')=='passed';'Assert!'#}}
TABLE_REPLACE_TABLE=Таблица, в которой будут изменены значения.
TABLE_REPLACE_COLUMNS=Массив имён колонок, в которых необходимо провести замену.
TABLE_REPLACE_REPLACE=Значение для замены.
TABLE_REPLACE_SEARCH=Если значение ячейки или части ячейки равно этому значению, ячейка будет заменена. Игнорируется если указан Regexp.
TABLE_REPLACE_REGEXP=Если значение ячейки соответствует регулярному выражению, ячейка будет заменена.
TABLE_REPLACE_MATCH_CELL=Если ture - ячейка зудет заменена, иначе - только те что подходят по значению. Используется только если задан параметр Search и игнорируется если задан параметр Regexp.
TABLE_REPORT_GENERAL_DESC=This action is used to output the table to report.
TABLE_REPORT_ADDITIONAL_DESC=Columns containing the data which defines the outgoing columns. Column title is given in the parameter's value. In the value it is needed to specify the new name for table in the report.
TABLE_REPORT_EXAMPLE={{` 1. Create a test case with id Test.`}}{{` 2. Create a table with columns Name and Age. Add values to the first line of the table.`}}{{` 3. Output the table into the report only with the column Age, before the test case with id Test.`}} {{#\n#Id;#TestCase\nTest;\n    #Id;#RawTable\n    TC;Table\n    @;Name;Age\n    0;Mike;25\n    #EndRawTable\n    #Action;#BeforeTestCase;#Table;#Title;#Columns\n    TableReport;'Test';TC;'Table title';{'Age' : 'Age of person'}#}}
TABLE_REPORT_TABLE=таблица, которая должна выгружаться в отчёт.
TABLE_REPORT_TITLE=Заголовок выгружаемой таблицы.
TABLE_REPORT_COLUMNS=Массив или map заголовков колонок, которые должны попасть в отчёт.
TABLE_REPORT_WIDTHS=Массив чисел, определяющий ширину каждой колонки.
TABLE_REPORT_BEFORE_TEST_CASE=Позволяет выгружать таблицу на высший уровень отчёта.
TABLE_REPORT_REPORT_VALUES=Если false - выгружаем данные из ячеек, иначе - выражения. Доступно для ячеек типа Expression, смотри {{@TableConsiderColumnAs@}}
TABLE_REPORT_WITH_NUMBERS=
TABLE_SAVE_TO_FILE_GENERAL_DESC=This action is used to save a table to the file with csv structure. {{`CSV (Comma-Separated Values)`}} is a text format, used for displaying data from the table.Specification: Each line in the file is one line from the table. The first line contains column titles.
TABLE_SAVE_TO_FILE_OUTPUT_DESC=True if saved successfully.
TABLE_SAVE_TO_FILE_EXAMPLE={{` 1. Create a table with columns Name and Age. `}}{{` 2. Add values to the first line of the table. `}}{{` 3. Save the table into the file dest.csv. `}}{{#\n#Id;#RawTable\nTC;Table\n@;Name;Age\n0;Mike;25\n#EndRawTable\n#Id;#Action;#Table;#File\nTSTF;TableSaveToFile;TC;'Path/dest.csv'\n#Assert;#Message\nTSTF.Out;'Table was not saved'#}}
TABLE_SAVE_TO_FILE_TABLE=Таблица, которую необходимо сохранить в файл
TABLE_SAVE_TO_FILE_FILE_NAME=путь к файлу, в который будет сохрканена таблица. Имя файла должно указываться с суффиксом
TABLE_SAVE_TO_FILE_DELIMITER=Любой символ, используемый для разделения колонок в файле. По умолчанию ','
TABLE_SAVE_TO_FILE_SAVE_VALUES=Если значение false - сохраняются значения ячеек, иначе - значения выражений. Доступно для ячеек типа Expression, смотри {{@TableConsiderColumnAs@}}.
TABLE_SELECT_GENERAL_DESC=This action is used for extracting lines from the table given and creating a new table with these lines. Can be applied when it Is needed to get only a part of data from the table.Line extracting is done according to the content which is specified in additional parameters.
TABLE_SELECT_ADDITIONAL_DESC=Columns containing the data which defines the selection. Column title is given in the parameter's value. In the value it is needed to specify the content which defines the selection.
TABLE_SELECT_OUTPUT_DESC=Outputs the table containing the selected lines.
TABLE_SELECT_EXAMPLE={{`Example #1:`}}\n{{`1. Create a table with columns Name and Age. Complete the table with 3 lines.`}}\n{{`2. Set the data type  Integer for the column Age.`}}\n{{`3. With the actionTableSelect select all lines with the value 'Mike' in the column Name.`}}\n{{`4. Verify that the size of the table is equal to 1. `}}\n{{#\n#Id;#RawTable\nTC;Table\n@;Name;Age\n0;Mike;42\n1;John;42\n2;Fred;21\n#EndRawTable\n#Action;#Table;#Integer\nTableConsiderColumnsAs;TC;'Age'\n#Id;#Action;#Table;#Age\nTS;TableSelect;TC;new StringCondition('Name','Mike')\n#Assert;#Message\nTS.Out.size() == 1;#}}\n{{`Example #2:`}}\n{{`1. Create a table with columns Name and Age. Complete the table with 3 lines.`}}\n{{`2. Set the data type  Integer for the column Age.`}}\n{{`3. With the action TableSelect select all lines where the column values Age are more than 20`}}\n{{`4. Verify that the size of the table is equal to 2. `}}\n{{#\n#Id;#RawTable\nTC;Table\n@;Name;Age\n0;Mike;42\n1;John;34\n2;Fred;21\n#EndRawTable\n#Action;#Table;#Integer\nTableConsiderColumnsAs;TC;'Age'\n#Id;#Let\ncondition; new AndCondition(new NumberCondition('Age','>',20))\n#Id;#Action;#Table;#Age\nTS;TableSelect;TC;condition\n#Assert;#Message\nTS.Out.size() == 2;#}}\n
TABLE_SELECT_TABLE=Таблица, из которой будут выбираться строки.
TABLE_SET_VALUE_GENERAL_DESK=This action is used to set values in the cells of a table given.
TABLE_SET_VALUE_ADDITIONAL_DESK=Set values for all cells in the line given. Each parameter name sets the column title, where the value is set. The value if a corresponding parameter sets the value of the column.
TABLE_SET_VALUE_EXAMPLE={{`1. Create a table with columns Name and Age. Add values to the first line of the table.`}}{{`2. Set the value for the columns Name and Age 'John' and '42' in the first line.`}}{{`3. Verify that the new values were inserted correctly. `}}{{#\n#Id;#RawTable\nTC;Table\n@;Name;Age\n0;Mike;25\n#EndRawTable\n#Action;#Table;#Index;#Name;#Age\nTableSetValue;TC;0;'John';'42'\n#Assert;#Message\nTC.get(0).get('Name') == 'John'&& TC.get(0).get('Age') == '42';#}}
TABLE_SET_VALUE_TABLE=Таблица для изменений.
TABLE_SET_VALUE_INDEX=Номер строки, в которую будет записано значение. Нумерация начинается с 0.
TABLE_SORT_GENERAL_DESC=This action is used to sorting the table by the column given.
TABLE_SORT_OUTPUT_DESK=Restores the original but sorted table.
TABLE_SORT_EXAMPLE={{` 1. Create a table with columns Name and Age. Complete the table with 3 lines.`}}{{`2. Do top-down sorting in  Age.`}}{{`3. Output the sorted table to report. `}}{{#\n#Id;#RawTable\nTC;Table\n@;Name;Age\n0;Mike;42\n1;John;57\n2;Anna;21\n#EndRawTable\n#Action;#Ascending;#ColumnName;#Table\nTableSort;false;'Age';TC\n#Action;#Table;#Title\nTableReport;TC;'Table title'#}}
TABLE_SORT_TABLE=Сортируемая таблица.
TABLE_SORT_COLUMN_INDEX=Заголовок колонки для сортировки.
TABLE_SORT_ASCENDING=Тип сортировки: true - сортировка по увеличению, false - уменьшению. True по умолчанию
TABLE_SORT_IGNORE_CASE=Если true - сортировка игнорирует регистр. Доступно только для данных типа строка.
TABLE_UNION_GENERAL_DESK=This action is used to add all lines from one table  to the end of another one. With the table merge, Main Table columns have priority, that means that merging with the table with more columns extra ones will be ignored. In case of adding the table with not enough columns from the main one, the values in such columns will be null.
TABLE_UNION_EXAMPLE={{#\n#Id;#RawTable\nmain;Table\n@;Name;Age;Gender\n0;Mike;42;Male\n1;Anna;21;Female\n#EndRawTable\n\n#Id;#RawTable\nadditional;Table\n@;Name;Age\n0;Fred;28\n1;Carl;10\n#EndRawTable\n\n#Action;$UnitedTable;$MainTable\nTableUnion;additional;main\n\n#Action;$Table;$Title\nTableReport;main;'dfdf'\n\n#Id;#RawTable\nexpected;Table\n@;Name;Age;Gender\n0;Mike;42;Male\n1;Anna;21;Female\n2;Fred;28;\n3;Carl;10;\n#EndRawTable\n\n#Id;#Action;$Expected;$Actual\nTBLCMP1;TableCompareTwo;expected;main\n\n#}}
TABLE_UNION_MAIN_TABLE=Таблица, в которую добавятся новые строки.
TABLE_UNION_UNITED_TABLE=Таблица, чьи строки будут добавлены в основную.
#//endregion

#//region actions.client
CLIENT_CHECK_FIELDS_GENERAL_DESC=The purpose of the action is to check message fields against the field set dictionary of the client. Start of the client is not mandatory.
CLIENT_CHECK_FIELDS_OUTPUT_DESC=True, if the message is correct.
CLIENT_CHECK_FIELDS_EXAMPLE={{`1.Load the client for FIX.`}}{{`2.Create a message type FIX with a set key-value.`}}{{`3.Check the message.`}} {{#\n #Id;#Action;$ClientId\nCLLD1;ClientLoad;'FIX'\n\n#Id;#Action;PartyID;PartyIDSource;PartyRole;$MessageType\nMSGCR1;MessageCreate;'test';'1';3;'35'\n\n#Id;#Action;#Assert;$MapMessage;$ClientConnection\nCLCHM1;ClientCheckFields;This.Out == true;MSGCR1.Out;CLLD1.Out#}}
CLIENT_CHECK_FIELDS_CONNECTION=The connection with the client, which is derived from the action ClientLoad.
CLIENT_CHECK_FIELDS_MESSAGE=The message that is required to check.
CLIENT_CHECK_MESSAGE_GENERAL_DESC=The purpose of the action is to compare the message type MapMessage with the field set type key-value. MapMessage is the output value of actions: {{@ClientCreateMapMessage@}}, {{@ClientDecode@}}, {{@ClientGetMessage@}}, {{@ClientSendMessage@}}. In the report a chart will be formed with the headline the Mismatched fields: consisting of columns {{$Name$}} and {{$Expected$}} + {{$Actual$}}. In the case of inequality in the compared fields the MapMessage action fails. Start of the client is not mandatory.
CLIENT_CHECK_MESSAGE_ADDITIONAL_DESC=In additional parameters, the names and values which should be compared with MapMessage, which is passed in parameter {{$ActualMessage$}}, are pointed out.
CLIENT_CHECK_MESSAGE_EXAMPLE={{`1. Load the client for FIX`}}{{`2. Create a message type FIX with a set key-value.`}}{{`3. Check the message.`}} {{##Id;#Action;$ClientId\nCLLD1;ClientLoad;'TestClient'\n\n#Id;#Action;Address;Port;$ClientConnection\nCLSTRT1;ClientStart;'127.0.0.1';13000;CLLD3.Out\n\n#Id;#Action;PartyID;PartyIDSource;PartyRole;$MessageType\nMSGCR1;MessageCreate;'test';'1';3;'35'\n\n#Id;#Action;PartyID;$ActualMessage;$ExpectedMessageType;$ClientConnection\nCLMSGCHK1;ClientCheckMessage;'test';MSGCR1.Out;'35';CLLD1.Out#}}
CLIENT_CLEAR_MESSAGES_GENERAL_DESC=The purpose of the action is to clear the list of all accepted client messages. Start of the client is not mandatory.
CLIENT_CLEAR_MESSAGES_EXAMPLE={{`1. Load the client for FIX.`}}{{`2. Clear the list of the client messages.`}} {{##Id;#Action;#ClientId\nCLLD1;ClientLoad;'FIX'\n\n#Id;#Action;#ClientConnection\nCLCLM1;ClientClearMessages;CLLD1.Out#}}
CLIENT_CHECK_MESSAGE_CONNECTION=The connection with the client, which is derived from the action ClientLoad.
CLIENT_CHECK_MESSAGE_ACTUAL=The message that is required to compare.
CLIENT_CHECK_MESSAGE_MESSAGE_TYPE=The message type that is expected.
CLIENT_CLEAR_MESSAGES_CONNECTION=The connection with the client, which is derived from the action {{@ClientLoad@}}.
CLIENT_CONNECT_EXAMPLE={{`1. Load the client for FIX.`}}{{`2. Connect the client to the port #10506.`}}{{##Id;#Action;#ClientId\nCLLD1;ClientLoad;'FIX'\n\n#Id;#Action;#ClientConnection;#Socket\nCLCNCT1;ClientConnect;CLLD1.Out;10506#}}
CLIENT_CONNECT_ADDITIONAL_DESC=Parameters for  the client run are indicated.
CLIENT_CONNECT_OUTPUT_DESC=True, if the connection was successful.
CLIENT_CONNECT_GENERAL_DESC=The purpose of the action is to connect the client to the specific socket. Usually the number of the socket comes from the service.\nLater the client will bring in and send messages through this socket.
CLIENT_CONNECT_CONNECTION=The connection with the client, which is derived from the action ClientLoad.
CLIENT_CONNECT_SOCKET=The port that will use the client.
CLIENT_COUNT_MESSAGES_GENERAL_DESC=The purpose of the action is to count the messages, which field set responds to the reported condition. Simple comparison conditions are passed in additional parameters. Complicated comparison conditions are indicated in the parameter Conditions.
CLIENT_COUNT_MESSAGES_OUTPUT_DESC=The number of messages which meet the requirements.
CLIENT_COUNT_MESSAGES_ADDITIONAL_DESC=In the name of the parameter the key is indicated, in the option setting the predicted value is indicated.
CLIENT_COUNT_MESSAGES_EXAMPLE={{`1. Load the client for FIX.`}}{{`2. Count the number of messages with the field name Name and  the field value Value.`}} {{##Id;#Action;#ClientId\nCLLD1;ClientLoad;'FIX'\n\n#Id;#Action;#ClientConnection;#MessageType;#Name\nCLCNT1;ClientCountMessages;CLLD1.Out;'35';'Value'#}}
CLIENT_COUNT_MESSAGES_CONNECTION=The connection with the client, which is derived from the action ClientLoad.
CLIENT_COUNT_MESSAGES_MESSAGE_TYPE=Message type. Use * for any type of messages.
CLIENT_COUNT_MESSAGES_CONDITIONS=The conditions in which the comparison will be carried out.
CLIENT_DECODE_GENERAL_DESC=The purpose of the action is for  the message decode. Converts the massive byte in the message. Start of the client is not mandatory.
CLIENT_DECODE_OUTPUT_DESC=Converted message.
CLIENT_DECODE_EXAMPLE={{`1. Load the client for FIX.`}}{{`2. Create the message.`}}{{`3. Encode the message.`}}{{`4. Decode the message.`}} {{##Id;#Action;$ClientId\nCLLD1;ClientLoad;'FIX'\n\n#Id;#Action;PartyID;$MessageType\nMSGCR1;MessageCreate;'test';'35'\n\n#Id;#Action;$MapMessage;$ClientConnection\nCLENC1;ClientEncode;MSGCR1.Out;CLLD1.Out\n\n#Id;#Action;$Array;$ClientConnection\nCLDEC1;ClientDecode;CLENC1.Out;CLLD4.Out#}}
CLIENT_DECODE_ARRAY=A massive byte which is required to convert in MapMessage.
CLIENT_DECODE_CONNECTION=The connection with the client, which is derived from the action ClientLoad.
CLIENT_ENCODE_GENERAL_DESC=The purpose of the action is to encode the message. It converts the message in a massive byte. Start of the client is not mandatory.
CLIENT_ENCODE_OUTPUT_DESC=Array of bytes.
CLIENT_ENCODE_EXAMPLE={{`1. Load the client for FIX.`}}{{`2. Create the message.`}}{{`3. Encode the message.`}} {{##Id;#Action;$ClientId\nCLLD;ClientLoad;'FIX'\n\n#Id;#Action;PartyID;$MessageType\nMSGCR1;MessageCreate;'test';'35'\n\n#Id;#Action;$MapMessage;$ClientConnection\nCLENC1;ClientEncode;MSGCR1.Out;CLLD.Out#}}
CLIENT_ENCODE_MESSAGE=The object type MapMessage, which is required to convert in a massive byte.
CLIENT_ENCODE_CONNECTION=The connection with the client, which is derived from the action ClientLoad.
CLIENT_GET_MESSAGE_GENERAL_DESC={{`The purpose of the action is to get the message, which conforms the required condition. The search of the message takes place in the message queue. If the message with the required conditions wasn't found, the search starts from the beginning of the queue because during the search new messages can appear in the queue.`}}{{`The search happens during the specified period of time, if the message is not found upon the expiry of time, the action fails.`}}
CLIENT_GET_MESSAGE_ADDITIONAL_DESC=Values, in accordance with which the search of the message will happen.
CLIENT_GET_MESSAGE_OUTPUT_DESC=The message or error, if the message was not found within the time limit.
CLIENT_GET_MESSAGE_EXAMPLE={{`1. Load the client for FIX.`}}{{`2. Find the message with the value Value and name Name.`}} {{##Id;#Action;#ClientId\nCLLD1;ClientLoad;'FIX'\n\n#Id;#Action;#ClientConnection;#MessageType;#Name\nCLGM1;ClientGetMessage;CLLD1.Out;'35';'Value'#}}
CLIENT_GET_MESSAGE_CONNECTION=The connection with the client, which is derived from the action ClientLoad.
CLIENT_GET_MESSAGE_MESSAGE_TYPE=The type of the message. Use * for any type of messages.
CLIENT_GET_MESSAGE_CONDITIONS=The conditions upon which the message will be checked.
CLIENT_GET_MESSAGE_TIMEOUT=The time which is given to find the acceptable message.
CLIENT_GET_MESSAGE_REMOVE=Delete the found message.
CLIENT_LOAD_GENERAL_DESC=The purpose of the action is to load,initialize and get the connection with the Client.Later, the received connection is used in such actions as {{@ClientStart@}}, {{@ClientStop@}}, {{@ClientDecode@}} and etc. Clients represent the entity which performs functions in respect of client- server. The client can send and get messages through received TCP connection.
CLIENT_LOAD_OUTPUT_DESC=The connection with the Client.
CLIENT_LOAD_EXAMPLE={{`Load the client for FIX.`}} {{##Id;#Action;#ClientId\nCLLD1;ClientLoad;'FIX'#}}
CLIENT_LOAD_ID=Id of the Client, with which the connection should be made.
CLIENT_SEND_MAP_MESSAGE_GENERAL_DESC=The purpose of the action is to send messages through a made connection. The start of the client is mandatory. It is targeted at converting messages for specified type and its sending.
CLIENT_SEND_MAP_MESSAGE_EXAMPLE={{`1. Load the client for FIX.`}}{{`2. Create the message with the help of MessageCreate method.`}}{{`3. Connect to the port #13000.`}}{{`4. Send the created message, test it preliminarily with the indication of CHECK - true in the  parameter.`}}{{##Id;#Action;$ClientIdCLLD1;ClientLoad;'FIX'#Id;#Action;PartyID;$MessageTypeMSGCR1;MessageCreate;'qpwoei';'35'#Id;#Action;Address;Port;$ClientConnectionCLSTRT1;ClientStart;'127.0.0.1';13000;CLLD3.Out#Id;#Action;$Check;$MapMessage;$ClientConnectionCLSMM1;ClientSendMapMessage;true;MSGCR1.Out;CLLD1.Out#}}
CLIENT_SEND_MAP_MESSAGE_CONNECTION=The connection with the client, which is derived from the action ClientLoad.
CLIENT_SEND_MAP_MESSAGE_MESSAGE=Message that is required to send.
CLIENT_SEND_MAP_MESSAGE_CHECK=Validation message check before sending. As a default true.
CLIENT_SEND_MESSAGE_GENERAL_DESC=The purpose of the action is to create and send the message. The start of the client is mandatory.
CLIENT_SEND_MESSAGE_OUTPUT_DESC=The message which was created and sent.
CLIENT_SEND_MESSAGE_ADDITIONAL_DESC=In additional parameters name and values set is indicated which will be converted into the message type which is typical for the client.
CLIENT_SEND_MESSAGE_EXAMPLE={{`1. Load the client for FIX.`}}{{`2. Connect to the port #10555.`}}{{`3. Create and send the message, check it beforehand with the indication of CHECK - true in the  parameter.`}}{{##Id;#Action;$ClientId\nCLLD1;ClientLoad;'TestClient'\n#Id;#Action;Address;Port;$ClientConnection\nCLSTRT1;ClientStart;'127.0.0.1';10555;CLLD1.Out\n#Id;#Action;$Check;PartyID;$ClientConnection;$MessageType\nCLSM1;ClientSendMessage;true;'test';CLLD1.Out;'35'#}}
CLIENT_SEND_MESSAGE_CONNECTION=The connection with the client, which is derived from the action ClientLoad.
CLIENT_SEND_MESSAGE_MESSAGE_TYPE=The type of the created message.
CLIENT_SEND_MESSAGE_CHECK=Checks the validation before the message sending. As a default true.
CLIENT_SEND_RAW_MESSAGE_GENERAL_DESC=The purpose of the action is to send an array of bytes through a made connection without any preprocessing. The start of the client is mandatory.
CLIENT_SEND_RAW_MESSAGE_EXAMPLE={{`1. Load the client for FIX.`}}{{`2. Connect to the port #10555.`}}{{`3. Create and send the raw message.`}} {{##Id;#Let\nstr;'8=FIXT.1.1|9=91|35=A|34=1|49=SenderCompID|52=20170426-08:25:00.002'\n#Id;#Let\nstr;str + '|56=TargetCompID|98=0|108=1|141=Y|1137=9|10=131|'\n#Id;#Let\nbytes;str.replace('|', '\\001').getBytes()\n#Id;#Action;$ClientId\nCLLD1;ClientLoad;'FIX'\n#Id;#Action;$ClientConnection;$Socket\nCLCNCT1;ClientConnect;CLLD1.Out;10555\n#Id;#Action;$ClientConnection;$Data\nCLSRM1;ClientSendRawMessage;CLLD1.Out;bytes#}}
CLIENT_SEND_RAW_MESSAGE_CONNECTION=The connection with the client, which is derived from the action ClientLoad.
CLIENT_SEND_RAW_MESSAGE_DATA=Array of bytes that will be sent 'as is'.
CLIENT_SET_PROPERTIES_GENERAL_DESC=The purpose of the action is to set properties to the client. The following properties are available: {{$SenderCompID$}}, {{$TargetCompID$}}, {{$MsgSeqNum$}}.
CLIENT_SET_PROPERTIES_ADDITIONAL_DESC=In the value of the additional parameter the name of the property is indicated, in the parameter  value the property value is pointed out.
CLIENT_SET_PROPERTIES_EXAMPLE={{`1. Load the client for FIX`}}{{`2. Set the propertyName the value Value`}} {{##Id;#Action;#ClientId\nCLLD1;ClientLoad;'FIX'\n#Id;#Action;#ClientConnection;#Name\nCLSP1;ClientSetProperties;CLLD1.Out;'Value'#}}
CLIENT_SET_PROPERTIES_CONNECTION=The connection with the client, which is derived from the action ClientLoad.
CLIENT_START_GENERAL_DESC=The purpose of the action is to start the client. It establishes the connection with the remote service, by using the mentioned address and the port, receives messages and adds them in the queue. If in the customer setting the parameter UseHeartBeat is shown as true, then in the queueing the client will automatically send  the heart beat with the interval, which is also mentioned in the parameters of the client.
CLIENT_START_OUTPUT_DESC=True, if the client started successfully.
CLIENT_START_ADDITIONAL_DESC=As additional parameters, parameters with the names Address and Port are indicated, in the value of which, correspondingly the address and the service port are indicated, with which the connection is required.
CLIENT_START_EXAMPLE={{`1. Load the client for FIX.`}}{{`2. Start the client.`}}{{##Id;#Action;#ClientId\nCLLD1;ClientLoad;'FIX'\n#Id;#Action;#ClientConnection\nCLSTRT1;ClientStart;CLLD1.Out#}}
CLIENT_START_CONNECTION=The connection with the client, which is derived from the action ClientLoad
CLIENT_STOP_GENERAL_DESC=The purpose of the action is to stop connectivity break with the service. The start of the client is mandatory.
CLIENT_STOP_EXAMPLE={{`1. Load the client for FIX.`}}{{`2. Start the client.`}}3. Stop the client.{{#\n#Id;#Action;#ClientId\nCLLD1;ClientLoad;'FIX'\n#Id;#Action;#ClientConnection\nCLSTRT1;ClientStart;CLLD1.Out\n#Id;#Action;#ClientConnection\nCLSTP1;ClientStop;CLLD1.Out#}}
CLIENT_STOP_CONNECTION=The connection with the client, which is derived from the action ClientLoad.
CLIENTS_HELPER_CHOOSE_CLIENT_ERROR=Choose default client at first.
CLIENTS_HELPER_UNKNOWN_MESSAGE_TYPE=The message with message type='%s' is unknown.
CLIENTS_HELPER_UNKNOWN_FIELD_NAME=The field with name='%s' is unknown.
#//endregion

#//region actions.gui
DESKTOP_SCREENSHOT_GENERAL_DESC=The purpose of the action is to capture the full screenshot along with the desktop.\nThis gives the user the advantage to see system notifications of third-party applications.  The disadvantage is that the screenshot is captured on the 'upper layer', i.e the events/windows overlapped by other windows will not be seen.
DESKTOP_SCREENSHOT_OUTPUT_DESC=An image which is grabbed from the desktop.
DESKTOP_SCREENSHOT_EXAMPLE={{##Id;#Action;#Description\nDSK1;DesktopScreenshot;'My desktop'#}}\n
DESKTOP_SCREENSHOT_DESCRIPTION_PARAM=The description of the image which will be displayed in tooltip.
DIALOG_ALERT_GENERAL_DESC=The purpose of this action is to process pop-up notifications.\nIt is a plug-in dependent action currently being used only with web plug-in.
DIALOG_ALERT_OUTPUT_DESC=Output value is the notification heading.
DIALOG_ALERT_EXAMPLE={{`1. Type 'hello' in the pop-up notification field`}}{{`2. Ensure we have the notification heading as an output value.`}}{{##Id;#Action;#Text;#Perform;#AppConnection\nDLGALRT1;DialogAlert;'hello';PerformKind.Accept;APPSTR1.Out\n#Assert;#Message\nDLGALRT1.Out != null;#}}
DIALOG_ALERT_APP_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application the indicated action belongs to. It is the output value of such actions as {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
DIALOG_ALERT_PERFORM_KIND=The PerformKind type. The parameter responsible for actions with alert.  There are 3 states to the parameter:\nNothing - ignore the notification.\nAccept - click 'OK'.\nDismiss - click 'Cancel'.
DIALOG_ALERT_TEXT=Used to input text in the corresponding field of notification.
DIALOG_CHECK_LAYOUT_GENERAL_DESC=The following action is needed to check the structure of elements of the dialogue in the form. It helps to verify a reorganization of the forms of agile applications forms. For example, a change of resolution, screen layout (vertical/horizontal) etc. You can also verify adjusting of elements relative to one another, visibility of elements, and their sizes. The action uses it's dictionary in which forms, their elements and algorithms for finding them on the screen are described. The chosen application 'knows' about its' dictionary and allows to operate interactively with it - to choose a dialogue from the list and to choose those elements that will be used by the user via the context menu 'All parameters'. When you run this action, it gets the information related to the dictionary from the connection with the application (AppConnection). Running of the action starts with processing section 'OnOpen' of the chosen dialogue. If there are some elements in this section, the action will be applied to all of them one by one by default. Usually element Wait is found here, that waits for the main container of the form to appear on the screen. In some cases (when a user is sure that there is a form on the screen, processing of this section can be turned off by setting parameter DoNotOpen in true). This parameter has value false by default. The same happens when closing the form - section OnClose is processed. Usually element Wait is found here, that waits for the main container of the form to become invisible. It is possible to stop processing this section by setting parameter DoNotClose. The main work is done in section of the dictionary Run of the dialogue. All identified elements (that have attribute Id) from this section can be used when dealing with DialogCheckLayout. A name of the element is set as a name of the parameter. Elements of the form are processed according to this action. If an element is not virtual (for example, Wait), it should be found on the screen, then its' sequence that was set by the parameter is processed. Action DoSpec is specified in the parameter. For example, DoSpec top('Element1', 10) means that Element1 is10px higher than the known one.
DIALOG_CHECK_LAYOUT_APP_CONNECTION=The application connection.
DIALOG_CHECK_LAYOUT_DIALOG=A name of the dialog.
DIALOG_CHECK_LAYOUT_DO_NOT_OPEN=Do not open a new dialog.
DIALOG_CHECK_LAYOUT_DO_NOT_CLOSE=Do not close a dialog.
DIALOG_CHECK_LAYOUT_FIELDS=Map of control name : control operation.
DIALOG_CHECK_LAYOUT_TABLE=Table with DoSpec operations
DIALOG_CLOSE_GENERAL_DESC=The purpose of the action is to close the dialogs. The dialog to be closed needs to be described in the Close section of the dictionary. When working with swing and win plug-ins, Dialogs can be closed without being described in the Close section because there is a capability to programmatically close the window. In web the elements can't be closed programmatically and require direct handling.
DIALOG_CLOSE_OUTPUT_DESC=The number of dialogs closed.
DIALOG_CLOSE_EXAMPLE={{`1. Start the web application.`}}{{`2. Close all the elements described in the Close section of MyDialog.`}}{{`3. Check the number of closed elements.`}}{{##Id;#Action;#Browser;#URL;#AppId\nAPPSTR1;ApplicationStart;'Chrome';'https://google.com';'WEB'\n#Id;#Action;#Dialog;#AppConnection\nDLGCLS1;DialogClose;'MyDialog';APPSTR1.Out\n#Assert;#Message\nDLGCLS1.Out > 0;'0 elements was closed'#}}
DIALOG_CLOSE_APP_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application the indicated action belongs to. It is the output value of such actions as {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
DIALOG_CLOSE_DIALOG=The name of the Dialog whose Close section has the descriptions of elements to be closed.
DIALOG_FILL_GENERAL_DESC=The purpose of this action is to work with control elements on the screen of the application under test.  With its help the user can fill in the text boxes of the forms, manage the mouse and the keyboard and also get some parameters from the elements of the forms (names, attributes etc.) The action uses the dictionary containing the descriptions of forms, its elements and the rules for finding those elements on the screen.  In matrix editor this action can help to choose the elements which need to be dealt with from the dictionary.  For this, the user should choose 'Default app' on the Matrix editor control panel. The chosen application 'is aware' of its dictionary and allows to work with it interactively by choosing a dialog from the list or indicating the elements to work with through 'All parameters' context menu for the specified dialog.  The elements can be of different types - buttons, text boxes, menus, table etc.  Each type of element can process only the operations pertaining to it.  Buttons can be clicked, but not filled with text, for example.  Besides, for each element the action is set by default. While being launched, the action draws the information about the dictionary from the connection with the application (AppConnection). The action's work starts with processing the 'OnOpen' section of the chosen dialog.  If there are some elements in this section then the default action will be performed for all of them one after another.  Usually the Wait element is found here which waits for the main container of the form to appear on the screen.  This allows to make sure the elements of the form are available for work.  In some cases - when the user is sure that the form is on the screen - the processing of this section can be canceled by setting DoNotOpen parameter in true.  By default this parameter has false value.  The same mechanism works when closing the form - the OnClose section is processed.  Usually it contains the Wait element which waits for the form's container to become invisible.  Processing of this section can be forbidden with DoNotClose parameter. Most work is performed with the Run section of the dialog in the dictionary.  All named elements (with ID attribute set) from this section can be used when working with DialogFill. The name of the element is set as parameter name.  The form's elements are processed in the order used in this action.  If the element is not virtual (like Wait), then it is first searched for on the screen and then the sequence of operations is performed, defined by the value of the parameter. The same element can be met several times.  For instance, you can click the button, input some value in the text field and click the same button again. In general, the expression is a sequence of operations.  There is a class for describing these sequences - Do.  For example Do.click() However, more complex sequences can be built for each element.  For a certain text field one can come up with such sequence: Do.text('test').delay(100).check('test').Here the operations are described in more detail:  [Do] if the expression doesn't represent the sequence of operations then for the specified element its default action is performed.  Therefore text fields can be just given string values which will be modified into a chain Do.text('your text') automatically.  If the value is not necessary for the operation, for example the default action for a button is just clicking, then this value is ignored.
DIALOG_FILL_OUTPUT_DESC=Associative array which displays the names of the elements processed by the action along with values received from the form, for example, as a result of the operation Do.get().If some element in the action was used several times, only the last value will be returned.Expressions are operations with elements.
DIALOG_FILL_EXAMPLE=Parameter names assign names to the elements from Run section of the specified dialog.\nExpressions are operations with elements.
DIALOG_FILL_APP_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application the indicated action belongs to. It is the output value of such actions as {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
DIALOG_FILL_DIALOG=The name of the dialog being processed.
DIALOG_FILL_DO_NOT_OPEN=Do not process the 'OnOpen' section of the dialog from the dictionary.  False by default.
DIALOG_FILL_DO_NOT_CLOSE=Do not process the 'OnClose' section of the dialog from the dictionary.  False by default.
DIALOG_FILL_STOP_ON_FAIL=Stop in case of an error occurring in the processing of another element of this action. Otherwise the element's error code is logged into the output collection of matrix values, but the work of action is not interrupted. True by default.
DIALOG_FILL_FIELDS=Is an associative array which can be used instead of parameters.  Array keys define the elements in the dictionary; the values are operations.  This parameter is designated more for writing frameworks working with dictionaries other than daily work.\n
DIALOG_RESIZE_EXAMPLE=Example 1.{{#\n#Action;$Dialog;$AppConnection;$Height;$Width\nDialogResize;'Dialog';appCon;500;500\n#}} \nExample 2.{{#\n#Action;$Dialog;$AppConnection;$Resize\nDialogResize;'Dialog';appCon;Resize.Maximize\n#}}
DIALOG_RESIZE_GENERAL_DESC=The purpose of the action is to change the window size. The window is the element described in self-section in the dictionary.
DIALOG_RESIZE_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application the indicated action belongs to. It is the output value of such actions as {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
DIALOG_RESIZE_DIALOG=The name of the dialog being processed.
DIALOG_RESIZE_RESIZE=Type of resizing. Must be Resize.Maximize, Resize.Minimize or Resize.Normal
DIALOG_RESIZE_HEIGHT=The window height is changed to the specified height.
DIALOG_RESIZE_WIDTH=The window width is changed to the specified width.
DIALOG_SWITCH_TO_WINDOW_GENERAL_DESC=The purpose of this action is to switch focus to another application.\nPlug-in dependent action currently being used only with web plug-in.
DIALOG_SWITCH_TO_WINDOW_EXAMPLE={{`1. Start the web application.`}}{{`2. Connect to the desktop application, the window headed WinApp.`}}{{`3. Switch focus back to the MainFrame of the web application, located in MyDialog.`}}{{#\n#Id;#Action;#Browser;#URL;#AppId\nAPPSTR1;ApplicationStart;'Chrome';'https://google.com';'WEB'\n#Id;#Action;#AppId;#Main window\nAPPSTR2;ApplicationConnectTo;'WIN';'WinApp'\n#Action;#Frame;#Dialog;#AppConnection\nDialogSwitchToWindow;'MainFrame';'MyDialog';APPSTR1.Out#}}
DIALOG_SWITCH_TO_WINDOW_APP_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application the indicated action belongs to. It is the output value of such actions as {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
DIALOG_SWITCH_TO_WINDOW_DIALOG=The name of the dialog containing the frame which needs to be connected to. If is absent tool will switch to the parent frame.
DIALOG_SWITCH_TO_WINDOW_FRAME=Frame name to which the focus will be set.
DIALOG_VALIDATE_GENERAL_DESC=The purpose of this action is to check the accessibility of all the elements of the indicated dialog.
DIALOG_VALIDATE_ADDITIONAL_DESC=The name of the additional parameter should contain the ID of the element. The value should contain the expected number of detected elements.
DIALOG_VALIDATE_EXAMPLE={{`1. Connect to the web application.`}}{{`2. Check the accessibility of all elements described in MyDialog.`}}{{#\n#Id;#Action;#Browser;#URL;#AppId\nAPPSTR1;ApplicationStart;'Chrome';'https://google.com';'WEB'\n#Action;#Dialog;#AppConnection\nDialogValidate;'MyDialog';APPSTR1.Out#}}
DIALOG_VALIDATE_APP_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application the indicated action belongs to. It is the output value of such actions as {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
DIALOG_VALIDATE_DIALOG=The dialog whose elements need to be checked for accessibility.
DIALOG_VALIDATE_DO_NOT_OPEN=When true is set, the operations indicated in 'On open' section of the current dialog are performed.  False by default.
DIALOG_VALIDATE_DO_NOT_CLOSE=When true is set, the operations indicated in 'On close' section of the current dialog are performed.  False by default.
IMAGE_GET_GENERAL_DESC=The purpose of this action is to get the screenshot of the started application. Without setting optional parameters the screenshot of the whole application is made. When setting the Dialog parameter, the screenshot of the first element of 'Self' section is made. When setting the Dialog and Name parameters, the screenshot of the element indicated in Name is made.
IMAGE_GET_OUTPUT_DESC=An image which is grabbed from the screen.
IMAGE_GET_EXAMPLE={{`1. Make the screenshot of the logo element located in MyDialog.`}}{{#\n#Id;#Action;#Description;#Dialog;#Name;#AppConnection\nIMGGET1;ImageGet;'Chrome screenshot';'MyDialog';'logo';App#}}
IMAGE_GET_APP_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application the indicated action belongs to. It is the output value of such actions as {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
IMAGE_GET_DIALOG=The name of the dialog.
IMAGE_GET_NAME=The name of the element.
IMAGE_GET_DESCRIPTION=The description of the image which will be displayed in tooltip.
IMAGE_GET_X1=X coordinate is for left upper corner
IMAGE_GET_Y1=Y coordinate is for left upper corner
IMAGE_GET_X2=X coordinate is for right bottom corner
IMAGE_GET_Y2=Y coordinate is for right bottom corner
IMAGE_REPORT_GENERAL_DESC=The purpose of this action Is to place the generated image in the report.
IMAGE_REPORT_OUTPUT_DESC=Path to image.
IMAGE_REPORT_EXAMPLE={{`1. Start the application.`}}{{`2. Capture the whole application.`}}{{`3. Create new report.`}}{{`4. Send the generated image to the new report.`}}{{#\n#Id;#Action;#Browser;#URL;#AppId\nAPPSTR1;ApplicationStart;'Chrome';'https://google.com';'WEB'\n#Id;#Action;#AppConnection\nIMGGET1;ImageGet;APPSTR1.Out\n#Id;#Action;#ReportName\nREP1;ReportStart;'New Report'\n#Id;#Action;#Image\nIMGRPT1;ImageReport;IMGGET1.Out#}}
IMAGE_REPORT_IMAGE=The image to be placed in the report.
IMAGE_REPORT_TO_REPORT=The Report object which will include the indicated image is specified. Report is an  an output value of the ReportStart action.
IMAGE_REPORT_BEFORE_TESTCASE=Enables to output the table on the highest level of the report.
IMAGE_REPORT_TITLE=The title of the image.
IMAGE_REPORT_AS_LINK=Instead of the image the link to it is generated in the report.
IMAGE_SAVE_GENERAL_DESC=The purpose of this action is to save the image.
IMAGE_SAVE_OUTPUT_DESC=Full path to file
IMAGE_SAVE_EXAMPLE={{`1. Connect to web application`}}{{`2. Get the images of the whole application.`}}{{`3. Save the file to the user's home directory.`}}{{#\n#Id;#Action;#Browser;#URL;#AppId\nAPPSTR1;ApplicationStart;'Chrome';'https://google.com';'WEB'\n#Id;#Action;#AppConnection\nIMGGET1;ImageGet;APPSTR1.Out\n#Id;#Action;#Dir;#Image\nIMGSV1;ImageSave;currentUser/home;IMGGET1.Out#}}
IMAGE_SAVE_IMAGE=The object of the Image type which needs to be saved.
IMAGE_SAVE_DIR=Directory where the file should be saved.  In this case the filename will be generated.
IMAGE_SAVE_FILE=The path to the file where the image will be saved.
DIALOG_GET_PROPERTIES_GENERAL_DESC=The purpose of this action is to get dialog properties: Size and/or Position. Doesn't work for web plugin.
DIALOG_GET_PROPERTIES_OUTPUT_DESC=Associative array which displays the names of the elements processed by the action along with properties received from the dialog.
DIALOG_GET_PROPERTIES_EXAMPLE={{`#Id;#Action;$Size;$Position;$Dialog;$AppConnection`}}{{`APPPAR1;DialogGetProperties;;;'Dialog';connection`}}
DIALOG_GET_PROPERTIES_APP_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application the indicated action belongs to. It is the output value of such actions as {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
DIALOG_GET_PROPERTIES_DIALOG=The name of the dialog.
DIALOG_GET_PROPERTIES_SIZE=The key to get a size property. Value of the parameter may be empty
DIALOG_GET_PROPERTIES_POSITION=The key to get a position property. Value of the parameter may be empty
DIALOG_MOVE_GENERAL_DESC=Action for moving determined dialog to X and Y coordinate. Doesn't work for web plugin.
DIALOG_MOVE_EXAMPLE={{`#Action;$Dialog;$X;$Y;$AppConnection`}}{{`DialogMove;'Dialog';newX;newY;connection`}}
DIALOG_MOVE_CONNECTION=A special object which identifies the started application session.
DIALOG_MOVE_DIALOG=The name of the dialog.
DIALOG_MOVE_X_COORDINATE=New X coordinate for dialog
DIALOG_MOVE_Y_COORDINATE=New Y coordinate for dialog
GUI_HELPER_CHOOSE_DEFAULT_APP=You need to set up default application
#//endregion

#//region actions.matrix
MATRIX_RUN_GENERAL_DESC=The purpose of the action is to run a Matrix from a file. An execution context is created for the run matrix, so as matrices do not cross under the run. The run matrix creates its own status report. The run matrix uses the same output console as the triggering one. Otherwise, messages sent by action {{@Print@}} would be invisible. To pass some value to the run matrix, {{$Parameter$}} should be used. To pass several values at once, they should be bulked, for example, in Map. In the started matrix to access this value use public variable with the predefined name {{$Parameter$}}.
MATRIX_RUN_OUTPUT_DESC=A special object which identifies the started matrix. This object is required for {{@MatrixWait@}} action to wait when the started matrix stops. With the help of this object property one can access information about the number of successfully run and failed test cases of the started matrix.
MATRIX_RUN_EXAMPLE={{#\n#Id;#Action;#Matrix\nMXRN1;MatrixRun;'matrices/Matrix.jf'\n#Assert;#Message\nMXRN1.Out.isRunning();'MatrixRun is failed'#}}
MATRIX_RUN_MATRIX=A file path to the run matrix. A path can be both absolute and relative. A current folder, with respect to which a file location is specified, is a folder where the configuration is.
MATRIX_RUN_AT=Is used to state the time when the matrix is started. If the specified time is not yet, the launched matrix goes the halted state before the start time, otherwise, the matrix starts straightaway.
MATRIX_RUN_PARAMETER=Is used to pass parameters to the started matrix. As a call - by - reference mechanism is used, be careful - the started matrix could modify the object passed. It should be considered and can be used for a feedback mechanism between matrices.
MATRIX_RUN_FROM_TEXT_GENERAL_DESC=The purpose of this action is to run the matrix from the text. An execution context is created for the run matrix, so as matrices do not cross under run. The run matrix creates its own status report.
MATRIX_RUN_FROM_TEXT_OUTPUT_DESC=A special object which identifies the started matrix. This object is required for {{@MatrixWait@}} action to wait when the started matrix stops.With the help of this object property one can access information about the number of successfully run and failed test cases of the started matrix. 
MATRIX_RUN_FROM_TEXT_EXAMPLE={{#\n#Id;#Action;#Text\nMXRN1;MatrixRunFromText;Text\n#Assert;#Message\nMXRN1.Out.isRunning();'MatrixRun is failed'#}}
MATRIX_RUN_FROM_TEXT_TEXT={{$Text$}} object related to the execution matrix.
MATRIX_RUN_FROM_TEXT_AT=Is used to state the time when the matrix is started. If the specified time is not yet, the launched matrix goes the halted state before the start time, otherwise, the matrix starts straightaway.
MATRIX_RUN_FROM_TEXT_PARAMETER=Is used to pass parameters to the started matrix. As a call - by - reference mechanism is used, be careful - the started matrix could modify the object passed.
MATRIX_WAIT_GENERAL_DESC=The purpose of this action is to wait until the executed matrix stops. If the matrix doesn't stop during the specified timeout, an action is failed.
MATRIX_WAIT_EXAMPLE={{#\n#Id;#Action;#Matrix\nMXRN1;MatrixRun;'matrices/Matrix.jf'\n#Id;#Action;#Time;#Matrix\nMXWT1;MatrixWait;5000;MXRN1.Out#}}
MATRIX_WAIT_MATRIX=A special object that connects to the matrix which is run.
MATRIX_WAIT_TIME=Matrix timeout per millisecond.If the matrix doesn't stop during the specified timeout, an action is failed.If the value is 0 - there will be pending before the matrix stops with no time limit.Be careful with such a value, if the started matrix is cycled, the current matrix will hang up in latency.
#//endregion

#//region actions.message
MESSAGE_CHECK_GENERAL_DESC=The purpose of the action is to compare MapMessage with the collection of key-value type.\nMapMessage is the output of such actions as MessageCreate, ClientCreateMapMessage, ClientDecode, ClientGetMessage, ClientSendMessage. \n The report will have a table with 'Mismatched fields' heading, containing columns 'Name' and 'Expected + Actual'.\nIf there is dissimilarity in the compared objects MapMessage action fails.
MESSAGE_CHECK_ADDITIONAL_DESC=The names and values which should be compared in MapMessage passed in ActualMessage are specified in additional parameters.
MESSAGE_CHECK_EXAMPLE=1. Create an object of MapMessage type.\n2. Compare the values in MapMessage with the value passed in Additional parameters. \n{{#\n#Id;#Action;#Fields\nMSGCR1;MessageCreate;{'First item':'First Value', 'Second Item':'Second Value'}\n#Id;#Action;#ActualMessage;#First item\nMSGCHK1;MessageCheck;MSGCR1.Out;'Second Value'#}}
MESSAGE_CHECK_ACTUAL=An object of MapMessage type.
MESSAGE_COMPARE_TWO_GENERAL_DESC=The purpose of the action is to compare two MapMessage.\nMapMessage is the output of such actions as MessageCreate, ClientCreateMapMessage, ClientDecode, ClientGetMessage, ClientSendMessage. \n If there is dissimilarity in the compared objects MapMessage action fails.
MESSAGE_COMPARE_TWO_EXAMPLE=1-2. Create two objects of MapMessage type with different values \n3. Check them with MessageCompareTwo action.\n{{#\n#Id;#Action;#Fields\nMSGCR1;MessageCreate;{'First item':'First Value', 'Second Item':'Second Value'}\n#Id;#Action;#Fields\nMSGCR2;MessageCreate;{'First item':'First Value', 'Fourth Item':'Fourth Value'}\n#Id;#Action;#Expected;#Actual\nMSGCMP1;MessageCompareTwo;MSGCR2.Out;MSGCR1.Out#}}
MESSAGE_COMPARE_TWO_ACTUAL=MapMessage which should be compared.
MESSAGE_COMPARE_TWO_EXPECTED=MapMessage which should be compared with.
MESSAGE_COMPARE_TWO_EXCLUDE=An array of column names which should be excluded from comparison.
MESSAGE_CREATE_GENERAL_DESC=The purpose of the action is to create an object of MapMessage type.\nThe object of MapMessage type is a collection which stores data in the form of key/value pairs.\nIt is used in such actions as ClientCheckFields, ClientCheckMessage, ClientEncode, ClientSendMapMessage, MessageCheck, MessageCompareTwo.
MESSAGE_CREATE_ADDITIONAL_DESC=Names and values are passed to fill MapMessage. This parameter is used only if the parameter Fiels is not set.
MESSAGE_CREATE_OUTPUT_DESC=Message object.
MESSAGE_CREATE_EXAMPLE={{#\n#Id;#Action;#Fields\nMSGCR1;MessageCreate;{'First item':'First Value', 'Second Item':'Second Value'}#}}
MESSAGE_CREATE_MESSAGE_TYPE=The type of created MapMessage should be specified.
MESSAGE_CREATE_SOURCE=The source of created MapMessage should be specified.
MESSAGE_CREATE_FIELDS=The collection of Map type values is specified.
MESSAGE_REPORT_GENERAL_DESC=The purpose of the action is to display the object content {{$MapMessage$}} in the report on the matrix run. The object type {{$MapMessaget$}} is the tree-based representation of message which consists of fields. It is applied when it is necessary to send or receive {{$MapMessage$}}.
MESSAGE_REPORT_EXAMPLE={{#{{`#Id;#Action;Param1;Param2;$MessageType"`}}{{`MSGCR1;MessageCreate;'qwe';'asd';'Type'"`}}{{``}}{{`#Action;$MapMessage;$Title"`}}{{`MessageReport;MSGCR1.Out;'My Message'"`}}#}}
MESSAGE_REPORT_MESSAGE=Object {{$MapMessage$}}, which is required to output.
MESSAGE_REPORT_TITLE=The title of the text.
MESSAGE_REPORT_TO_REPORT=This parameter is used for directing the output from the given object to the external report created by the {{$ReportStart$}} action.
MESSAGE_REPORT_BEFORE_TESTCASE=It accepts id test case before which the text will be displayed in the report.
MESSAGE_CREATE_VALUE_ERROR=For field '%s' value is an array, but not of type Map
#//endregion

#//region actions.report
CHART_REPORT_GENERAL_DESC=The following action is needed to display graphs and diagrams in reports based on data from the tables.
CHART_REPORT_ADDITIONAL_DESC=Depend on the type of the graph/diagram. {{` {{$Labels$}} - it is needed to name a column, which values will be used for creating a diagram.`}} {{` {{$YAxisDescription$}} - it is needed to specify the name that will be assigned to Z-axis.`}} {{` {{$Values$}} - the name of the column, which values will be used for creating Pie type diagram.`}}
CHART_REPORT_EXAMPLE=1. Make a table\n2. Create a report by ReportStart action\n3. Create a graph based on the table. Specify a newly created report in parameter Report.\n4-5. Display a report.\n{{#\n#Id;#TestCase;#Kind;#Depends;#For\nChart;;;;\n    #Id;#RawTable\n    DATA1;Table\n    @;Labels;Mike salary;John Salary\n    0;2001;1;2\n    1;2002;2;3\n    2;2003;3;4\n    3;2004;3;4\n    4;2005;3;5\n    5;2006;4;5\n    #EndRawTable\n    #Id;#Action;#ReportName\n    REP1;ReportStart;'My report'\n    #Action;#ToReport;#Type;#Table;#Title;#Labels\n    ChartReport;REP1.Out;ChartKind.Line;DATA1;'Chart title';'Labels'\n    #Action;#Passed;#Report;#Failed\n    ReportFinish;0;REP1.Out;0\n    #Action;#Report\n    ReportShow;REP1.Out.getReportName()#}}
CHART_REPORT_BEFORE_TEST_CASE=Allows to display a graph at the top of the report.
CHART_REPORT_COLORS=Color map.
CHART_REPORT_TO_REPORT=This parameter is used for directing the output from the given object to the external report created by the {{$ReportStart$}} action.
CHART_REPORT_CHART_TYPE=Type of graph.
CHART_REPORT_TABLE=Table that contains data for a graph.
CHART_REPORT_TITLE=Title.
REPORT_GENERAL_DESC=The following action is needed to output values to the report.
REPORT_ADDITIONAL_DESC=The name and the value that will be shown in the report.
REPORT_EXAMPLE=This example will add the following row 'String for printing: name = value' to the report that was created by action {{@ReportStart@}} \n{{#\n#Id;#Action;#ReportName\nREP1;ReportStart;'My Report'\n#Action;#ToReport;#Str;#name\nReport;REP1.Out;'String for printing:';'value'\nReportFinish;0;REP1.Out;0\n#Action;#Passed;#Report;#Failed\n#Action;#Report\nReportShow;REP1.Out.getReportName()#}}
REPORT_MESSAGE=Output row.
REPORT_BEFORE_TEST_CASE=Allows to output a table at the top of the report.
REPORT_TO_REPORT=This parameter is used for directing the output from the given object to the external report created by the {{@ReportStart@}} action.
REPORT_FINISH_GENERAL_DESC=This action is used as a final step in building a report taken from {{@ReportStart@}} action. It will be impossible to add new elements to Report after after using this action.
REPORT_FINISH_EXAMPLE={{`1. Create an object of Report type.`}}{{`2. Create an object of Table type.`}}{{`3. Move the object Table using {{@TableReport@}} action to the report created in the first step.`}}{{`4. Finish building Report object.`}} {{#\n#Id;#Action;#Version;#ReportName\nREP1;ReportStart;'3.141592';'MyReport'\n#Id;#RawTable\nDATA1;Table\n@;newH\n0;newR\n#EndRawTable\n#Action;#ToReport;#Table;#Title\nTableReport;REP1.Out;DATA1;'Report title'\n#Action;#Passed;#Report;#Failed\nReportFinish;0;REP1.Out;0#}}
REPORT_FINISH_REPORT=Report which should be finished.
REPORT_FINISH_PASSED=A number of passed actions is specified.
REPORT_FINISH_FAILED=A number of failed actions is specified.
REPORT_FINISH_START_TIME=Time when the report starts to be built. If the parameter is not set then the current time is used.
REPORT_FINISH_FINISH_TIME=The time when the report is finished. If the parameter is not set then the current time is used.
REPORT_NAME_GENERAL_DESC=The following action is needed to add text to the name of the created report.
REPORT_NAME_EXAMPLE=If to execute the following example the name of the report file will be given - 'Date and time of running matrix'_'Matrix name'_'PASSED' Chrome.html\n{{#\n#Action;#Name\nReportName;'Chrome'#}}
REPORT_NAME_NAME=Text that will be added to the name of the report.
REPORT_NAME_FAILED_STEPS=Failed steps count that will be added to the report.
REPORT_NAME_PASSED_STEPS=Passed steps count that will be added to the report.
REPORT_SHOW_GENERAL_DESC=This action is used for Report object display which was finished with ReportFinish action. Report will be displayed straight after finishing this action.
REPORT_SHOW_EXAMPLE={{`1. Create an object of Report type.`}}{{`2. Create an object of Table type.`}}{{`3. Move the object Table using TableReport action to the report created in the first step.`}}{{`4. Finish building Report object.`}}{{`5. Display the report.`}} {{#\n#Id;#Action;#Version;#ReportName\nREP1;ReportStart;'3.141592';'MyReport'\n#Id;#RawTable\nDATA1;Table\n@;newH\n0;newR\n#EndRawTable\n#Action;#ToReport;#Table;#Title\nTableReport;REP1.Out;DATA1;'Report title'\n#Action;#Passed;#Report;#Failed\nReportFinish;23;REP1.Out;34\n#Action;#Report\nReportShow;REP1.Out.getReportName()#}}
REPORT_SHOW_REPORT=Object of Report type which should be displayed.
REPORT_START_GENERAL_DESC=This action is used to create an object of Report type. It is possible to set it as ToReport parameter in the following actions: {{@TableReport@}}, {{@TextReport@}}, {{@XmlReport@}} and others to fill the created Report object
REPORT_START_OUTPUT_DESC=Created report.
REPORT_START_EXAMPLE={{#\n#Id;#Action;#Version;#ReportName\nREP1;ReportStart;'3.141592';'MyReport'#}}
REPORT_START_REPORT_NAME=Name of a created report.
REPORT_START_VERSION=Version of the report. It will be displayed in report
#//endregion

#//region actions.services
SERVICE_LOAD_GENERAL_DESC=The following action is needed to load a service, to initialize it and to connect to it.Services are things functioning as a server in a client-server relationship.A server listens to a definite port and allows installing TCP connection from the client side.
SERVICE_LOAD_OUTPUT_DESC=Is a connection with a loaded server. It is used for further interaction with the loaded server.
SERVICE_LOAD_EXAMPLE={{#\n#Id;#Action;#ServiceId\nSRVLD1;ServiceLoad;'TEST'#}}
SERVICE_LOAD_ID=A service ID that was described in Service entries configuration, which will be used for booting a relevant service.If no entry is found in the configuration at such ServiceId, an action finishes with an error.
SERVICE_START_GENERAL_DESC=The following action is needed to run a service that was loaded earlier by {{@ServiceLoad@}}.
SERVICE_START_ADDITIONAL_DESC=Additional parameters depend on the type of the running service.
SERVICE_START_OUTPUT_DESC=True, if service running successful.
SERVICE_START_EXAMPLE={{`1. Load MatrixService`}}{{`2. Load a service woth an additional parameter Port, that was loaded earlier.`}} {{#\n#Id;#Action;#ServiceId\nSRVLD1;ServiceLoad;'MatrixService'\n#Id;#Action;#Port;#ServiceConnection\nSRVSTRT1;ServiceStart;10565;SRVLD1.Out#}}
SERVICE_START_CONNECTION=A connection with a service is specified, that should be run. An output object of {{@ServiceLoad@}} action is indicated.
SERVICE_STOP_GENERAL_DESC=The following action is needed to stop a service that was run by {{@ServiceStart@}}.
SERVICE_STOP_EXAMPLE={{`1. Load MatrixService.`}}{{`2. Run a service with additional parameter Port, that was specified earlier.`}}{{`3. Close a connection.`}} {{#\n#Id;#Action;#ServiceId\nSRVLD1;ServiceLoad;'MatrixService'\n#Id;#Action;#Port;#ServiceConnection\nSRVSTRT1;ServiceStart;10565;SRVLD1.Out\n#Id;#Action;#ServiceConnection\nSRVSTP1;ServiceStop;SRVLD1.Out#}}
SERVICE_STOP_CONNECTION=A connection with a service is specified, that needed to be closed.
SERVICE_HELPER_CONNECTION_IS_NULL=Connection is null.
SERVICE_HELPER_SERVICE_NOT_LOADED=Connection is wrong. Service not loaded
#//endregion

#//region actions.sql
SQL_CONNECT_GENERAL_DESC=The following action is needed to establish a database connection which is used in {{@ SQLexecute @}}, {{@ SQLinsert @}}, {{@ SQLselect @}}, {{@ SQLtableUpload @}}, {{@ SQLdisconnect @}} actions.
SQL_CONNECT_OUTPUT_DESC=Connection to the SQL server.
SQL_CONNECT_EXAMPLE={{` 1. Establish a database connection setting all mandatory parameters. `}}{{` 2. Check that the connection is created and open. `}}{{#\n#Id;#Action;#User;#Server;#Base;#Sql;#Password\nSQLCNT1;SQLconnect;'username';'127.0.0.1:3306';'database';'MySQL';'password'\n#Assert;#Message\n!(SQL.Out.isClosed());'connection is not established'#}}
SQL_CONNECT_SQL=SQL Entry name.
SQL_CONNECT_SERVER=Database ip address. The value of this parameter replaces ${SERVER} in the sqlConnection line in the selected SQL entry parameters.
SQL_CONNECT_BASE=Database name. The value of this parameter replaces ${BASE} in the sqlConnection line in the selected SQL entry parameters.
SQL_CONNECT_USER=Database user name.
SQL_CONNECT_PASSWORD=Database password.
SQL_DISCONNECT_GENERAL_DESC=The following action is needed to close a database connection.
SQL_DISCONNECT_EXAMPLE={{` 1. Establish a database connection setting all mandatory parameters. `}}{{` 2. Close the database connection. `}}{{` 3. Confirm that the database connection is closed. `}}{{#\n#Id;#Action;#User;#Server;#Base;#Sql;#Password\nSQLCNT1;SQLconnect;'username';'127.0.0.1:3306';'database';'MySQL';'password'\n#Id;#Action;#Connection\nSQLDCNT1;SQLdisconnect;SQLCNT1.Out\n#Assert;#Message\nSQLCNT1.Out.isClosed();'connection is not closed'. #}}
SQL_DISCONNECT_CONNECTION=Database connection established by the SQLconnect action.
SQL_EXECUTE_GENERAL_DESC=The following action is needed to execute any SQL database query.
SQL_EXECUTE_ADDITIONAL_DESC=The additional parameter is defined by the data that will be used in completed SQL query instead of placeholders -'?'. The parameter name is not used during the execution and in this case can serve as a comment for the user. For example you can use it as an object description set as a parameter value. \{{*Attention!*}} You should mind the order of additional parameters.
SQL_EXECUTE_OUTPUT_DESC=Returns 'true' if the query was for data selection and 'false' if for data change.
SQL_EXECUTE_EXAMPLE={{` 1. Create a connection to a database. `}}{{` 2. Execute the query to create Users table. `}}{{` 3.-4. Define and initialize Name and Age variables. `}}{{` 5. Execute the query to fill in the Users table using placeholders in additional parameters. `}}{{` 6. Execute the Update query using placeholders. `}}\n{{#\n#Id;#Action;#User;#Server;#Base;#Sql;#Password\nSQLCNT1;SQLconnect;'username';'127.0.0.1:3306';'database';'MySQL';'password'\n#Id;#RawText;#Kind \ncreateTable;Text;None\n~;CREATE TABLE users (id INT(6) PRIMARY KEY, \nname VARCHAR(30) NOT NULL,age int NOT NULL)\n#EndRawText\n#Id;#Action;#Query;#Connection\nSQLEXEC1;SQLexecute;createTable;SQLCNT1.Out\n#Id;#Let\nname;'mike'\n#Id;#Let\nage;23\n#Id;#RawText;#Kind \ninsertQuery;Text;None\n~;insert into users (name, age) values (?, ?)\n#EndRawText\n#Id;#Action;#Query;#Connection;#User name;#User age\nSQLINS1;SQLinsert;insertQuery;SQLCNT1.Out;name;age\n#Id;#RawText;#Kind \nupdateQuery;Text;None\n~;update users set name=? where ? = 23\n#EndRawText\n#Id;#Action;#Query;#Connection;#User new name;#User new age\nSQLEXEC2;SQLexecute;updateQuery;SQLCNT1.Out;'john';age#}}
SQL_EXECUTE_QUERY=The SQL database query.
SQL_EXECUTE_CONNECTION=Database connection established by the {{@ SQLconnect action @}}.
SQL_INSERT_GENERAL_DESC=The following action is needed to execute the Insert SQLquery.
SQL_INSERT_ADDITIONAL_DESC=The additional parameter is defined by the data that will be used in completed SQL query instead of placeholders -'?'. The parameter name is not used during the execution and in this case can serve as a comment for the user. For example you can use it as an object description set as a parameter value. \n{{*Attention!*}} You should mind the order of additional parameters.
SQL_INSERT_OUTPUT_DESC=Returns a list containing primary auto-increment line key generated as a result of executing an SQL query.
SQL_INSERT_EXAMPLE={{` 1. Create a connection to a database. `}}{{` 2. Execute the query to create Users table. `}}{{` 3.-4. Define and initialize Name and Age variables.`}}{{` 5. Execute SQLinsert action using placeholders in additional parameters.`}}{{` 6. Verify that the query returned the key list.`}}\n{{#\n#Id;#Action;#User;#Server;#Base;#Sql;#Password\nSQLCNT1;SQLconnect;'username';'127.0.0.1:3306';'database';'MySQL';'password'\n#Id;#RawText;#Kind \ncreateTable;Text;None\n~;CREATE TABLE users (id INT(6) PRIMARY KEY, \nname VARCHAR(30) NOT NULL,age int NOT NULL)\n#EndRawText\n#Id;#Off;#Action;#Query;#Connection\nSQLEXEC1;1;SQLexecute;createTable;SQLCNT1.Out\n#Id;#Let\nname;'mike'\n#Id;#Let\nage;23\n#Id;#RawText;#Kind\ninsert;Text;None\n~;\\"insert into users (name, age) values (?, ?)\\" \n#EndRawText \n#Id;#Action;#Query;#Connection;#User name;#User age\nSQLINS1;SQLinsert;insert;SQLCNT1.Out;name;age\n#Assert;#Message\nSQLINS1.Out.size() > 0;#}}
SQL_INSERT_QUERY=The SQL database query
SQL_INSERT_CONNECTION=Connection to the database, output value of the SQLconnect action
SQL_SELECT_GENERAL_DESC=The following action is needed to execute the Select SQLquery.
SQL_SELECT_ADDITIONAL_DESC=The additional parameter is defined by the data that will be used in completed SQL query instead of placeholders -'?'. The parameter name is not used during the execution and in this case can serve as a comment for the user. For example you can use it as an object description set as a parameter value. \n{{*Attention!*}} You should mind the order of additional parameters.
SQL_SELECT_OUTPUT_DESC=Select SQL query returns a Table object. The returned Table column names coincide with the Table column names we get as a result of a query.
SQL_SELECT_EXAMPLE={{` 1. Create a connection to a database. `}}{{` 2. Execute the query to create Users table `}}{{` 3.-4. Define and initialize Name and Age variables `}}{{` 5. Execute the query to fill in the Users table using placeholders in additional parameters `}}{{` 6. Execute SQLselect action using placeholders in additional parameters `}}{{` 7. Add the table to the report using the Table Report action `}}\n{{#\n#Id;#Action;#User;#Server;#Base;#Sql;#Password\nSQLCNT1;SQLconnect;'username';'127.0.0.1:3306';'database';'MySQL';'password'\n#Id;#RawText;#Kind \ncreateTable;Text;None\n~;CREATE TABLE users (id INT(6) PRIMARY KEY, \nname VARCHAR(30) NOT NULL,age int NOT NULL)\n#EndRawText\n#Id;#Action;#Query;#Connection\nSQLEXEC1;SQLexecute;createTable;SQLCNT1.Out\n#Id;#Let\nname;'mike'\n#Id;#Let\nage;23\n#Id;#RawText;#Kind \ninsertQuery;Text;None\n~;insert into users (name, age) values (?, ?)#EndRawText\n#Id;#RawText;#Kind \nselectQuery;Text;None\n~;select name, age from test.users where name = ? and age = ?\n#EndRawText\n#Id;#Action;#Query;#Connection;#User name;#User age\nSQLEXEC3;SQLexecute;insertQuery;SQLCNT1.Out;name;age\n#Id;#Action;#Query;#Connection;#User name;#User age\nSQLSLCT1;SQLselect;selectQuery;SQLCNT1.Out;name;age\n#Action;#Table;#Title\nTableReport;SQLSLCT1.Out;'Report title'#}}
SQL_SELECT_QUERY=The SQL database query.
SQL_SELECT_CONNECTION=Connection to the database, output value of the SQLconnect action.
SQL_TABLE_UPLOAD_GENERAL_DESC=The following action is needed to upload the data from the {{$Table$}} object to the database. The data is added using the Union principle (adding to the end of the database)
SQL_TABLE_UPLOAD_EXAMPLE={{` 1. Create a table. `}}{{` 2. Create a connection to a database. `}}{{` 3. Execute a query to create the Users table. `}}{{` 4. Upload data from the Table object to Users table of the current database. `}}\{{#\n#Id;#RawTable\nDATA1;Table\n@;Name;Age\n0;Mike;25\n1;Anna;24\n#EndRawTable\n#Id;#Action;#User;#Server;#Base;#Sql;#Password\nSQLCNT1;SQLconnect;'username';'127.0.0.1:3306';'database';'MySQL';'password'\n#Id;#RawText;#Kind \ncreateTable;Text;None\n~;CREATE TABLE users (id INT(6) PRIMARY KEY, \nname VARCHAR(30) NOT NULL,age int NOT NULL)\n#EndRawText\n#Id;#Action;#Query;#Connection\nSQLEXEC1;SQLexecute;createTable;SQLCNT1.Out\n#Action;#Table;#Connection;#Data\nSQLtableUpload;'users';SQLCNT1.Out;DATA1#}}
SQL_TABLE_UPLOAD_DATA=The Table, from which you take the data to add to the database.
SQL_TABLE_UPLOAD_TABLE=The name of the database table which you need to fill in with data.
SQL_TABLE_UPLOAD_CONNECTION=Connection to the database, output value of the SQLconnect action.
#//endregion

#//region actions.system
CHECK_GENERAL_DESC=The following action is needed to check structured objects that implement interface Map, for example: table rows, MapMessages.
CHECK_OUTPUT_DESC=A logical variable, true if matching values are equal, else - false. If there are differences between matching values table {{$Mismatched$}} fields that contains information about mismatched values, is added to the report.
CHECK_ADDITIONAL_DESC=Helps to pass values and their names that are needed to be compared.
CHECK_EXAMPLE={{`1. Make a table with 2 rows and columns, add values.`}}2. Compare values from the first row of the table with those ones that are specified in additional parameters of action Check. {{#\n#Id;#RawTable\nDATA1;Table\n@;Country;Capital\n0;Russia;Moscow\n1;Germany;Berlin\n#EndRawTable\n#Action;#DoNotFail;#Actual;#Country;#Capital\nCheck;true;DATA1.get(0);'Russia';'Berlin'#}}
CHECK_DONT_FAIL=Если true, то когда будут определены различия в результате сравнения, экшн будет промаркерован как успешно выполненный. В противном случае как проваленный. Про умолчанию false
CHECK_ACTUAL=Задайте имена и значения, которые будут сравниваться.
COMPARE_GENERAL_DESC=The following action is needed to compare two structured objects that implement interface Map, for example: table rows, MapMessages.
COMPARE_OUTPUT_DESC=A table as a resulf of compare.
COMPARE_ADDITIONAL_DESC=Helps to pass values and their names that are needed to be compared.
COMPARE_EXAMPLE={{`1. Make a table with 2 rows and columns, add values.`}}2. Compare values from the first row of the table with those ones that are specified in Expected parameter of action Compare. {{#\n#Id;#RawTable\nDATA1;Table\n@;Country;Capital\n0;Russia;Moscow\n1;Germany;Berlin\n#EndRawTable\n#Action;#DoNotFail;#Actual;#Expected\nCompare;true;DATA1.get(0); { 'Country':'Russia', 'Capital':'Berlin' } #}}
COMPARE_ACTUAL=Актуальные имена и значения для сравнения
COMPARE_EXPECTED=Ожидаемые имена и значения
COMPARE_DONT_FAIL=Если true, то когда будут определены различия в результате сравнения, экшн будет промаркерован как успешно выполненный. В противном случае как проваленный. Про умолчанию false
EXECUTE_GENERAL_DESC=The following action is needed to run external processes via command line of the operating system.\nDepends on the operating system which is used, different commands can be used for the same actions in different systems.\nUsing this action one can unpack an archive or download a file from FTP server.
EXECUTE_OUTPUT_DESC=Result of the standard output of the running process to the console.\nAvailable if stated true in parameter wait.\nOne can get a text using Out.Text, to get ExitCode use Out.ExitCode, get PID use Out.PID.
EXECUTE_EXAMPLE={{`1. Run system command 'help'`}}2. Check if you get an answer in the form of text when executing the current command.\n{{#\n#Id;#Action;#Command\nEXEC1;Execute;'help'\n#Assert;#Message\nStr.IsNullOrEmpty(EXEC1.Out.Text);'Command wasn't executed'#}}
EXECUTE_COMMAND=Команда для выполнения.
EXECUTE_WAIT=Ожидание выполнения команды. Если true - выполнение матрицы будет приостановлено пока команда не будет выполнена. По умолчанию true
EXECUTE_WORK_DIR=A task of the working directory for the current command.
INPUT_GENERAL_DESC=Input a value via interaction with a user
INPUT_OUTPUT_DESC=Result of choosing a value by user, or default value if the timeout expired
INPUT_TITLE=Title of user input
INPUT_DEFAULT_VALUE=Default value if the timeout expired.
INPUT_HELP_KIND=How to help user enter or choose a value.
INPUT_DATA_SOURCE=Collection (a list or a map) to choice value.
INPUT_TIMEOUT=If this timeout expires default value will be used.
PRINT_GENERAL_DESC=The following action is needed to output values to the console of the current matrix.
PRINT_ADDITIONAL_DESC=The name of the output object is indicated in the name of the additional parameter, the output object is indicated in the value of the parameter.
PRINT_EXAMPLE=The following example will output the following row to the console: 'Comment for a string:  Name = Value'\n{{#\n#Action;#Str;#Name\nPrint;'Comment for a string: ';'Value'#}}
PRINT_MESSAGE=Comments to the output row.
RESTORE_GENERAL_DESC=The following action is needed to get the value that was previously saved in global Store (see action {{@Store@}}).\nOne can restore only those objects that are in global Store (View -> Store).\nAll objects from the global Store are saved only during current tool session.
RESTORE_OUTPUT_DESC=A value that will be required. Otherwise, null, if a non-existent value was required.
RESTORE_EXAMPLE=Restore value with name currentTime that was stored by action Store. Assign it to the local variable createDate.\n{{#\n#Action;#AsVar;#Name\nRestore;'createDate';'currentTime'#}}
RESTORE_NAME=The name of the object which value will be restored.
RESTORE_AS_VAR=The name of the variable that will be given the value of the restored object. A variable will be global if an action is tagged 'G', otherwise, variable will be local.
RESULT_TABLE_GENERAL_DESC=This action is needed to get a copy of the system table that contains information about running current matrix. \nThis table is made during running a matrix, each row of the table contains information about one {{@TestCase@}} or {{@Step@}}.\nAmendments made to the table do not influence the system table. To add columns and values there is action {{@ResultTableUserValue@}}.\nIt is needed to use an optional parameter if applying to another matrix.
RESULT_TABLE_OUTPUT_DESC=A copy if the system table that has columns Matrix, TestCaseId, TestCase, StepIdentity, Step, Time, Result, Error, Screenshot.
RESULT_TABLE_EXAMPLE={{#\n#Id;#TestCase;#Kind\nFirst;;\n    #Action;#name\n    Print;'value'\n    #Action;#Time\n    Wait;1000\n#Id;#TestCase;#Kind\nSecond;;\n    #Action;#Text;#Notifier\n    Show;'Some text for print';Notifier.Info\n    #Fail\n    'Fail'\n#Id;#TestCase;#Kind\nThird;;\n    #Id;#Action;#Decoraded\n    RESTBL1;ResultTable;true\n    #Action;#BeforeTestCase;#Table;#Title\n    TableReport;'First';RESTBL1.Out;'Result table'#}}
RESULT_TABLE_DECORATED=If you set true, a table has a human-readable kind. When indicating false, values that are in the table will be objects  which can be used later.
RESULT_TABLE_MATRIX=Object MatrixRunner is indicated (that is an output value of actions {{@MatrixRun@}} and {{@MatrixRunFromText@}}). This action will be used in the summary table.
RESULT_TABLE_USER_VALUE_GENERAL_DESC=The following action is needed to add extra columns and values to the system table that can be acquired by action {{@ResultTable@}}.\nChanges values for the current row (current test case or step).
RESULT_TABLE_USER_VALUE_ADDITIONAL_DESC=Names of additional columns are specified in the value of the additional parameter, in the value of the parameter - values are indicated, that will be added to the row that corresponds to that test case or step, where the following action is. {{`If names match, additional columns do not replace columns of the system table: Matrix, TestCaseId, TestCase, StepIdentity, Step, Time, Result, Error, Screenshot.`}}
RESULT_TABLE_USER_VALUE_EXAMPLE={{#\n#Id;#TestCase;#Kind;#Depends;#For\nRTUSERVAL;ResultTableUserValue;Never;;\n    #Action;UserValue\n    ResultTableUserValue;'value'\n    #Step;#Kind;#For;#Depends\n    ;;;\n    #EndStep\n    #Id;#Action;$Decoraded\n    RESTBL1;ResultTable;false\n    #Assert;#Message\n    RESTBL1.Out[RESTBL1.Out.size - 1].Result == Result.Passed;'Assert'\n    #Id;#Let\n    firstTableSize;RESTBL1.Out.size\n    #Assert;#Message\n    RESTBL1.Out[RESTBL1.Out.size - 2].UserValue == 'value';'Wrong value'\n    #Assert;#Message\n    RESTBL1.Out[RESTBL1.Out.size - 1].UserValue == null;'Wrong value'\n    #Action;OtherValue\n    ResultTableUserValue;100\n    #Step;#Kind;#For;#Depends\n    ;;;\n        #Action;UserValue;OtherValue\n        ResultTableUserValue;'value1';200\n    #EndStep#}}
RESULT_TABLE_USER_VALUE_MATRIX=Object MatrixRunner is indicated (that is an output value of actions {{@MatrixRun@}} and {{@MatrixRunFromText@}}). This action will be used in the summary table.
SHOW_GENERAL_DESC=The following action is needed to output values in the pop-up notification that appears above all windows.
SHOW_EXAMPLE=Output the following row \\"Current time is: currentTime\\" in the pop-up window, with notification type Info.\n{{#\n#Action;#Text;#Notifier\nShow;'Current time is: ' + DateTime.currentTime();Notifier.Info#}}
SHOW_NOTIFIER=Set a type of notification: Info - blue color, Success - green, Error - red.
SHOW_TEXT=Output row.
STORE_GENERAL_DESC=The following action is needed to store values of the object from any matrix in global {{$Store$}}.\nLater, this object is available by action {{@Restore@}}.\nAlso if the value is {{$null$}} the stored value will be removed from {{$Store$}}.All objects from global {{$Store$}} are stored only during the current tool session.
STORE_EXAMPLE=Save object DateTime that contains current date and time when doing this action.\n{{#\n#Action;#Value;#Name\nStore;DateTime.current();'currentTime#}}
STORE_NAME=The name of the saved object.
STORE_VALUE=The object that needs to be stored.
WAIT_GENERAL_DESC=The following action is needed to stop running a matrix for a while. To execute this action correctly, it is needed to specify at least one optional parameter.
WAIT_EXAMPLE=Stop running a matrix for 5 seconds.\n{{#\n#Action;#Time\nWait;5000#}}
WAIT_TIMEOUT=Time in milliseconds, during this time running of a matrix will be stopped.
WAIT_BY_TIME=Time before which running a matrix will be stopped. It is ignored when parameter 'Time' is specified.
#//endregion

#//region actions.text
TEXT_ADD_LINE_GENERAL_DESC=The purpose of the action is to add a line to the object type {{$Text$}}. Object type {{$Text$}} is a text-based pattern which consists of lines. The action can work for object creation {{$Text$}} line-by-line from different sources.
TEXT_ADD_LINE_EXAMPLE={{#\n#Id;#Action;#Content\nTXT1;TextCreate;'Text'\n#Action;#Line;#Text\nTextAddLine;'New line';TXT1.Out#}}\n
TEXT_ADD_LINE_TEXT=Object {{$Text$}}.
TEXT_ADD_LINE_LINE=The line that should be added.
TEXT_CREATE_GENERAL_DESC=The purpose of the action is to create the object type {{$Text$}}. The object type {{$Text$}} is the text-based pattern which consists of lines. Object type {{$Text$}} is used as the input object in many text actions. Also the object type {{$Text$}} can be converted into the line object which can contain many lines {{$Text.Out.toString()$}} divided by the line break symbol (\n) and transferred to any action which accepts the line as the parameter or parameters, for example in action {{@SQLExecute@}}.
TEXT_CREATE_OUTPUT_DESC=The object type {{$Text$}} is the text-based pattern which consists of lines.
TEXT_CREATE_EXMAPLE={{#\n#Id;#Action;#Content\nTXT1;TextCreate;'Text'\n#Assert;#Message\nTXT1.Out.toString() == 'Text';#}}\n
TEXT_CREATE_CONTENT=The text which is required to type.
TEXT_LOAD_FROM_FILE_GENERAL_DESC=The purpose of the action is to create the object type {{$Text$}} from the file. The object type {{$Text$}} is the text-based pattern which consists of lines. Any file which contains plain-text can be used as a source file.
TEXT_LOAD_FROM_FILE_OUTPUT_DESC=The object type {{$Text$}} is the text-based pattern which consists of lines.
TEXT_LOAD_FROM_FILE_EXAMPLE={{#\n#Id;#Action;#File\nTXT1;TextLoadFromFile;'path/text.txt'\n#Assert;#Message\nTXT1.Out != null;#}}\n
TEXT_LOAD_FROM_FILE_FILE=A text file, the text of which is required to type
TEXT_PERFORM_GENERAL_DESC=The purpose of the action is to implement macro substitution in object {{$Text$}}. The object type {{$Text$}} is the text-based pattern, which consists of lines, which can contain macro substitution. Macro substitution is found directly in the test and it represents the formula which is enclosed to special tag "@{}". The result of the action work is the object {{$Text$}}, in which the results of the macro execution are presented in the form of the literal text. For example: "Hi! My name is @{personName}" or "My taxes in 2016 is @{amount * 0.13}"  will be converted into the text "Hi! My name is John " and "My taxes in 2016 is 13" correspondingly, on condition that  the variable personName contains "John", and the variable amount contains 100. It is recommended to use the following action for a generation of the object {{$Text$}} during the matrix implementation and its upcoming transfer to action {{@MatrixRunFromText@}} for a dynamic matrix execution or a text assembly of the complex structure such as Expected value for the subsequent comparison with Actual value. It is possible to find detailed information about macro options and macro executable expressions on the website (access address).
TEXT_PERFORM_OUTPUT_DESC=The object type {{$Text$}} is the text-based pattern which consists of lines. 
TEXT_PERFORM_EXAMPLE={{#\n#Id;#Action;#Content\nTXT1;TextCreate;'My taxes in 2016 is @{amount * 0.13} rub'\n#Id;#Let\namount;100\n#Id;#Action;#Text\nTXT2;TextPerform;TXT1.Out\n#Assert;#Message\nTXT2.Out.toString() == 'My taxes in 2016 is 13 rub';'Assert failed'#}}\n
TEXT_PERFORM_TEXT=Object {{$Text$}}, with which the operation is required to perform.
TEXT_REPORT_GENERAL_DESC=The purpose of the action is to display the object content {{$Text$}} in the report on the matrix run. The object type {{$Text$}} is the text-based pattern which consists of lines. It is applied when it is necessary to examine the content of the object {{$Text$}}.
TEXT_REPORT_EXAMPLE={{#\n#Id;#Action;#Content\nTXT1;TextCreate;'Text'\n#Action;#Title;#Text\nTextReport;'My text';TXT1.Out#}}\n
TEXT_REPORT_TEXT=Object {{$Text$}}, which is required to output.
TEXT_REPORT_TITLE=The title of the text.
TEXT_REPORT_BEFORE_TESTCASE=It accepts id test case before which the text will be displayed in the report.
TEXT_REPORT_TO_REPORT=This parameter is used for directing the output from the given object to the external report created by the {{$ReportStart$}} action.
TEXT_SAVE_TO_FILE_GENERAL_DESC=The purpose of the action is to save object {{$Text$}} to a file. The object type {{$Text$}} is the text-based pattern which consists of lines.
TEXT_SAVE_TO_FILE_OUTPUT_DESC=True if saving is successful.
TEXT_SAVE_TO_FILE_EXAMPLE={{#\n#Id;#Action;#Content\nTXT1;TextCreate;'Text'\n#Id;#Action;#Text;#File\nTXT2;TextSaveToFile;TXT1.Out;'path/file.txt'\n#Assert;#Message\nTXT2.Out;#}}\n
TEXT_SAVE_TO_FILE_TEXT=Object {{$Text$}},which is required to output.
TEXT_SAVE_TO_FILE_FILE=A path where to save a file and the file name with an extension.
TEXT_SET_VALUE_GENERAL_DESC=The purpose of the action is to change the definite line in the object {{$Text$}}. The object type {{$Text$}} is the text-based pattern which consists of lines. It can be used when it is required to make changes in the object, which has a sufficiently large volume or when there is no access to the source from which it was obtained.
TEXT_SET_VALUE_EXAMPLE={{#\n#Id;#Action;#Content\nTXT1;TextCreate;'Text'\n#Action;#Line;#Text;#Index\nTextSetValue;'string successfully set';TXT1.Out;2#}}
TEXT_SET_VALUE_TEXT=Object {{$Text$}}, in which it is necessary to change the line.
TEXT_SET_VALUE_LINE=Input line.
TEXT_SET_VALUE_INDEX=Line index, which is required to change. 
#//endregion

#//region actions.xml
XML_ADD_NODE_GENERAL_DESC=The purpose of the action is to add a new element at the end of the parental element Xml structure. It can be applied when necessary changes have to be done to the current object.If a NewXml parameter is indicated then the parameters {{$NodeName$}} and {{$Content$}} are ignored.
XML_ADD_NODE_ADDITIONAL_DESC=With the help of additional parameters one can transfer attributes for the new node. The name of the parameter contains the name of an attribute, in the value of a parameter the value of an attribute is specified. It is used when the insertion of the node is accompanied by the usage of NodeName and Content parameters.
XML_ADD_NODE_EXAMPLE={{`Example #1:`}}{{`1. Create an Xml structure by loading a file.`}}{{`Contents of an xml file: `}}{{#\n<note> \n<to>\n<friend>\n<name id=\\"first\\">Tove</name>\n</friend>\n</to>\n<from>\n<friend>\n<name id=\\"second\\">Jani</name>\n</friend>\n</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>#}}\n{{`2. Add node to it by giving it the name and attribute 'id' and the meaning 'gift'`}}{{`3. Make sure that node has been added and contains the transferred attribute.`}}{{#\n#Id;#Action;#File\nXML1;XmlLoadFromFile;'Xml.xml'\n#Action;#NodeName;#Xml;#id\nXmlAddNode;'ps';XML1.Out;'gift'\n#Assert;#Message\nXML1.Out.getChild('ps').getAttribute('id') == 'gift';'No such attribute'#}}\n{{`Example #2:`}}\n{{`1. Create object Xml similar to the object from the first example.`}}{{`2. Create second Xml object of the following content:`}} {{#\n<ps id=\\"gift\\">\n<body>P.S. I have a gift for you...</body>\n</ps>#}} {{`3. Add to it Xml structure applying parameter NewXml.`}}{{`4. Make sure that the structure has been added and contains the transferred attribute.`}}\n{{#\n#Id;#Action;#File\nXML1;XmlLoadFromFile;'Xml.xml'\n#Id;#Action;#File\nXML2;XmlLoadFromFile;'Xml2.xml'\n#Action;#NewXML;#NodeName;#Xml\nXmlAddNode;XML2.Out;;XML1.Out\n#Assert;#Message\nXML1.Out.getChild('ps').getAttribute('id') == 'gift';'No such attribute'#}}
XML_ADD_NODE_XML=An Xml structure to which an action has to be done.
XML_ADD_NODE_NODE_NAME=The name of an added element.
XML_ADD_NODE_CONTENT_NAME=The contents of a new element.
XML_ADD_NODE_NEW_XML=Node that has to be added to the original structure. If it is indicated then parameters NodeName and Content are ignored.
XML_CHILDREN_GENERAL_DESC=The purpose of the action is to get the list of all the elements inside the transferred Xml. Later this list can be used for iteration and search of elements using their index.
XML_CHILDREN_OUTPUT_DESC=Returns the list (type List object) of all the affiliated nodes of a transferred element. Later this list can be used for iteration and search of elements using their index.
XML_CHILDREN_EXAMPLE=1. Create an Xml object by downloading it from the file.\n {{`Contents of an xml file:`}} {{#\n<note> \n<to>\n<friend>\n<name id=\\"first\\">Tove</name>\n</friend>\n</to>\n<from>\n<friend>\n<name id=\\"second\\">Jani</name>\n</friend>\n</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>#}} {{`2. Get a list of all affiliated elements.`}}{{`3. Make sure the list has been created and its size is more than 0.`}}\n{{#\n#Id;#Action;#File\nXML1;XmlLoadFromFile;'Xml.xml'\n#Id;#Action;#Xml\nXML2;XmlChildren;XML1.Out#}}
XML_CHILDREN_XML=An Xml structure to which an action needs to be applied. From the root of this structure a list of elements will be drawn.
XML_COMPARE_GENERAL_DESC=The purpose of the action is to compare two Xml structures.
XML_COMPARE_OUTPUT_DESC=True, if Xml structures are equal.
XML_COMPARE_EXAMPLE={{`1. Create an Xml structure from a file.`}}{{`2. Create two new Xml structures by choosing them using XPath from the uploaded Xml structure.`}}{{`3. Compare two Xml structures.`}}{{`4. Check the results of the comparison.`}}\n{{#\n#Id;#Action;#File\nXML1;XmlLoadFromFile;'pathToTheFile'\n#Id;#Action;#Xpath;#NodeName;#Xml\nXML2;XmlSelect;'//friend';'newParent';XML1.Out\n#Id;#Action;#Expected;#Actual\nXMLCMP1;XmlCompare;XML2.Out.getChildren().get(0);XML2.Out.getChildren().get(1)\n#Assert;#Message\nXMLCMP1.Out;'Xmls does not equals'#}}
XML_COMPARE_ACTUAL=An Xml structure is the one that has to undergo comparison.
XML_COMPARE_EXPECTED=An Xml structure is the one that comparison has to be done to.
XML_COMPARE_IGNORE_NODE_ORDER=Ignore node order.
XML_CREATE_GENERAL_DESC=Create new xml.
XML_CREATE_EXAMPLE={{#\n#Id;#Action\nxml;XmlCreate#}}
XML_FIND_FIRST_GENERAL_DESC=The purpose of the action is to return (restore) the Xml structure, allocated using Xpath parameter from Xml document.The first appropriate to the condition element and all its parts will be returned.It is used when it is necessary to get a link to the part of a structure from the existing Xml document. The change of an output value of the action will lead to the change in Xml structure from which it was obtained.
XML_FIND_FIRST_OUTPUT_DESC=Link to Xml structure that contains the search result.
XML_FIND_FIRST_EXAMPLE={{`1. Create an object by downloading it from the file.`}}{{`Contents of an xml file:`}} {{#\n<note> \n<to>\n<friend>\n<name id=\\"first\\">Tove</name>\n</friend>\n</to>\n<from>\n<friend>\n<name id=\\"second\\">Jani</name>\n</friend>\n</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>#}}\n{{`2. Find the first element name.`}}{{`3. Check the output.`}} {{#\n#Id;#Action;#File\nXML2;XmlLoadFromFile;'/path/Xml.xml'\n#Id;#Action;#Xpath;#Xml\nXML2;XmlFindFirst;'//name';XML1.Out\n#Assert;#Message\nXML2.Out.getChild().getAttribute() == 'first';'No such attribute'#}}
XML_FIND_FIRST_XML=An Xml structure in which the element needs to be detected.
XML_FIND_FIRST_X_PATH=The Xpath, the path to the element.
XML_FROM_TEXT_GENERAL_DESC=The purpose of this action is to parse the XML structure from a text.
XML_FROM_TEXT_OUTPUT_DESC=XML structure.
XML_FROM_TEXT_EXAMPLE={{`1. Create Xml object by parsing the text.`}} {{`Contents of an text object:`}} {{#\n<note> \n<to>\n<friend>\n<name id=\\"first\\">Tove</name>\n</friend>\n</to>\n<from>\n<friend>\n<name id=\\"second\\">Jani</name>\n</friend>\n</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>#}}\n{{`2. Make sure that the object has been created and contains nodes.`}} {{#\n#Id;#Action;#Text\nXML1;XmlFromText;TEXT1\n#Assert;#Message\nXML1.Result.toString() == 'Passed';'No such attribute'#}}
XML_FROM_TEXT_TEXT={{$Text$}} object related to the xml.
XML_LOAD_FROM_FILE_GENERAL_DESC=The purpose of this action is to download the XML structure from a file.
XML_LOAD_FROM_FILE_OUTPUT_DESC=XML structure.
XML_LOAD_FROM_FILE_EXAMPLE={{`1. Create Xml object by downloading it from the file.`}} {{`Contents of an xml file:`}} {{#\n<note> \n<to>\n<friend>\n<name id=\\"first\\">Tove</name>\n</friend>\n</to>\n<from>\n<friend>\n<name id=\\"second\\">Jani</name>\n</friend>\n</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>#}}\n{{`2. Make sure that the object has been created and contains nodes.`}} {{#\n#Id;#Action;#File\nXML1;XmlLoadFromFile;'PathToTheFile'\n#Assert;#Message\nXML1.Result.toString() == 'Passed';'No such attribute'#}}
XML_LOAD_FROM_FILE_FILE=The path to the file.
XML_REMOVE_GENERAL_DESC=The purpose of this action is to delete all the elements appropriate for the given XPath.
XML_REMOVE_EXAMPLE={{`1. Create an Xml object by downloading it from the file.`}}{{`Contents of an xml file:`}} {{#\n<note> \n<to>\n<friend>\n<name id=\\"first\\">Tove</name>\n</friend>\n</to>\n<from>\n<friend>\n<name id=\\"second\\">Jani</name>\n</friend>\n</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>#}}\n{{`2. Delete the element in transferring XPath.`}}{{`3. Make sure that the element has been deleted and its content is not in the report.`}} {{#\n#Id;#Action;#File\nXML1;XmlLoadFromFile;'/path/Xml.xml'\n#Action;#Xpath;#Xml\nXmlRemove;'//from';XML1.Out\n#Action;#Xml;#Title\nXmlReport;XML1.Out;'Report Title'#}}
XML_REMOVE_XML=An Xml structure that needs to be changed (altered)
XML_REMOVE_XPATH=Formula for the search of an element.
XML_REPORT_GENERAL_DESC=The purpose of this action is to map the content of the Xml object in the report of a matrix run. It is used when there is a need to go through the content of the Xml object.
XML_REPORT_EXAMPLE={{`1. Create an Xml object by downloading it from the file.`}}{{`Contents of an xml file:`}} {{#\n<note> \n<to>\n<friend>\n<name id=\\"first\\">Tove</name>\n</friend>\n</to>\n<from>\n<friend>\n<name id=\\"second\\">Jani</name>\n</friend>\n</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>#}}\n{{`2. Reflect the content of the Xml object in the report.`}} {{#\n#Id;#Action;#File\nXML1;XmlLoadFromFile;'/path/Xml.xml'\n#Action;#Xml;#Title\nXmlReport;Xml1;'Xml report'#}}
XML_REPORT_XML=The Xml structure that needs to be kept (preserved).
XML_REPORT_TITLE=The heading of the output Xml structure.
XML_REPORT_TO_REPORT=This parameter is used for directing the output from the given object to the external report created by the {{$ReportStart$}} action.
XML_REPORT_BEFORE_TESTCASE=Enables to output the table on the highest level of the report.
XML_SAVE_TO_FILE_GENERAL_DESC=The purpose of this action is to keep (store) of the transferred Xml structure in the assigned file.
XML_SAVE_TO_FILE_OUTPUT_DESC=True, if saved successfully.
XML_SAVE_TO_FILE_EXAMPLE={{`1. Save the Xml object into the file filename.xml`}}{{`2. Make sure that the check went well.`}} {{#\n#Id;#Action;#Xml;#File\nXSTF;XmlSaveToFile;Xml1;'path/filename.xml'\n#Assert;#Message\nXSTF.Out;'File was not saved'#}}
XML_SAVE_TO_FILE_XML=The Xml structure that needs to be kept (preserved).
XML_SAVE_TO_FILE_FILE_NAME=The path to the file. If the given path already contains a file then it will be replaced.
XML_SELECT_GENERAL_DESC=The purpose of the action is to return (restore) the Xml structure allocated using Xpath parameter from Xml document. The action returns all appropriate to the condition elements (an element) and all their (its) parts. The output value is a separate Xml structure and is not connected to the structure transferred in Xml parameter.
XML_SELECT_OUTPUT_DESC=Xml structure that contains the result of the demand.
XML_SELECT_EXAMPLE={{`Create an Xml object by downloading it from the file.`}}{{`Contents of an xml file:`}} {{#\n<note> \n<to>\n<friend>\n<name id=\\"first\\">Tove</name>\n</friend>\n</to>\n\n<from>\n<friend>\n<name id=\\"second\\">Jani</name>\n</friend>\n</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>#}} \n{{`2. Find the element from.`}}{{`3. Make sure that a new Xml structure has been created.`}} {{#\n#Id;#Action;#File\nXML1;XmlLoadFromFile;'/path/Xml.xml'\n#Id;#Action;#Xml;#Xpath;#NodeName\nXS;XmlSelect;Xml1;'//from';'sub_item'\n#Assert;#Message\nXS.Out != null;'Object is null'#}}
XML_SELECT_FIRST_GENERAL_DESC=The purpose of the action is to return (restore) the Xml structure allocated using Xpath parameter from Xml document. The first appropriate to the condition element and all its parts will be returned. The output value is a separate Xml structure and is not connected to the structure transferred in Xml parameter.
XML_SELECT_FIRST_OUTPUT_DESC=Xml structure containing the result of a demand.
XML_SELECT_FIRST_EXAMPLE={{`1. Create Xml object by downloading it from the file.`}}{{`Contents of an xml file:`}} {{#\n<note> \n<to>\n<friend>\n<name id=\\"first\\">Tove</name>\n</friend>\n</to>\n<from>\n<friend>\n<name id=\\"second\\">Jani</name>\n</friend>\n</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>#}}\n{{`2. Find the first element from.`}} {{`3. Check the outcome`}} {{#\n#Id;#Action;#File\nXML2;XmlLoadFromFile;'/path/Xml.xml'\n#Id;#Action;#Xpath;#Xml\nXML2;XmlFindFirst;'//name';XML1.Out\n#Assert;#Message\nXML2.Out.getChild().getAttribute() == 'first';'No such attribute'#}}
XML_SELECT_XML=An Xml structure in which the element needs to be detected.
XML_SELECT_NODE_NAME=The name of a core element to which the collection of the found elements will be allocated.
XML_SELECT_X_PATH=The Xpath, the path to the element.
XML_SELECT_FIRST_XML=An Xml structure in which an operation needs to be done.
XML_SELECT_FIRST_NODE_NAME=Insert the selection result into assigned tag.
XML_SELECT_FIRST_X_PATH=The Xpath, the path to the element.
XML_SET_NODE_GENERAL_DESC=The purpose of the action is to transfer the content of the core element of the Xml structure.
XML_SET_NODE_ADDITIONAL_DESC=With the help of additional parameters attributes for the the core node can be transferred. Parameter is given the name of an attribute, the value of the parameter has the value of the attribute.
XML_SET_NODE_EXAMPLE={{`1. Create an Xml object by downloading it from the file.`}}{{`2. Transfer to the core element content 'Text for insert'`}}{{`3. Contents of an xml file:`}} {{#\n<note><to>\n<friend>\n<name id=\\"first\\">Tove</name>\n</friend>\n</to>\n<from>\n<friend>\n<name id=\\"second\\">Jani</name>\n</friend>\n</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>#}}\n{{#\n#Id;#Action;#File\nXML1;XmlLoadFromFile;'/path/Xml.xml'\n#Id;#Action;#Text;#Xml\nXSN;XmlSetNode;'Text for insert';Xml#}}
XML_SET_NODE_XML=A type of Xml object to which an action needs to be applied.
XML_SET_NODE_TEXT=Content which has to be transferred to the element.
#//endregion

#//endregion

#region api.wizard
WIZARD_CATEGORY_MATRIX=Matrix wizard
WIZARD_CATEGORY_CONFIGURATION=Configuration wizard
WIZARD_CATEGORY_GUI_DIC=GUI dictionary wizard
WIZARD_CATEGORY_MESSAGE_DIC=Message dictionary wizard
WIZARD_CATEGORY_OTHER=Universal wizard
#endregion

#//region tool

#region tool.main
TOOL_IGNORE=Ignore
TOOL_MENU_FILE=File
TOOL_OPEN_PROJECT=Open project
TOOL_CREATE_PROJECT=Create project
TOOL_PROJECT_FROM_GIT=Project from Git
TOOL_DICTIONARY=Dictionary
TOOL_MENU_LOAD=Load
TOOL_SYSTEM_VARIABLES=System variables
TOOL_MENU_MATRIX=Matrix
TOOL_MATRIX=Matrix
TOOL_PLAIN_TEXT=Plain text
TOOL_CSV=Csv
TOOL_MENU_NEW=New
TOOL_NEW_SYSTEM_VARS=New system vars
TOOL_NEW_MATRIX=New matrix
TOOL_NEW_LIBRARY=New library
TOOL_NEW_DICTIONARY=New dictionary
TOOL_NEW_PLAIN_TEXT=New plain text
TOOL_NEW_CSV=New csv
TOOL_SAVE=Save
TOOL_SAVE_AS=Save as..
TOOL_SAVE_ALL=Save all
TOOL_LAST_OPENED_MATRIX=Last opened matrix
TOOL_RUN_FROM_FILE=Run from file
TOOL_OPEN_REPORT=Open report
TOOL_EXIT=Exit
TOOL_UNDO=Undo
TOOL_REDO=Redo
TOOL_SETTINGS=Settings
TOOL_SEARCH=Search
TOOL_LOGS=Logs
TOOL_STORE=Store
TOOL_SHOW_TABS=Show tabs
TOOL_MENU_EDIT=Edit
TOOL_MENU_VIEW=View
TOOL_MATRIX_START=Matrix start
TOOL_MATRIX_STOP=Matrix stop
TOOL_SHOW_WAITS=Show waits
TOOL_MATRIX_SCHEDULE=Matrix schedule
TOOL_MENU_GIT=Git
TOOL_MENU_PUBLISHING=Publishing
TOOL_CLONE=Clone
TOOL_COMMIT=Commit
TOOL_PUSH=Push
TOOL_PULL=Pull
TOOL_RESET=Reset
TOOL_STATUS=Status
TOOL_RESOLVE_CONFLICT=Resolve conflict
TOOL_BRANCHES=Branches
TOOL_TAGS=Tags
TOOL_CHANGE_CREDENTIAL=Change credential
TOOL_MENU_HELP=Help
TOOL_ACTIONS_HELP=Actions help
TOOL_ABOUT_PROGRAM=About program
TOOL_BUTTON_OPEN_MATRIX=Open matrix
TOOL_BUTTON_NEW_MATRIX=New matrix
TOOL_BUTTON_SAVE_DOCUMENT=Save {0}
TOOL_BUTTON_SAVE_AS_DOCUMENT=Save as.. {0}
TOOL_BUTTON_OPEN_MAIN_LOG=Show log\n
TOOL_BUTTON_SHOW_CALCULATOR=Show calculator\n
TOOL_BUTTON_UNDO=Undo\n{0}
TOOL_BUTTON_REDO=Redo\n{0}
TOOL_PROJECT=Project
TOOL_SAVE_CONFIGURATION=Save configuration
TOOL_RELOAD_CONFIGURATION=Reload configuration
EMPTY_CONFIGURATION_EXCEPTION=Open or create a configuration at first.
PRELOADER_COPYRIGHT=@ 2009-%d Exactpro Systems. All rights reserved.
PRELOADER_LOADING=Loading..

MAIN_INVALID_SETTINGS=Settings are invalid. Using default settings.
MAIN_ERROR_ON_RESTORE_DOCS=Error on restore opened documents
MAIN_NOTHING_TO_SAVE=Nothing to save
MAIN_SAVE_SUCCESS=%s is saved successfully.
MAIN_ALL_FILES_SUCCESS=All files successful saved
MAIN_OPEN_REPORT_TITLE=Choose report
MAIN_OPEN_REPORT_FILTER=HTML files (*.html)
MAIN_ADD_TO_TOOLBAR=Matrices %s already added to toolbar
MAIN_SHOW_INFO_CONFIG=Can't scroll to out of project scope
MAIN_UNKNOWN_TYPE_OF_DOC=Unknown type of document: %s
MAIN_CHOOSE_FILE_TITLE=Choose %s file
MAIN_CHOOSE_FILE_FILTER=%s files (*.%s)
MAIN_LOAD_DOC_NOT_FOUND=File with name %s not found
MAIN_LOAD_DOC_ERROR_CLASS=Error on load %s %s
MAIN_CONTROLLER_ERROR_ON_REFRESH_CONF=Error on refresh configuration
MAIN_CONTROLLER_ERROR_ON_SAVE_CONF=Error on save config
MAIN_CONTROLLER_ERROR_ON_SET_TOOLTIP=Error on set tooltips or images
MAIN_CONTROLLER_ERROR_ON_LOAD_CONF=Error on load configuration
MAIN_CONTROLLER_ERROR_ON_CREATE_NEW_CONF=Error on create new configuration
MAIN_CONTROLLER_ERROR_ON_CLONE_PROJECT=Error on clone project from git
MAIN_CONTROLLER_ERROR_ON_LOAD_DIC=Error on load dictionary
MAIN_CONTROLLER_ERROR_ON_CREATE_DIC=Error on create new dictionary
MAIN_CONTROLLER_ERROR_ON_LOAD_VARS=Error on load system vars
MAIN_CONTROLLER_ERROR_ON_CREATE_VARS=Error on create new system vars
MAIN_CONTROLLER_ERROR_ON_LOAD_MATRIX=Error on load matrix
MAIN_CONTROLLER_ERROR_ON_CREATE_MATRIX=Error on create new matrix
MAIN_CONTROLLER_ERROR_ON_START_MATRIX=Error on start matrix
MAIN_CONTROLLER_ERROR_ON_STOP_MATRIX=Error on stop matrix
MAIN_CONTROLLER_ERROR_ON_RUN_MATRIX=Error on run matrix from file
MAIN_CONTROLLER_ERROR_ON_OPEN_REPORT=Error on open report
MAIN_CONTROLLER_ERROR_ON_TOOLBAR=Error on remove from toolbar
MAIN_CONTROLLER_ERROR_ON_OPEN_MATRIX=Error on open matrix
MAIN_CONTROLLER_ENTER_NAME=Enter a new name
MAIN_CONTROLLER_ERROR_ON_RENAME=Error on rename
MAIN_CONTROLLER_ERROR_ON_LOAD_PLAIN=Error on load plain text
MAIN_CONTROLLER_ERROR_ON_CREATE_PLAIN=Error on create new plain text
MAIN_CONTROLLER_ERROR_ON_LOAD_CSV=Error on load csv file
MAIN_CONTROLLER_ERROR_ON_CREATE_CSV=Error on create new csv file
MAIN_CONTROLLER_ERROR_ON_SAVE_DOC_AS=Error on save document as
MAIN_CONTROLLER_ERROR_ON_SAVE_DOC=Error on save document
MAIN_CONTROLLER_ERROR_ON_SAVE_ALL=Error on save all
MAIN_CONTROLLER_ERROR_ON_UNDO=Error on undo document
MAIN_CONTROLLER_ERROR_ON_REDO=Error on redo document
MAIN_CONTROLLER_ERROR_ON_SHOW_SEARCH=Error on show search
MAIN_CONTROLLER_ERROR_ON_SHOW_STORE=Error on show store
MAIN_CONTROLLER_ERROR_ALL_TABS=Error on show all tabs
MAIN_CONTROLLER_ERROR_ON_CLOSE_APP=Error on close application
MAIN_CONTROLLER_ERROR_ON_SHOW_PANEL=Error on show settings panel
MAIN_CONTROLLER_ERROR_ON_SHOW_ABOUT=Error on show about program
MAIN_CONTROLLER_ERROR_ACTIONS_PANEL=Error on show actions panel
MAIN_CONTROLLER_ERROR_ON_SHOW_CALC=Error on show calculator
MAIN_CONTROLLER_SHOW_CALC_VALUE='Helper'
MAIN_CONTROLLER_ERROR_ON_SHOW_STATUS=Error on show status
MAIN_CONTROLLER_ERROR_ON_MERGE=Error on merge
MAIN_CONTROLLER_ERROR_ON_BRANCHES=Error on show branches
MAIN_CONTROLLER_ERROR_ON_SHOW_TAGS=Error on show tags
MAIN_CONTROLLER_ERROR_ON_STATUS=Error on show status
MAIN_CONTROLLER_ERROR_ON_REPOSITORY=Error on clone repository
MAIN_CONTROLLER_ERROR_ON_COMMIT=Error on commit
MAIN_CONTROLLER_ERROR_ON_PUSH=Error on push
MAIN_CONTROLLER_ERROR_ON_PULL=Error on pull
MAIN_CONTROLLER_ERROR_ON_RESET=Error on reset
MAIN_CONTROLLER_ERROR_ON_SET_SHORTCUTS=Error on set Shortcuts
MAIN_CONTROLLER_CLEAR_LIST=Clear list
MAIN_CONTROLLER_ERROR_ON_CLEAR_LIST=Error on clear list
MAIN_CONTROLLER_ERROR_ON_RAM=Error on update RAM
MAIN_CONTROLLER_CHOOSE_TAB=Choose tab
#endregion

#region tool.wizard
WIZARD_SUCCESS=Wizard '{'{0}'}' success
WIZARD_ERROR_ON_CONFIG_REFRESH=Error on refresh config
WIZARD_ERROR_ON_SHOW_ELEMENT=Error on show element
WIZARD_ERROR_ON_DISPLAY_WINDOW=Error on display window
WIZARD_ERROR_ON_CREATE_DOCUMENT_2=Error on create {0} of kind {1}
WIZARD_ERROR_ON_LOAD_DOC_1=Error on load {0}
WIZARD_ERROR_ON_CREATE_DOC_1=Error on save {0}
WIZARD_ERROR_ON_CREATE_COPY=Error on create copy
WIZARD_WIZARD=Wizard
WIZARDS=Wizards
WIZARD_NO_ONE_ACCESSIBLE=No one wizard is accessible here
WIZARD_CHOOSE_WIZARD=Choose wizard
WIZARD_HELP=Help
WIZARD_ACCEPT=Accept
WIZARD_REFUSE=Refuse
REFACTOR_ADD_ITEM_MESSAGE=Add %s '%s' to '%s'
REFACTOR_REMOVE_ITEM_MESSAGE=Remove %s '%s' from '%s'
REFACTOR_SET_FIELD_MESSAGE=Set field '%s' to '%s' in '%s' : %d
#endregion

#region tool.wizard.all
WIZARD_START_CONNECTION=Start
WIZARD_SCAN=Scan
WIZARD_CHECK_TABLE=Check table
WIZARD_SELECT_CONNECTION_INFO=Please select stored connection and dialog
WIZARD_SELECT_DIALOG=Select dialog: 
WIZARD_SELECT_STORED_CONN=Select stored connection:
WIZARD_CONNECT=Connect
WIZARD_STATUS_FAILED=Failed
WIZARD_STOP_APPLICATION=Stop
WIZARD_ERROR_ON_APPLICATION_STOP=Error on application stop
WIZARD_STATUS_SUCCESS=Success
WIZARD_STATUS_LOADING=Loading...
WIZARD_ERROR_ON_CLOSE_WIZARD=Error on close wizard
WIZARD_TOOLTIP_NAME_OF_VAR=Enter name of var here
WIZARD_LABEL_STATUS=Status: 
WIZARD_LABEL_STORE_AS=Store as: 
WIZARD_SELECT_CONVERTER_FROM_COMBOBOX=Select converter from the above combobox
WIZARD_STATUS_SCANNING=Scanning...
WIZARD_APP_RESIZE_DESCRIPTION=It converting the action ApplicationResize from old to new format (since v 4.5.7) .\nOld action contains 3 fields : Maximize, Minimize and Normal.\nUser can set several parameters and it will throw exception.\nIn new format user can''t do it, because these parameters replaced to one new parameter : Resize\nExample.\nOld action :\n    #Action;$AppConnection;$Maximize\n    ApplicationResize;CALL_7;true\nwill converted to \n    #Action;$AppConnection;$Resize\n    ApplicationResize;Resize.Maximize\n
WIZARD_REMOVE_EMPTY_PARAMETERS=It remove all empty parameters, which should be filled, from all matrix and libraries.\nSince JF v 4.5.10, if a parameter should be filled, but parameter is not filled - will error on executing time.\nAll added parameters should be filled ( if needed) or not presented on a item.\nSee help for a item to understand, which parameters should be filled.
WIZARD_LABEL_DIALOG=Dialog : 
WIZARD_LABEL_SELFID=Self id : 
WIZARD_ERROR_ON_SET_SELF_ID=Error on set self id
WIZARD_LABEL_ON_OPEN=On open
WIZARD_LABEL_ON_CLOSE=On close
WIZARD_SELF_ID_NOT_FOUND=Self control not found
WIZARD_SELF_CONTROL_IS_EMPTY=Self control is empty
WIZARD_APPLICATION_NOT_STARTED=Application is not started.\nStart it before call the wizard.
WIZARD_CANT_FIND_SELF_CONTROL_IN_WINDOW=Can't find self control in current window
WIZARD_DICTIONARY_EXCEPTION=DictionaryWizard exception
WIZARD_ERROR_ON_GENERATE_ON_OPEN=Error on generate onOpen
WIZARD_ERROR_ON_GENERATE_ON_CLOSE=Error on generate onClose
WIZARD_NOTHING_TO_UPDATE_INFO=Nothing to update
WIZARD_UPDATING_ELEMENTS=Updating elements
WIZARD_START_UPDATING_ITEMS=Start updating item {0} of {1}
WIZARD_ERROR_ON_ARRANGE_ONE=Error on arrange one
WIZARD_END_UPDATING=End updating {0} of {1}
WIZARD_ERROR_ON_FIND=Error on find elements
WIZARD_LABEL_CONNECTION=Connection : 
WIZARD_NUMBER=Number
WIZARD_ABOUT=About
WIZARD_LESS=Less
WIZARD_GREAT=Great
WIZARD_BETWEEN=Between
WIZARD_LABEL_SELECT_DISTANCE=Select distance : 
WIZARD_ALL=All
WIZARD_SIGNIFICANT=Significant
WIZARD_USE_DISTANCE=Use distances : 
WIZARD_SELECT_FUNCTIONS=Select functions : 
WIZARD_ALL_OK=All ok
WIZARD_CHECKING=Checking...
WIZARD_SELECT_MORE_ELEMENTS=Select more than zero elements from listView above
WIZARD_CREATING_TABLE=Creating table...
WIZARD_RELATION=Relation {0} -> {1}
WIZARD_CHECK=Check
WIZARD_SAVE=Save
WIZARD_CANT_SAVE_INVALID_DOSPEC=Can''t save, because {0} is invalid doSpec function
WIZARD_CANT_CHECK_INVALID_DOSPEC=Can''t check, because {0} is invalid doSpec function
WIZARD_VARIABLE_WITH_NAME=Variable with name ''{0}'' already exist
WIZARD_NAMESPACES=Namespases
WIZARD_WHERE_TO_MOVE=Where to move: 
WIZARD_INVOKE_FROM_NAMESPACE=The wizard must be invoked on SubCase from Namespace
WIZARD_MATRIX_CONTAINS_REFERENCES_2={0} contains {1} reference(s)
WIZARD_NO_CHANGES_NEEDED=No changes needed.
WIZARD_OLD_VALUE_1=old value : {0}
WIZARD_SELECT_NEW_VALUE=, select new value : 
WIZARD_DICTIONARY_NAME_1=Dictionary : {0}
WIZARD_DICTIONARY_OK=Dictionary is ok
WIZARD_ERROR_ON_TABLE_CREATE=Error while table creating. Please check file name or file extension.
WIZARD_NO_FILE_NAME=No file name specified.
WIZARD_ERROR_IN_FILENAME=Error in filename.
WIZARD_FILE_NOT_CSV_1=The file ''{0}'' is not a CSV.
WIZARD_FILE_READ_ONLY_1=The file ''{0}'' is read-only and can''t be changed.
WIZARD_DELIMITER_INCORRECT=Delimiter is incorrect or empty.
WIZARD_ENTER_XPATH=Enter xpath here
WIZARD_HELPER=Helper
WIZARD_RELATIVE=Relative
WIZARD_USE_TEXT=use text()
LAYOUT_EDIT_WIZARD_SHORT_DESCRIPTION=Short description
LAYOUT_EDIT_WIZARD_DETAILED_DESCRIPTION=Detailed description
LAYOUT_WIZARD_SHORT_DESCRIPTION=This wizard creates RawTable and action DialogCheckLayout
LAYOUT_WIZARD_DETAILED_DESCRIPTION={{`First of all you need to select one of stored connection and dialog.`}}{{`For store connection user may use {{$ConnectionWizard$}} or store the connection inside a matrix.`}}{{`In top left corner will appear image of selected dialog.`}}{{`Then you need to select one or more controls in the list or the image.`}}{{`After it you may check options under image:`}}{{`RadioButton {{$Number$}} - will generate DoSpec function with number. E.g. {{$DoSpec.width(10)$}}.`}}{{`RadioButton {{$About$}} - will generate DoSpec function with function about. Boundary values from 90% to 110%. E.g. {{$DoSpec.width(about(10))$}}.`}}{{`RadioButton {{$Less$}} - will generate DoSpec function with function less. E.g. {{$DoSpec.width(less(11))$}}.`}}{{`RadioButton {{$Great$}} - will generate DoSpec function with function great. E.g. {{$DoSpec.width(great(9))$}}.`}}{{`RadioButton {{$Between$}} - will generate DoSpec function with function great.Boundary values from 0% to 200% E.g. {{$DoSpec.width(between(0, 20))$}}.`}}{{`After you need choose which distance will generating : {{$All$}} or only {{$Significant$}}.`}}{{`Then you may select or deselect group functions : `}}{{`visible : {{*DoSpec.visible*}}`}}{{`count : {{*DoSpec.count*}}`}}{{`dimension : {{*DoSpec.width*}} and {{*DoSpec.height*}}`}}{{`contains : {{*DoSpec.contains*}}`}}{{`near : {{*DoSpec.left*}}, {{*DoSpec.right*}}, {{*DoSpec.top*}} and {{*DoSpec.bottom*}}`}}{{`in-functions : {{*DoSpec.inLeft*}}, {{*DoSpec.inRight*}}, {{*DoSpec.inTop*}} and {{*DoSpec.inBottom*}}`}}{{`on-functions : {{*DoSpec.onLeft*}}, {{*DoSpec.onRight*}}, {{*DoSpec.onTop*}} and {{*DoSpec.onBottom*}}`}}{{`align : {{*DoSpec.lAlign*}}, {{*DoSpec.rAlign*}}, {{*DoSpec.tAlign*}} and {{*DoSpec.bAlign*}}`}}`}}{{`horizontal centered : {{*DoSpec.hCentered*}}`}}{{`vertical centered : {{*DoSpec.vCentered*}}`}}{{`For selected controls will be generated the table with relations between controls.`}}{{`User can see created relation by switching a toggle button at intersection controls.`}}{{`User can edit created relation (add/remove/edit functions) and {{$save$}} it or {{$check$}}.`}}{{`User can check whole table by pushing the {{$Check table$}} button.`}}{{`The check result will appear in the area at the bottom of the wizard.`}}{{`After press 'Accept' button, in the matrix will be added 2 items - {{$RowTable$}} with relations and action {{$DialogCheckLayout$}} with link on the RowTable`}}
AUTOMATE_CONVERT_WIZARD_SHORT_DESCRIPTION=This wizard can help users automatically change something.
AUTOMATE_CONVERT_WIZARD_DETAILED_DESCRIPTION={{`This wizard can help users automatically change matrix, dictionaries and etc, when added new features.`}}{{`User need select one of available converters from the {{$combobox$}}`}}{{`On {{$area$}} below under combobox will show short description about the converter`}}{{`After that, user need click the button {{$Scan$}} and wait, until wizard will find documents`}}{{`And after that, user can accept changes by pushing the button Accept or refused by pushing the button Refused`}}
CODE_EXAMPLE_WIZARD_SHORT_DESCRIPTION=This wizard create example in java code from matrix.
CODE_EXAMPLE_WIZARD_DETAILED_DESCRIPTION=This wizard create example in java code from matrix
CONNECTION_WIZARD_SHORT_DESCRIPTION=Wizard creates a connection and saves it into the Store (View->Store).
CONNECTION_WIZARD_DETAILED_DESCRIPTION={{`You can use saved connection in dictionary and matrices.`}}{{`On the top side of the Wizard are located known button for start, connect and stop an application.`}}{{`Under the buttons is the connection status indicator.`}}{{`Under the indicator you can see the textfield for name of variable for the created connection.`}}
DIALOG_FILL_WIZARD_SHORT_DESCRIPTION=This wizard creates DialogFills.
DIALOG_FILL_WIZARD_DETAILED_DESCRIPTION={{`First of all you need to select one of your stored connection and dialog in it.`}}{{`In top-right corner will appear a list of control from selected dialog.`}}{{`In center will appear image of selected dialog.`}}{{`You can select controls from list and image both.`}}{{`After 'Scan' button was pressed you will see list of controls and their values in bottom-right corner.`}}{{`On press 'Accept' button in matrix will be created DialogFill with selected controls and already filled 'Do' actions.`}}{{`Wizard works only with next kind of control: TextBox, Button, CheckBox, RadioButton, Label, Spinner and elements with 'Many' addition`}}
DICTIONARY_WIZARD_SHORT_DESCRIPTION=The wizard helps to fill dialogs with elements and find them after they were changed.
DICTIONARY_WIZARD_DETAILED_DESCRIPTION=To open the wizard, you need :`}}{{`1. Start application.`}}{{`2. Fill self section with valid self control (self control must be found in your application in usual way)`}}{{` `}}{{`All changes applying only for press button Accept. If you do some changes and clicking button Refuse - nothing happens.`}}{{` `}}{{`After opening the wizard, wizard start to load and displaying image and tree from the application. `}}{{`After successful displaying tree, wizard start to find elements from section Run and display these elements on tree via special icons.`}}{{` `}}{{`Image pane ( top left pane) possibilities :`}}{{`   1. Zoom in/out.`}}{{`   2. Inspect element (like on xpath builder)`}}{{`   3. Show/hide id's of found elements.`}}{{`   4. Show mouse coordinates and pixel color under cursor.`}}{{` `}}{{`Table (top right pane) possibilities`}}{{`   1. Change name of current dialog.`}}{{`   2. Create and recreate element on sections OnClose and OnOpen.`}}{{`          If button OnClose/OnOpen is red/green, this means, that section OnClose/OnOpen is empty/not empty. `}}{{`          When you press OnClose/OnOpen button, this button redraw to green and element on section OnClose/OnOpen wil`}}{{`		   replaced to element with control Wait, ref to self, addition WaitToDisappear/WaitToAppear and default timeout to 5000ms.`}}{{`   3. Table with columns and rows.`}}{{`        Column # - serial number of a element.`}}{{`        Column Id - id of a element. You can change with field after double clicking.`}}{{`        Column Kind - control of a element. You can change this field after double clicking.`}}{{`        Xpath - this column shows you,that element is described via xpath or other fields. `}}{{`        New - this column shows you, that element is new or not.`}}{{`        Count - this column shows you the number of items found.`}}{{`        Options - column with button.`}}{{`            The first button - edit. You can change element on popup window.`}}{{`            The second button - update relation ( see below).`}}{{`            The third button - remove this element from dictionary.`}}{{` `}}{{`Tree pane ( bottom pane) possibilities`}}{{`    1. Magic button - see below.`}}{{`    2. NextMark/PreviousMark - jump on the marks.{{`	  3. Checkboxes with states and count - If the checkbox is selected, rectangles ( for current state) on image will displaying`}}{{`Otherwise rectangles will hiding. Number of these checkboxes shows, how many elements with state are presented.`}}{{`    4. Find panel - like on xpath builder.`}}{{` `}}{{`Available states :`}}{{`    1. Mark`}}{{`    2. Question`}}{{`    3. Add`}}{{`    4. Update`}}{{`    `}}{{`State can be switched by clicking on left column in the same line or pressing key SPACE on the line`}}{{`State Mark means, that element found successful and count of items found - 1.`}}{{`State Question means, that element not found, but we try to find element via some information ( via sophistic algorithm), that was grabbed from last found. This info save to dictionary on tag info.`}}{{`For founding we evaluate some functions with weight. These weight you may set on SettingsPanel -> Wizard tab.`}}{{`State Add means, that on next push Magic button, we found this element, fill fields ( text, uid and etc) or xpath.`}}{{`State Update means, that we just update element.`}}{{` `}}{{`For adding new element, just click on left column in tree pane, state will changed to Add.`}}{{`If component has states Mark or Question, after pressing on this icon, state will changing to update. If you click again, state set to empty and relation for element in table will loose.
GHERKIN_WIZARD_SHORT_DESCRIPTION=This wizard create matrix structure from Gherkin code
GHERKIN_WIZARD_DETAILED_DESCRIPTION={{`On left side editor, in which pasting Gherkin text. The editor has highlighting of Gherkin keywords.`}}{{`When you pasting a text, you may push the button {{$Preview$}} on right side for show preview structure.`}}{{`On a {{$tree$}}, under the button Preview, shows simple structure of matrix.`}}{{`The {{$Future$}} keyword will translated to comment for first TestCase`}}{{`The {{$Scenario$}} keywords will translated to TestCase with description`}}{{`The other steps ({{$Given, And, etc$}}) will translated to Step with description`}}{{``}}{{`{{3Example:3}}`}}{{`For a Gherkin code above will generate next items ( after push the button {{$Accept$}} ):`}}{{#// Some terse yet descriptive text of what is desired\n// In order to realize a named business value\n// As an explicit system actor\n// I want to gain some beneficial outcome which furthers the goal\n#TestCase;#Kind;#Depends;#For\nTestCase (Scenario) Some determinable business situation;;;\n    #Step;#Kind;#For;#Depends\n    'Step [Given ] some precondition';;;\n    #EndStep\n\n    #Step;#Kind;#For;#Depends\n    'Step [And ] some other precondition';;;\n    #EndStep\n\n    #Step;#Kind;#For;#Depends\n    'Step [When ] some action by the actor';;;\n    #EndStep\n\n    #Step;#Kind;#For;#Depends\n    'Step [And ] some other action';;;\n    #EndStep\n\n    #Step;#Kind;#For;#Depends\n    'Step [And ] yet another action';;;\n    #EndStep\n\n    #Step;#Kind;#For;#Depends\n    'Step [Then ] some testable outcome is achieved';;;\n    #EndStep\n\n    #Step;#Kind;#For;#Depends\n    'Step [And ] something else we can check happens too';;;\n    #EndStep\n#}}
GHERKIN_WIZARD_ENTER_CODE=Enter or paste Gherkin code below :
GHERKIN_WIZARD_PREVIEW=Preview
GHERKIN_WIZARD_ERROR_PARSING=Some error with parsing text
NAMESPACE_WIZARD_SHORT_DESCRIPTION=This wizard helps to move SubCases between NameSpaces
NAMESPACE_WIZARD_DETAILED_DESCRIPTION={{`Wizard moves SubCases from one NameSpace to another and brings changes to the all affected matrices`}}{{`Simply choose SubCases that you want to move.`}}{{`Than choose another NameSpace in dropbox and press Scan(important).`}}{{`After you will see the list of changes in section below.`}}{{`Press accept to apply changes.`}}{{`Better make backup of your files before.`}}
NAMESPACE_WIZARD_SCAN=Scan
REFACTOR_WIZARD_SHORT_DESCRIPTION=This wizard helps to manage SubCases.
REFACTOR_WIZARD_DETAILED_DESCRIPTION={{`The wizard needs for move SubCases from one NameSpace to another.`}}{{`On the top of the wizard you can see information about ID of the current SubCase and NameSpace. And text fields for a new ID.`}}{{`Press Scan button to see which files will be affected.`}}{{`The wizard serves for move SubCase from one NameSpace to another and bring changes to the all affected matrices.`}}{{`For rename of a SubCase just type new ID in the text field.`}}{{`For move a SubCase select another NameSpace in the combobox.`}}{{`You can both rename and move SubCase at once.`}}
SUPPORTED_CONTROL_WIZARD_SHORT_DESCRIPTION=This wizard check dictionary on supported control
SUPPORTED_CONTROL_WIZARD_DETAILED_DESCRIPTION=Since {{$build 4.5.2$}} before execute operation, the tool check, that current control is supported for a started plugin.{{`All supported controls for a plugin shows on help for the plugin.`}}{{`The wizard can help check all controls from dictionary very easy.`}}{{`The wizard is simple tree with changed one parameter - new control value. For all not supported control need change control to valid value`}}{{`For example, for web plugin the tool does't support control {{*treeItem*}} and {{*menuItem*}}.`}}{{`In tree root element is name of dictionary. All children of root element it is windows.`}}{{` Children of windows - section. And child of sections it is controls with not supported control`}}{{`After changing controls and press the button {{$Accept$}} the dictionary will saved
TABLE_WIZARD_SHORT_DESCRIPTION=This wizard makes it easier to work with tables.
TABLE_WIZARD_DETAILED_DESCRIPTION={{`This wizard allowed for TableLoadFromFile action.`}}{{`With it, you can change a table directly in the matrix, without using other tools.`}}
XPATH_WIZARD_SHORT_DESCRIPTION=This wizard help to build xpath expression to find an element on screen.
XPATH_WIZARD_DETAILED_DESCRIPTION={{`The wizard has a screenshot of an application in the top and a tree of elements in the bottom.`}}{{`For select an element you can use selector (next to zoom button) for selecting items on the image or use elements tree.`}}{{`On the bottom of the wizard is Helper which helps to make xpath for an element.`}}{{`On the right bottom corner of the Helper is \\"magic\\" button which creates the best xpath for the current control.`}}{{`On press accept button xpath will be bound with current control.`}}{{`On press refuse button xpath nothing will happen.`}}
XPATH_WIZARD_COPY_TO_RELATIVE=Rel
REFACTOR_WIZARD_SCAN=Scan
REFACTOR_WIZARD_AFFECTED_FILES=Affected files: 
REFACTOR_WIZARD_WRONG_PARAMETERS=Wrong parameters.
REFACTOR_WIZARD_SUBCASE=SubCase:
REFACTOR_WIZARD_NAMESPACE=NameSpace:
XPATH_WIZARD_NAME=Xpath wizard
TABLE_WIZARD_NAME=Table wizard
SUPPORTED_CONTROLS_WIZARD_NAME=Supported controls wizard
REFACTOR_WIZARD_NAME=Refactor wizard
REFACTOR_WIZARD_NAMESPACES=Namespases
NAMESPACE_WIZARD_NAME=NameSpace wizard
GHERKIN_WIZARD_NAME=Gherkin wizard
DICTIONARY_WIZARD_NAME=Dictionary wizard
DIALOG_FILL_WIZARD_NAME=DialogFill wizard
AUTOMATE_CONVERT_WIZARD_NAME=Universal automate wizard
CONNECTION_WIZARD_NAME=Connection wizard
CODE_EXAMPLE_WIZARD_NAME=Code example wizard
LAYOUT_WIZARD_NAME=Layout wizard
LAYOUT_EDIT_WIZARD_NAME=Layout edit wizard
#endregion

#//region tool.dictionary.actions
ACTIONS_SEND_KEYS=Send keys
ACTIONS_DO_IT=Do it
ACTIONS_FIND=Find
ACTIONS_CLICK=Click
ACTIONS_GET_VALUE=Get value
ACTIONS_SWITCH_TO_CURRENT=Switch to current
ACTIONS_SWITCH_TO_PARENT=Switch to parent
ACTIONS_BACK=Back
ACTIONS_FORWARD=Forward
ACTIONS_REFRESH=Refresh
ACTIONS_CLOSE_WINDOW=Close window
ACTIONS_NEW_INSTANCE=New Instance
ACTIONS_MOVE=Move
ACTIONS_RESIZE=Resize
ACTIONS_MIN=Min
ACTIONS_MAX=Max
ACTIONS_NORMAL=Normal
ACTIONS_SIZE=Size
ACTIONS_GET=Get
ACTIONS_SET=Set
ACTIONS_START_TOOLTIP=Start the selected application
ACTIONS_CONNECT_TOOLTIP=Connect the selected application
ACTIONS_STOP_TOOLTIP=Stop the selected application
ACTIONS_STORED_CONNECTIONS=Stored connection:
ACTIONS_APP_PLUGIN=Application plugin:
ACTIONS_DO=Do
ACTIONS_SWITCH=Switch
ACTIONS_NAVIGATE=Navigate
ACTIONS_NEW=New
ACTIONS_POS_AND_SIZE=Pos&Size
ACTIONS_PROPS=Props
DIALOGS_POS_SIZE_GET=Dialog
DIALOGS_RESIZE=Resize
DIALOGS_MOVE=Move
DIALOGS_MIN=Min
DIALOGS_MAX=Max
DIALOGS_NORMAL=Normal
DIALOGS_SIZE=Size
DIALOGS_GET=Get
#//endregion

#region tool.search
SEARCH_MATRICES=Matrices
SEARCH_LIBRARIES=Libraries
SEARCH_GUI_DICTIONARIES=Gui dictionaries
SEARCH_CLIENT_DICTIONARIES=Client dictionaries
SEARCH_VARIABLES=System variables
SEARCH_OTHER_FILES=Other files
SEARCH_REPORTS=Reports
SEARCH_CASE_SENSITIVE=Case sensitive
SEARCH_WHOLE_WORD=Whole word
SEARCH_REGEXP=Re_gexp
SEARCH_MULTI_LINE=Multi line
SEARCH_SEARCHING=Searching...
SEARCH_FILE_MASK_AND_SCOPE=File mask and scope
SEARCH_CONTAINING_TEXT=Containing text
SEARCH_RESULTS=Results
SEARCH_SEARCH=Search
SEARCH_MATCHES_2={0} matches in {1} files
#endregion

#region tool.matrix.schedule
SCHEDULE_TITLE=Monitoring matrices
SCHEDULE_MATRIX_NAME=Matrix name
SCHEDULE_START_DATE=Start date
SCHEDULE_STATE=State
SCHEDULE_DONE=Done
SCHEDULE_REPORT=Report
#endregion

#region tool.matrix.watch
WATCHER_ADD_NEW=Add new
WATCHER_ADD_ALL=Add all
WATCHER_FX_CONTR_ERROR_ALL=Error on add all variables
WATCHER_FX_CONTR_ERROR_NEW=Error on add new expression
WATCHER_FX_CONTR_ERROR_CLOSE=Error on close watcher
WATCHER_FX_CONTR_WATCHER=Watcher
WATCHER_FX_CONTR_WATCHER_FOR=Watcher for %s
#endregion

#region tool.git

#region tool.git.branch
GIT_BRANCH_START=Start creating branch
GIT_BRANCH_ERROR_CREATE=Error on create new branch
GIT_BRANCH_CREATED=New branch was created
GIT_BRANCH_DELETE_MESSAGE=Are you sure, that you want to delete the branch?
GIT_BRANCH_DELETE_QUESTION=Delete branch
GIT_BRANCH_CONTR_INIT_TITLE=Branches
GIT_BRANCH_CONTR_ENTER_NAME=Enter branch name
GIT_BRANCH_CONTR_ERROR_RENAME=Error on rename branch
GIT_BRANCH_CONTR_ERROR_CHECKOUT=Error on checkout
GIT_BRANCH_CONTR_ERROR_DELETE=Error on delete branch
GIT_BRANCH_CONTR_ENTER_NEW_NAME=Enter new name
GIT_BRANCH_NEW=New
GIT_BRANCH_RENAME=Rename
GIT_BRANCH_CHECKOUT=Checkout
GIT_BRANCH_MERGE=Merge
GIT_BRANCH_DELETE=Delete
GIT_BRANCH_CLOSE=Close
#endregion

#region tool.git.clone
GIT_CLONE_START=Start cloning
GIT_CLONE_SUCCESS=Successful cloning repo %s
GIT_CLONE_CANCELED_BY_USER=Task canceled by user
GIT_CLONE_ERROR=Error on cloning repository %s
GIT_CLONE_CONTR_CHOOSE_FOLDER=Choose folder to clone project
GIT_CLONE_CONTR_CLONE_ERROR=Error on clone project
GIT_CLONE_CONTR_ERROR_CANCEL=Error on cancel
GIT_CLONE_CONTR_INIT_DIALOG_TITLE=Clone Project
GIT_CLONE_LOCATION=Location to clone :
GIT_CLONE_URI="URI :
GIT_CLONE_PROJECT_NAME=Project Name :
GIT_CLONE_OPEN=Open project
GIT_CLONE_CLOSE=Clone
GIT_CLONE_CANCEL=Cancel
#endregion

#region tool.git.commit
GIT_COMMIT_START=Start commiting
GIT_COMMIT_SUCCESS=Successful commiting
GIT_COMMIT_ERROR_ON_PUSH=Error on push
GIT_COMMIT_CANCELED_BY_USER=Task canceled by user
GIT_COMMIT_ERROR=Error on commiting\n %s
GIT_COMMIT_CONTR_SELECT_FILES=Need select one or more files to commit
GIT_COMMIT_CONTR_ERROR_CLOSE_CANCEL=Error on close/cancel
GIT_COMMIT_MESSAGE=Commit message
GIT_COMMIT_COMMIT=Commit
GIT_COMMIT_COMMIT_PUSH=Commit and push
GIT_COMMIT_CLOSE=Close
#endregion

#region tool.git.merge
MERGE_EDITOR_CONTR_ERROR_ON_CLOSE=Error on close
MERGE_EDITOR_CONTR_ERROR_SAVE_RESULT=Error on save result
MERGE_EDITOR_CONTR_MERGE_FOR_FILE=Merge editor for file \'%s\'
GIT_MERGE_CONTR_ACCEPT_THEIRS=Error on accept theirs
GIT_MERGE_CONTR_ACCEPT_YOURS=Error on accept yours
GIT_MERGE_CONTR_ERROR_ON_MERGE=Error on merge
GIT_MERGE_CONTR_RESOLVE_CONFLICTS=Resolve conflicts
MERGE_EDITOR_ACCEPT_YOURS=Accept yours
MERGE_EDITOR_ACCEPT_THEIRS=Accept theirs
MERGE_EDITOR_SAVE=Save
MERGE_EDITOR_CLOSE=Close
MERGE_EDITOR_YOUR_VERSION=Your version
MERGE_EDITOR_RESULT=Result
MERGE_EDITOR_THEIR_VERSION=Their version
GIT_MERGE_ACCEPT_THEIRS=Accept theirs
GIT_MERGE_ACCEPT_YOURS=Accept yours
GIT_MERGE_MERGE=Merge
GIT_MERGE_CLOSE=Close
#endregion

#region tool.git.pull
GIT_PULL_START=Start pulling
GIT_PULL_SUCCESS=Successful pulling
GIT_PULL_DONE=Pull done. All files up to date
GIT_PULL_ERROR_ON_DISPLAY=Error on display files
GIT_PULL_CANCELED_BY_USER=Task canceled by user
GIT_PULL_ERROR_ON_PULLING=Error on pulling
GIT_PULL_BEAN_NEED_MERGE=%s needMerge : %s
GIT_PULL_CONTR_ERROR_CLOSE_CANCEL=Error on close/cancel
GIT_PULL_CONTR_ERROR_PULLING=Error on pulling
GIT_PULL_CONTR_START_PULLING=Start pulling...
GIT_PULL_CONTR_PULLING=Pulling
GIT_PULL_CONTR_FILE_NAME=File name
GIT_PULL_CONTR_MERGE=Merge
GIT_PULL_CONTR_NEED_MERGE=Need merge
GIT_PULL_CONTR_ACCEPT_THEIRS=Accept Theirs
GIT_PULL_CONTR_ACCEPT_YOURS=Accept Yours
GIT_PULL_CONTR_ERROR_THEIRS=Error on accept theirs
GIT_PULL_CONTR_ERROR_YOURS=Error on accept ours
GIT_PULL_CONTR_ERROR_ON_MERGE=Error on merge
GIT_PULL_CONTR_ALL_OK=All ok
GIT_PULL_CANCEL=Cancel
GIT_PULL_PULL_FROM=Pull from:
GIT_PULL_PULL=Pull
#endregion

#region tool.git.push
GIT_PUSH_START=Start pushing
GIT_PUSH_SUCCESS=Successful pushing
GIT_PUSH_CANCELED_BY_USER=Task canceled by user
GIT_PUSH_ERROR_ON_PUSHING=Error on pushing\n %s
GIT_PUSH_ERROR_ON_DISPLAY=Error on display files
GIT_PUSH_COMMITS=Push commits
GIT_PUSH_ERROR_ON_CLOSE=Error on close
GIT_PUSH_ERROR_ON_PUSH=Error on push
GIT_PUSH_PUSH=Push
GIT_PUSH_CLOSE=Close
#endregion

#region tool.git.reset
GIT_RESET_CONTR_ERROR_ON_SELECT=Error on select
GIT_RESET_CONTR_ERROR_ON_RESET=Error on reset
GIT_RESET_CONTR_INIT_DIALOG_TITLE=Git reset
GIT_RESET_CONTR_COLUMN_ID=CommitId
GIT_RESET_CONTR_USERNAME=Username
GIT_RESET_CONTR_DATE=Date
GIT_RESET_TO=Reset to %s
GIT_RESET_COMMIT_MESSAGE=Commit message:
GIT_RESET_RESET=Reset
GIT_RESET_CANCEL=Cancel
#endregion

#region tool.git.status
GIT_STATUS_CONTR_ERROR_ON_REVERT=Error on revert selected items
GIT_STATUS_CONTR_GIT_STATUS=Git status
GIT_STATUS_CONTR_UP_TO_DATE=%s , Already up-to-date
GIT_STATUS_REVERT_SELECTED=Revert selected
GIT_STATUS_IGNORE_SELECTED=Ignore selected
GIT_STATUS_IGNORE_BY_PATTERN=Ignore by pattern
GIT_STATUS_FILE_PATTERN=File pattern:
GIT_STATUS_SELECT=Select
#endregion

#region tool.git.tag
GIT_TAG_START=Start pushing tags...
GIT_TAG_ERROR_ON_PUSH=Error on push tags
GIT_TAG_ALL_PUSHED=All tags was pushed
GIT_TAG_ERROR_ON_UPDATE_TASK=Error on updateTask
GIT_TAG_CONTR_INIT_TITLE=Tags
GIT_TAG_CONTR_ERROR_ON_DELETE=Error on delete tag
GIT_TAG_CONTR_ENTER_VERSION=Enter the version
GIT_TAG_CONTR_ENTER_MESSAGE=Enter the message
GIT_TAG_CONTR_ERROR_ON_PUSH=Error on push tag
GIT_TAG_NEW_TAG=New tag
GIT_TAG_PUSH_ALL=Push all tags
GIT_TAG_DELETE_TAG=Delete tag
GIT_TAG_CLOSE=Close
#endregion

CREDENTIAL_DIALOG_USERNAME=Username
CREDENTIAL_DIALOG_PASSWORD=Password
CREDENTIAL_DIALOG_CREDENTIAL=Credential
CREDENTIAL_DIALOG_STORE_CREDENTIAL=Store credential
GIT_UTIL_GIT_PUSH_EXCEPTION=You need to pull your local copy, merge and after that push
GIT_UTIL_GIT_PULL_EXCEPTION=\nNeed to commit the files before pulling :  
#endregion

#region tool.helpers
DIALOGS_HELPER_PARAMETERS=Parameters
DIALOGS_HELPER_WARNING=Warning
DIALOGS_HELPER_FILE_CHANGE_HEADER=File %s was changed by another process
DIALOGS_HELPER_FILE_CHANGE_CONTENT=Reload it?
DIALOGS_HELPER_DT_PICKER_TITLE=Select date
DIALOGS_HELPER_DT_PICKER_HEADER=Choose date
DIALOGS_HELPER_SAVE=Save
DIALOGS_HELPER_NOTHING_TO_SHOW=Nothing to show
DIALOGS_HELPER_SAVE_FILE_HEADER=File %s was changed
DIALOGS_HELPER_SAVE_FILE_CONTENT=Do you want to save?
DIALOGS_HELPER_UNSUPPORTED_MODE=Unsupported mode
DIALOGS_HELPER_EXCEPTION_UNKNOWN_TYPE=Unknown type of document:
DIALOGS_HELPER_HELP_FOR=Help for %s
DIALOGS_HELPER_ABOUT_PROGRAM=About program
DIALOGS_HELPER_VERSION_FORMAT=Version: %25s
DIALOGS_HELPER_COPYRIGHT=\n\n\nThis is unpublished, licensed software, confidential and proprietary information which is the\nproperty of Exactpro Systems, LLC or its licensors.\nQuality Assurance & Related Development for Innovative Trading Systems.\n\nCopyright (c) 2009-2017, Exactpro Systems, LLC. All rights reserved.
DIALOGS_HELPER_ERROR_ON=Error on .\n
DIALOGS_HELPER_DESKTOP_NOT_SUPPORTED=Desktop is not supported. Used internal report browser.
DIALOGS_HELPER_REPORT_TITLE=Report
DIALOGS_HELPER_UNKNOWN_MATRIX=Unknown matrix
DIALOGS_HELPER_REPORT_FOR=Report for %s
DIALOGS_HELPER_ERROR_ON_OPEN=Error on open matrix from report
DIALOGS_HELPER_ERROR_ON_SHOW=Error on show report
DIALOGS_HELPER_ACTIONS_HELP=Actions help
DIALOGS_HELPER_SAVE_AS_TITLE=Save %s
DIALOGS_HELPER_SAVE_AS_FILTER=%s files(*.%s)
#endregion

#region tool.custom
FIND_LIST_VIEW_FIND=find
USER_INPUT_DIALOG_CHOOSE_FILE=Choose file to open
USER_INPUT_DIALOG_CHOOSE_DIR=Choose directory
USER_INPUT_DIALOG_TITLE=Title

#region tool.custom.browser
REPORT_BROWSER_ERROR_ON_LOAD=Error on load matrix
#endregion

#region tool.custom.date
DATE_TIME_PICKER_SKIN_HOURS=Hours: 
DATE_TIME_PICKER_SKIN_MINUTES=Minutes:
DATE_TIME_PICKER_SKIN_SECONDS=Seconds:
#endregion

#region tool.custom.elementstable
EDIT_ELEMENT=Edit element
REMOVE_ELEMENT=Remove element
ERROR_ON_EDIT=Error on edit element
REMOVE_ELEMENT_QUESTION=Are you sure to remove this element?
SET_RELATION=Set relation
CHANGE_ELEMENT=Change element
ERROR_ON_SET_PARAMETER=Error on set parameters
ERROR_ON_SET_NEW_COLUMN=Error on set new columns
ELEMENTS_TABLE_ID=Id
ELEMENTS_TABLE_KIND=Kind
ELEMENTS_TABLE_XPATH=Xpath
ELEMENTS_TABLE_NEW=New
ELEMENTS_TABLE_COUNT=Count
ELEMENTS_TABLE_OPTION=Option
ELEMENTS_TABLE_OWNER=Owner
ELEMENTS_TABLE_ADDITIONAL=Additional
ELEMENTS_TABLE_REF=Ref
ELEMENTS_TABLE_TIMEOUT=Timeout
ELEMENTS_TABLE_VISIBILITY=Visibility
ELEMENTS_TABLE_COLUMNS=Columns
ELEMENTS_TABLE_WEAK=Weak
ELEMENTS_TABLE_UID=UID
ELEMENTS_TABLE_CLASS=Class
ELEMENTS_TABLE_NAME=Name
ELEMENTS_TABLE_TITLE=Title
ELEMENTS_TABLE_ACTION=Action
ELEMENTS_TABLE_TEXT=Text
ELEMENTS_TABLE_TOOLTIP=Tooltip
#endregion

#region tool.custom.logs
LOGS_SELECT_FILE=Select log file : 
LOGS_REFRESH=Refresh
LOGS_LOGS=Logs
#endregion

#//region tool.custom.helper
FORMULA_INTERPRETER=Formula interpreter
PARAMETERS_NAME=Parameters name = {0}
ALL_VARIABLES_FOR_CURRENT_MATRIX=All variables for current matrix
HELPER_ERROR_STATIC_METHODS=Error on change visible static methods
HELPER_ERROR_VOID_METHODS=Error on change visible void methods
HELPER_ERROR_ON_SORTING_METHODS=Error on sorting methods
HELPER_ERROR_ON_ALL_VARS=Error on show all vars
HELPER_ERROR_ON_SHOWING=Error on showing
HELPER_ERROR_ON_EVALUATE=Error on evaluate
HELPER_ERROR_ON_FUNCTION_INSERT=Error on function insertion
HELPER_ERROR_ON_CLICK=Error on click
HELPER_ERROR_ON_KEY_PRESSED=Error on key pressed
HELPER_ERROR_COMPILE=Compile error. \n %s
HELPER_ERROR_EVALUATE=Can't evaluate. \n %s
HELPER_ERROR_SET_VARIABLES=Error on set variables
HELPER_FX_VOID=void f()
HELPER_FX_STATIC=static
HELPER_FX_A_Z=A..Z
HELPER_FX_VARS=vars
HELPER_FX_CLASS=Class
#//endregion

#region tool.custom.find
FIND_PANEL_MATCH_CASE=Match case
FIND_PANEL_MATCH_CASE_WHOLE_WORD=Whole word
FIND_PANEL_MATCH_CASE_FOUND_ZERO=Found 0
FIND_PANEL_MATCH_CASE_FIND=Find
FIND_PANEL_MATCH_CASE_FIND_PREVIOUS=Previous
FIND_PANEL_MATCH_CASE_FIND_NEXT=Next
FIND_PANEL_MATCH_CASE_FIND_FOUND_2={0} of {1}
FIND_PANEL_MATCH_CASE_FIND_FOUND_1=Found {0}
#endregion

#region tool.custom.grideditor
SSC_ADD_BEFORE=Add column before
SSC_ADD_AFTER=Add column after
SSC_MOVE_LEFT=Move left this column
SSC_MOVE_RIGTH=Move right this column
SSC_REMOVE=Remove columns
SSC_RENAME=Rename
SSC_SWITCH_OFF=Switch off
SSC_SWITCH_ON=Switch on

SSW_ADD_BEFORE=Add before
SSW_ADD_AFTER=Add after
SSW_MOVE_UP=Move up this row
SSW_MOVE_DOWN=Move down this row
SSW_REMOVE=Remove
SSW_COPY=Copy
SSW_COPY_WITH_HEADER=Copy with header
SSW_PASTE=Paste
SSW_PASTE_WITH_HEADER=Paste with header
SSW_PASTE_ERROR=Can't paste to selected cells, cause selected cell is not one
CANT_REMOVE_ALL_ROWS=Can't remove all rows from table
VERTICAL_HEADER_ADD_BEFORE=Add before row %d
VERTICAL_HEADER_ADD_AFTER=Add after row %d
VERTICAL_HEADER_MOVE_UP=Move up this row
VERTICAL_HEADER_MOVE_DOWN=Move down this row
VERTICAL_HEADER_REMOVE=Remove rows
RECTANGLE_SELECTION_GRID_RANGE=GridRange{top=%d, bottom=%d, left=%d, right=%d}
SPREADSHEET_CELL_BASE_TO_STRING=cell[%d][%d]
#endregion

#region tool.custom.scaledimage
CUSTOM_GRID_ERROR=Before show grid, you need to set group
IMAGE_VIEW_WAITING=Waiting for image...
IMAGE_VIEW_PIXEL_COLOR=Pixel color :
#endregion

#region tool.custom.store
STORE_CONTROLLER_STORE=Store
STORE_CONTROLLER_EDIT_STORE_VARIABLE=Edit store variable
STORE_VARIABLE_NAME=Name
STORE_VARIABLE_TYPE=Type
STORE_VARIABLE_VALUE=Value
STORE_VARIABLE_DEL=Del
#endregion

#region tool.custom.tab
CUSTOM_TAB_ERROR_ON_RELOAD=Error on reload
#endregion

#region tool.custom.table
CUSTOM_TABLE_ADD_NEW=Add new variable
CUSTOM_TABLE_REMOVE_SELECTED=Remove selected
CUSTOM_TABLE_REMOVE_ALL=Remove all
#endregion

#region tool.custom.treetable
DISPLAY_DRIVER_FX_EMPTY_FIELD=Field can't be empty. Initial size was setted
DISPLAY_DRIVER_FX_CANT_OPEN=Couldn't open the matrix %s
MATRIX_CM_BREAKPOINT=Breakpoint
MATRIX_CM_ADD_ITEM=Add item
MATRIX_CM_DELETE=Delete
MATRIX_CM_COPY=Copy
MATRIX_CM_CUT=Cut
MATRIX_CM_PASTE=Paste
MATRIX_CM_GO_TO_LINE=Go to line..
MATRIX_CM_HELP=Help
MATRIX_CM_ADD_PARAM=Add param to end
MATRIX_CM_ERROR_ON_ADD=Error on add before
MATRIX_CM_ERROR_ON_COPY=Error on copy
MATRIX_CM_ERROR_ON_PASTE=Error on paste
MATRIX_CM_ERROR_ON_MATRIX_NUMBER=Matrix item with number '%d' not found
MATRIX_CM_ERROR_ON_SHOW_HELP=Error on show help
MATRIX_CM_ENTER_NUMBER=Enter line number

MATRIX_PCM_REMOVE=Remove
MATRIX_PCM_MOVE_LEFT=Move to left
MATRIX_PCM_MOVE_RIGHT=Move to right
MATRIX_PCM_ADD=Add param after
MATRIX_PCM_ALL=All parameters ...
MATRIX_PCM_FOR=For parameter
MATRIX_PCM_WIZARD_ERROR=No one wizard is accessible here
MATRIX_PCM_CHOOSE_WIZARD=Choose wizard
MATRIX_PCM_ERROR_SHOW_ALL=Error on show all parameters

MATRIX_TREE_VIEW_ERROR_ON_DO=Error on do actions by shortcuts
MATRIX_TREE_VIEW_ERROR_ON_HIDE=Error on hide all
MATRIX_TREE_VIEW_SET_REPORT_ITEM=Set report %s item
MATRIX_TREE_VIEW_SET_ITEM=Set %s item
RAW_MESSAGE_TV_ADD_ALL_REQUIRED=Add all required
RAW_MESSAGE_TV_ADD_FIELDS=Add fields
RAW_MESSAGE_TV_ADD_ITEM=Add item
RAW_MESSAGE_TV_ADD_GROUP=Add group
RAW_MESSAGE_TREE_VIEW_CHOOSE_FOR=Choose for
MESSAGE_BEAN_TO_STRING_WITH_VALUE=Name= '%s', Value= '%s'
MESSAGE_BEAN_TO_STRING=Name= '%s'
#endregion

#region tool.custom.xmltree
XML_TREE_TABLE_CELL_COPY_NODE=Copy node
XML_TREE_VIEW_WAITING=Waiting for document...
#endregion

#endregion

#region tool.documents
CSV_FX_CONTROLLER_ERROR_DELIMITER=Error on set delimiter
ACTIONS_CONTROLLER_TITLE=Actions
ACTIONS_CONTROLLER_ERROR_ON_START=Error on start application
ACTIONS_CONTROLLER_ERROR_ON_CONNECT=Error on connect to application
ACTIONS_CONTROLLER_ERROR_ON_STOP=Error on stop application
ACTIONS_CONTROLLER_ERROR_ON_OPERATE=Error on operate
ACTIONS_CONTROLLER_ERROR_ON_SEND_KEYS=Error on send keys
ACTIONS_CONTROLLER_ERROR_ON_CLICK=Error on click
ACTIONS_CONTROLLER_ERROR_ON_FIND=Error on find
ACTIONS_CONTROLLER_ERROR_ON_GET_VALUE=Error on get value
ACTIONS_CONTROLLER_ERROR_ON_SWITCH=Error on switch to window
ACTIONS_CONTROLLER_ERROR_ON_SWITCH_TO_CURRENT=Error on switch to current
ACTIONS_CONTROLLER_ERROR_ON_REFRESH=Error on refresh
ACTIONS_CONTROLLER_ERROR_ON_REFRESH_TITLES=Error on refresh titles
ACTIONS_CONTROLLER_ERROR_ON_NAVIGATE_BACK=Error on navigate back
ACTIONS_CONTROLLER_ERROR_ON_NAVIGATE_FORWARD=Error on navigate forward
ACTIONS_CONTROLLER_ERROR_ON_CLOSE_WINDOW=Error on close window
ACTIONS_CONTROLLER_ERROR_ON_NEW_INSTANCE=Error on new instance
ACTIONS_CONTROLLER_ERROR_ON_MOVE_TO=Error on move to
ACTIONS_CONTROLLER_ERROR_ON_SET_PROP=Error on set property
ACTIONS_CONTROLLER_ERROR_ON_GET_PROP=Error on get property
ACTIONS_CONTROLLER_ERROR_ON_RESIZE=Error on resize
ACTIONS_CONTROLLER_ERROR_ON_FILL_RESIZE=No one resizing parameter is filled.

ELEMENT_IC_TITLE=Element info
ELEMENT_IC_ERROR_ON_CHANGE_OWNER=Error on change owner
ELEMENT_IC_ERROR_ON_CHANGE_CK=Error on change ControlKind
ELEMENT_IC_ERROR_ON_CHANGE_ADDITION=Error on change addition
ELEMENT_IC_ERROR_ON_CHANGE_REFERENCE=Error on change reference
ELEMENT_IC_ERROR_ON_CHANGE_VISIBILITY=Error on change visibility
ELEMENT_IC_ERROR_ON_CHANGE_HEADER=Error on header
ELEMENT_IC_ERROR_ON_CHANGE_ROWS=Error on change rows
ELEMENT_IC_ERROR_ON_CHANGE_WEAKNESS=Error on change weakness
ELEMENT_IC_ERROR_ELEMENT_EXISTS=Element with id %s already exists.
ELEMENT_IC_ERROR_ON_UPDATE_FIELD=Error on update field '%s'
ELEMENT_IC_ERROR_SUPPORT_CONTROL=Plugin %s doesn't support control %s. Control replacing to Any
NAVIGATION_CONTROLLER_COPY_DIALOG=Error on copy dialog
NAVIGATION_CONTROLLER_COPY_ELEMENT=Error on copy element
NAVIGATION_CONTROLLER_PASTE_DIALOG=Error on paste dialog
NAVIGATION_CONTROLLER_PASTE_ELEMENT=Error on paste element
NAVIGATION_CONTROLLER_NEW_ELEMENT=Error on new element

DICTIONARY_FX_NO_DIALOGS_FOR_PASTE=No available dialogs for paste. Firstly copy some dialog before paste.
DICTIONARY_FX_ERROR_ON_SET_OWNER=Error on set owner
DICTIONARY_FX_REMOVE_HEADER=This element is the owner for other elements
DICTIONARY_FX_REMOVE_BODY=Remove it anyway?
DICTIONARY_FX_SET_FIELD_ERROR=Cannot set field '%s' to value '%s'
DICTIONARY_FX_CHECK_FAIL=Check is failed:
DICTIONARY_FX_CHECK_PASS=Check is passed
DICTIONARY_FX_TITLES_REFRESH=Titles refreshed successfully
DICTIONARY_FX_CANT_CLOSE_WINDOW=Can not close the window
DICTIONARY_FX_SERIALIZABLE_ONLY=You must set only Serializable or null value
DICTIONARY_FX_SELF_CONTROL_ERROR=Can't find self control for current window.
DICTIONARY_FX_START_BEFORE=Start a application before doing any actions
DICTIONARY_FX_WAIT=Please wait until previous command will be complete

SYSTEMS_VARS_FX_CONTR_ERROR=Error on adding new var
FX_DOC_FACTORY_ERROR_INFO=ControllerInfo attribute is not found for %s
CSV_FX_DELIMITER=Delimiter
CSV_FX_CONTR_COMMA=comma
CSV_FX_CONTR_SEMICOLON=semicolon
CSV_FX_CONTR_COLON=colon
CSV_FX_CONTR_DASH=dash
CSV_FX_CONTR_TAB=tab
ELEMENT_INF0_OWNER=Owner:
ELEMENT_INF0_ID=ID:
ELEMENT_INF0_CONTROL=Control:
ELEMENT_INF0_ADDITION=Addition:
ELEMENT_INF0_REF=Ref:
ELEMENT_INF0_TIMEOUT=Timeout:
ELEMENT_INF0_G=G
ELEMENT_INF0_VISIBILITY=Visibility:
ELEMENT_INF0_HEADER=Header:
ELEMENT_INF0_ROWS=Rows:
ELEMENT_INF0_WEAK=Weak:
ELEMENT_INF0_UID=UID:
ELEMENT_INF0_XPATH=Xpath:
ELEMENT_INF0_CLASS=Class:
ELEMENT_INF0_NAME=Name:
ELEMENT_INF0_TITLE=Title:
ELEMENT_INF0_ACTION=Action:
ELEMENT_INF0_TEXT=Text:
ELEMENT_INF0_TOOLTIP=Tooltip:
ELEMENT_INF0_COLUMNS=Columns:
ELEMENT_INF0_EXPRESSION=Expression:
EDIT_VARIABLE_DIALOG_TITLE=Edit variables
EDIT_VARIABLE_DIALOG_NAME=Name
EDIT_VARIABLE_DIALOG_EXPRESSION=Expression
EDIT_VARIABLE_DIALOG_VALUE=Value
EDIT_VARIABLE_DIALOG_DEL=Del
EDIT_VARIABLE_DIALOG_ADD_NEW=Add new variable
EDIT_VARIABLE_DIALOG_PARAM_NAME=name
EDIT_VARIABLE_DIALOG_EXPRESSION_VALUE='expression'
NAVIGATION_CONTR_DIALOG_EXISTS=Dialog with name %s already exists.

NAVIGATION_CREATE=Create new dialog
NAVIGATION_DELETE=Delete selected dialog
NAVIGATION_COPY=Copy current dialog with all elements
NAVIGATION_PASTE=Paste copied dialog
NAVIGATION_SELF=Self
NAVIGATION_ON_OPEN=On open
NAVIGATION_RUN=Run
NAVIGATION_ON_CLOSE=On close
NAVIGATION_CLOSE=Close
NAVIGATION_CREATE_ELEMENT=Create new Element
NAVIGATION_DELETE_ELEMENT=Delete current element
NAVIGATION_COPY_ELEMENT=Copy current element
NAVIGATION_PASTE_ELEMENT=Paste copied element
NAVIGATION_TEST_ALL=Test all controls into the current section
DICTIONARY_FX_NOT_ALLOWED=Not allowed
SYSTEM_VARS_FX_NAME=name
SYSTEM_VARS_FX_EXPRESSION='expression'
SYSTEM_VARS_FX_CONTR_NAME=Name
SYSTEM_VARS_FX_CONTR_EXPRESSION=Expression
SYSTEM_VARS_FX_CONTR_VALUE=Value
SYSTEM_VARS_FX_CONTR_DESCRIPTION=Description
#endregion

#region tool.matrix
PARAM_GRID_PANE_ERROR_CURRENT_ROW=Error on select current row
PARAM_GRID_PANE_ERROR_CHANGE_PARAMS=Error on change parameters
PARAM_PANE_CHOOSE_FILE_TO_OPEN=Choose file to open
PARAM_PANE_CHOOSE_FILE_TO_SAVE=Choose file to save
PARAM_PANE_CHOOSE_DIR=Choose directory
MATRIX_SCHEDULER_CHOOSE_MATRICES=Choose matrices
MATRIX_SCHEDULER_ERROR_START_MATRIX=Error on start matrix
MATRIX_SCHEDULER_ERROR_OPEN_REPORT=Error on report open
MATRIX_SCHEDULER_OPER_MATRIX_ERROR=Couldn't open the matrix %s

SCHEDULE_CONTR_ERROR_START=Error on start matrices
SCHEDULE_CONTR_ERROR_STOP=Error on stop matrices
SCHEDULE_CONTR_ERROR_SHOW=Error on show matrices
SCHEDULE_CONTR_ERROR_LOAD=Error on load matrices
WATCHER_FX_EMPTY_NAME_ERROR=Can't create variable with empty name
WATCHER_FX_NAME_ALREADY_EXISTS=Watcher already contains expression this name '%s'
MATRIX_FX_NEIGHBORS_REMOVE=Only neighbors can be removed
MATRIX_FX_NEIGHBORS_COPY=Only neighbors can be copied
MATRIX_FX_MATRIX_STOPPED=Matrix stopped
MATRIX_FX_START_AT=Matrix will start at

MATRIX_FX_CONTR_MATRIX_STARTED=Matrix '%s' started...
MATRIX_FX_CONTR_MATRIX_FINISHED=Matrix '%s' finished.
MATRIX_FX_CONTR_PAUSED_ON=%d : Paused on 
MATRIX_FX_CONTR_PARAMETER_FOR_START=Parameter for start
MATRIX_FX_CONTR_ERROR_ON_START=Error on starting matrix. See the matrix output for details.
MATRIX_FX_CONTR_ERROR_ON_MARKING=Error on marking all items
MATRIX_FX_CONTR_ERROR_SET_SHORTCUTS=Error on setting shortcuts
MATRIX_FX_CONTR_ERROR_SHOW_WATCHER="Error on showing watcher
MATRIX_FX_CONTR_COLOR_OFF=Color off
MATRIX_FX_CONTR_COLOR_ON=Color on
MATRIX_FX_ON_OFF=On/Off
MATRIX_FX_SWITCH_OFF_ALL=Switch off all
MATRIX_FX_SWITCH_ON_ALL=Switch on all
MATRIX_FX_OPEN_WATCHER=Open watcher
MATRIX_FX_STEP_MATRIX=Step matrix (Execute current item and stop on next)
MATRIX_FX_SHOW_REPORT=Show report for the matrix
MATRIX_FX_DEFAULT_APP=Default app
MATRIX_FX_DEFAULT_CLIENT=Default client
#endregion

#region tool.newconfig

#region tool.newconfig.nodes
ABSTRACT_ENTRY_NODE_NOT_SUPPORTED=Not supported
ABSTRACT_ENTRY_NODE_ERROR=Error on set value of '%s' to parameter '%s' on class '%s'

APP_TREE_NODE_ADD_NEW_APP=Add new app
APP_TREE_NODE_ENTER_NEW_NAME=Enter new app name
APP_TREE_NODE_ERROR_ON_ADD=Error on add new application
APP_TREE_NODE_ERROR_ON_CLOSE=Error on close all application
APP_TREE_NODE_ERROR_ON_STOP=Error on stop application. See log for details
APP_TREE_NODE_ERROR_OPEN_DIC=Error on open dictionary
APP_TREE_NODE_ERROR_SHOW_HELP=Error on show help
APP_TREE_NODE_APP_ENTRIES=App entries
APP_TREE_NODE_CHOOSE_PLUGIN=Choose plugin for adapter %s
APP_TREE_NODE_CHOOSE_DIC=Choose dictionary
APP_TREE_NODE_APP_DIC=App dictionaries
APP_TREE_NODE_ERROR_REFRESH_APP_DIC=Error on refresh app dictionaries
APP_TREE_NODE_ERROR_ON_TEST=Error on test app version
APP_TREE_NODE_ERROR_EXCLUDED_DIR=Error on excluded matrix directory
APP_TREE_NODE_ERROR_REMOVE_ENTRY=Error on remove entry '%s'
APP_TREE_NODE_ERROR_ADD_ALL_PARAMS=Error on add all parameters for entry '%s'

CLIENT_TREE_NODE_ADD_CLIENT=Add client
CLIENT_TREE_NODE_ENTRE_NEW_NAME=Enter new client name
CLIENT_TREE_NODE_ERROR_ADD_NEW_CLIENT=Error on add new client
CLIENT_TREE_NODE_CLIENT_ENTRIES=Client entries
CLIENT_TREE_NODE_ERROR_REMOVE_ENTRY=Error on remove entry '%s'
CLIENT_TREE_NODE_ERROR_ON_SHOW_POSSIBILITIES=Error on show possibilities for entry '%s'
CLIENT_TREE_NODE_ERROR_ADD_ALL_PARAMS=Error on add all parameters for entry '%s'
CLIENT_TREE_NODE_CHOOSE_CLIENT=Choose client for %s
CLIENT_TREE_NODE_CHOOSE_CLIENT_DIC=Choose client dictionary
CLIENT_TREE_NODE_CLIENT_DIC=Client dictionaries
CLIENT_TREE_NODE_REFRESH_CLIENT_DIC=Error on refresh client dictionaries
CLIENT_TREE_NODE_ERROR_OPEN_DIC=Error on open client dictionary
CLIENT_TREE_NODE_ERROR_EXCLUDED_DIR=Error on excluded matrix directory
CLIENT_TREE_NODE_ERROR_ON_TEST=Error on test app version

CONF_TREE_NODE_REFRESH=Refresh
CONF_TREE_NODE_ERROR_ON_REFRESH_CONF=Error on refresh configuration
CONF_TREE_NODE_SYSTEM_VARS=System variables
CONF_TREE_NODE_LIBRARY=Library
CONF_TREE_NODE_PLAIN_TEXT=Plain text
CONF_TREE_NODE_ERROR_ON_CREATE_DIC=Error on create new dictionary
CONF_TREE_NODE_ERROR_ON_CREATE_NEW=Error on create new %s

EVALUATOR_TREE_NODE_ADD_IMPORT=Add import
EVALUATOR_TREE_NODE_ENTER_IMPORT=Enter new import
EVALUATOR_TREE_NODE_ERROR_ON_ADD=Error on add new import
EVALUATOR_TREE_NODE_EVALUATOR=Evaluator
EVALUATOR_TREE_NODE_ERROR_REMOVE=Error on remove import
EVALUATOR_TREE_NODE_ERROR_CHANGE=Error on change evaluator import

FILE_SYSTEM_TN_VIEW=File system
FILE_SYSTEM_TN_USE_AS_MATRIX=Use as matrix src
FILE_SYSTEM_TN_ERROR_AS_MATRIX=Error on add folder as matrix src
FILE_SYSTEM_TN_USE_AS_LIBRARY=Use as library src
FILE_SYSTEM_TN_ERROR_AS_LIBRARY=Error on add folder as library
FILE_SYSTEM_TN_USE_AS_APP=Use as app dictionary
FILE_SYSTEM_TN_USE_AS_CLIENT=Use as Client dictionary
FILE_SYSTEM_TN_ERROR_AS_APP=Error on add folder as app dictionary
FILE_SYSTEM_TN_ERROR_AS_CLIENT=Error on add folder as client dictionary
FILE_SYSTEM_TN_SET_DIR=Set report dir
FILE_SYSTEM_TN_ERROR_SET=Error on set report folder
FILE_SYSTEM_TN_ADD_VAR=Add as user variables
FILE_SYSTEM_TN_ERROR_ADD_CSV=Error on add csv

FILE_TN_COPY_NAME=Copy name

FORMAT_TN_ADD_FORMAT=Add format
FORMAT_TN_ENTER_NEW=Enter new format
FORMAT_TN_ERROR_ON_ADD=Error on add new format
FORMAT_TN_VIEW=Format
FORMAT_TN_ERROR_ON_CHANGE=Error on change format
FORMAT_TN_ERROR_ON_REMOVE=Error on remove format
FORMAT_TN_ERROR_ON_REPLACE=Error on replace format
FORMAT_TN_REPLACE=Replace
FORMAT_TB_ERROR_REPLACE_FORMAT=Error on change replace format

GLOBAL_HANDLER_NODE_VIEW=Global handlers
GLOBAL_HANDLER_NODE_ERROR_CHANGE=Error on change handler
GLOBAL_HANDLER_NODE_CHOOSE_SUBCASE=Choose subCase for handler %s
GLOBAL_HANDLER_NODE_ERROR_UPDATE=Error on update value

LIBRARY_TN_VIEW=library
LIBRARY_TN_REFRESH_LIBS=Error on refresh libs
LIBRARY_TN_ADD_NEW_TO=Add new library to
LIBRARY_TN_ENTER_NAME=Enter new name
LIBRARY_TN_ERROR_ON_CREATE=Error on create new library
LIBRARY_TN_EXCLUDE_FOLDER=Exclude library folder
LIBRARY_TN_ERROR_ON_EXCLUDE=Error on exclude library folder
LIBRARY_TN_ERROR_ON_OPEN_FILE=Error on open library file
LIBRARY_TN_ERROR_ON_REMOVE=Error on remove library
LIBRARY_TN_REMOVE_LIBRARY=Remove library

MATRIX_TN_VIEW=matrix
MATRIX_TN_ERROR_ON_REFRESH=Error on refresh matrices
MATRIX_TN_ERROR_ON_REMOVE_DIR=Error on remove matrix directory
MATRIX_TN_ERROR_ON_OPEN_MATRIX=Error on open matrix
MATRIX_TN_ENTER_NEW_NAME=Enter new name
MATRIX_TN_ERROR_ON_CREATE_MATRIX=Error on create new matrix
MATRIX_TN_ERROR_ON_ADD_MATRIX=Error on add new matrix
MATRIX_TN_ERROR_ON_REMOVE=Error on remove matrix
MATRIX_TN_ERROR_ADD_TO_TOOLBAR=Error on add matrix to toolbar
MATRIX_TN_ERROR_ON_RENAME=Error on rename matrix
MATRIX_TN_ERROR_ON_REMOVE_FOLDER=Error on remove folder
MATRIX_TN_ERROR_ON_OPEN_MATRIX_FILE=Error on open matrix file

REPORT_TN_VIEW=Report folder
REPORT_TN_ERROR_ON_CLEAR=Error on clear folder
REPORT_TN_ERROR_ON_REFRESH=Error on refresh report folder
REPORT_TN_ERROR_ON_OPEN=Error on open report
REPORT_TN_ERROR_ON_REMOVE=Error on remove report

SERVICE_TN_ADD_SERVICE=Add service
SERVICE_TN_ENTER_NEW_NAME=Enter new service name
SERVICE_TN_ERROR_ON_ADD_NEW=Error on add new service
SERVICE_TN_ERROR_ON_TEST_VERSION=Error on test service version
SERVICE_TN_ERROR_ON_STOP_ALL=Error on stop all services
SERVICE_TN_ERROR_ON_STOP_APP=Error on stop application. See log for details
SERVICE_TN_VIEW=Service entries
SERVICE_TN_ERROR_REMOVE_ENTRY=Error on remove entry '%s'
SERVICE_TN_ERROR_ADD_ALL_PARAMS=Error on add all parameters for entry '%s'
SERVICE_TN_START_SERVICE=Start service
SERVICE_TN_ERROR_ON_START=Error on start entry
SERVICE_TN_STOP_SERVICE=Stop service
SERVICE_TN_ERROR_ON_STOP=Error on stop entry
SERVICE_TN_CHOOSE_SERVICE=Choose service

SQL_TN_ADD_NEW=Add new sql
SQL_TN_ENTER_NEW_NAME=Enter new sql name
SQL_TN_ERROR_ON_ADD_IMPORT=Error on add new import
SQL_TN_VIEW=Sql entries
SQL_TN_ERROR_ON_REMOVE_ENTRY=Error on remove sql entry
SQL_TN_ERROR_ON_TEST_ENTRY=Error on test sql entry
SQL_TN_CHOOSE_SQL=Choose sql
SQL_TN_ERROR_ON_SHOW_TEST_PANEL=Error on show test sql panel
SQL_TN_ERROR_ON_SHOW_TESTING_PANEL=Error on show testing panel

VARS_TN_VIEW=vars
VARS_TN_ERROR_ON_REMOVE=Error on remove vars file
VARS_TN_ERROR_ON_SAVE=Error on load system variable
VARIABLES_TREE_NODE_REMOVE_VARS=Remove vars file
VARIABLES_TREE_NODE_OPEN_VARS_FILE=Open vars file
SQL_TREE_NODE_ADD_NEW=Add new sql
SQL_TREE_NODE_REMOVE=Remove
SQL_TREE_NODE_TEST=Test
SERVICE_TREE_NODE_ADD_NEW_SERVICE=Add new service
SERVICE_TREE_NODE_TEST_VERSION=Test versions
SERVICE_TREE_NODE_CLOSE_SERVICES=Stop services
SERVICE_TREE_NODE_REMOVE=Remove
SERVICE_TREE_NODE_START_SERVICE=Start service
SERVICE_TREE_NODE_STOP_SERVICE=Stop service
SERVICE_TREE_NODE_ADD_ALL_KNOWN_PARAMETERS=Add all known parameters
REPORT_TREE_NODE_CLEAR_FOLDER=Clear folder
REPORT_TREE_NODE_REFRESH=Refresh
REPORT_TREE_NODE_OPEN_REPORT=Open report
REPORT_TREE_NODE_REMOVE_REPORT=Remove report
MATRIX_TREE_NODE_REFRESH=Refresh
MATRIX_TREE_NODE_RENAME=Rename
MATRIX_TREE_NODE_OPEN_MATRIX=Open matrix
MATRIX_TREE_NODE_OPEN_AS_TEXT=Open as text
MATRIX_TREE_NODE_ADD_NEW_MATRIX=Add new matrix
MATRIX_TREE_NODE_REMOVE=Remove matrix
MATRIX_TREE_NODE_ADD_TO_TOOLBAR=Add to toolbar
MATRIX_TREE_NODE_REMOVE_FOLDER=Remove folder
MATRIX_TREE_NODE_EXCLUDE_FOLDER=Exclude matrix dir
LIBRARY_TREE_NODE_REFRESH=Refresh
LIBRARY_TREE_NODE_ADD_NEW=Add new library to
LIBRARY_TREE_NODE_EXCLUDE_FOLDER=Exclude library folder
LIBRARY_TREE_NODE_OPEN=Open library
LIBRARY_TREE_NODE_OPEN_AS_TEXT=Open as text
LIBRARY_TREE_NODE_REMOVE=Remove library
GLOBAL_HANDLER_NODE_CHANGE_HANDLER=Change handler
FORMAT_TREE_NODE_ADD_FORMAT=Add format
FORMAT_TREE_NODE_REMOVE=Remove
FORMAT_TREE_NODE_REPLACE=Replace
EVALUATOR_TREE_NODE_REMOVE=Remove
EVALUATOR_TREE_NODE_REPLACE=Replace
EVALUATOR_TREE_NODE_ENTER_NEW=Enter new evaluator
CLIENT_TREE_NODE_ADD_NEW_CLIENT=Add new client
CLIENT_TREE_NODE_TEST_VERSIONS=Test versions
CLIENT_TREE_NODE_REFRESH=Refresh
CLIENT_TREE_NODE_EXCLUDE_FOLDER=Exclude client dictionary folder
CLIENT_TREE_NODE_OPEN_DICTIONARY=Open dictionary
CLIENT_TREE_NODE_REMOVE=Remove
CLIENT_TREE_NODE_POSSIBILITIES=Possibilities
CLIENT_TREE_NODE_ADD_ALL_KNOWN_PARAMETERS=Add all known parameters
APP_TREE_NODE_TEST_VERSION=Test versions
APP_TREE_NODE_STOP_APP=Stop apps
APP_TREE_NODE_REFRESH=Refresh
APP_TREE_NODE_EXCLUDE_FOLDER=Exclude app dictionary folder
APP_TREE_NODE_OPEN_DICTIONARY=Open dictionary
APP_TREE_NODE_REMOVE=Remove
APP_TREE_NODE_ADD_ALL_KNOWN_PARAMETERS=Add all known parameters
APP_TREE_NODE_SHOW_HELP=Show help
#endregion

#region tool.newconfig.wizard
WIZARD_CC_CHOOSE_FOLDER=Choose folder to create new project
WIZARD_CC_DISPLAY_TITLE=New Project
WIZARD_CC_BUTTON_CREATE=Create
WIZARD_CC_BUTTON_CANCEL=Cancel
WIZARD_CONFIGURATION_PROJECT_NAME=Project name :
WIZARD_CONFIGURATION_PROJECT_LOCATION=Project location :
WIZARD_CONFIGURATION_MATRIX=Matrix
WIZARD_CONFIGURATION_LIBRARY=Library
WIZARD_CONFIGURATION_APP_DIC=App dic
WIZARD_CONFIGURATION_CLIENT_DIC=Client dic
WIZARD_CONFIGURATION_VARIABLES=Variables
WIZARD_CONFIGURATION_REPORT=Report
#endregion

#region tool.newconfig.testing
TESTING_CONNECTION_FX_SQL_SERVER=SQL server
TESTING_CONNECTION_FX_SERVER=Server
TESTING_CONNECTION_FX_DATABASE_NAME=Database name
TESTING_CONNECTION_FX_USER=User
TESTING_CONNECTION_FX_PASSWORD=Password
TESTING_CONNECTION_FX_TEST=Test
TESTING_CONNECTION_FX_CONTR_CONNECTED=Connected!
TESTING_CONNECTION_FX_CONTR_FAILED=Failed!
TESTING_CONNECTION_FX_CONTR_TEST=Test connection for %s
TESTING_CONNECTION_FX_CONTR_ERROR=Error on test sql connection
#endregion

COMPARE_ENUM_ALPHABET_ASC=Alphabet asc
COMPARE_ENUM_ALPHABET_DESC=Alphabet desc
COMPARE_ENUM_DATE_ASC=Date asc
COMPARE_ENUM_DATE_DESC=Date desc
CONFIG_FX_REFRESH_SUCCESS=Configuration was refreshed successful!
CONFIG_FX_ENTER_NAME=Enter new name:
CONFIG_FX_FILE_EXISTS=A file with path %s already exists. The file will rewrited
CONFIG_FX_CONTINUE_QUESTION=Do you want to continue?
CONFIG_FX_FILE_CHANGED=A File was changed. Before renaming the file will save.
CONFIG_FX_ENTER_VISIBLE_NAME=Enter a visible name
CONFIG_FX_MANY_NAMESPACES=Current library contains many namespaces : %s
CONFIG_FX_REMOVE_ANYWAY=Remove it anyway?
CONFIG_FX_OPEN_CLIENT_DIC=CLIENT DICTIONARY PATH '%s' ARE OPENED
CONFIG_FX_ENTRY_ALREADY_STARTED=Entry with id '%s' already started
CONFIG_FX_EMPTY_ENTRY_NAME=Empty %s entry name
CONFIG_FX_ENTRY_ALREADY_PRESENT=%s entry with name %s is already present
CONFIG_FX_CANT_CREATE_FILE=Can't create new file
CONFIG_FX_POSSIBILITIES_FOR=Possibilities for %s
CONFIG_FX_POSSIBILITIES=Possibilities
CONF_FX_CONTR_ERROR_DISPLAY_EVALUATOR=Error on display evaluator
CONF_FX_CONTR_ERROR_DISPLAY_MATRIX=Error on display matrix
CONF_FX_CONTR_ERROR_DISPLAY_LIBS=Error on display libs
CONF_FX_CONTR_ERROR_DISPLAY_VARS=Error on display vars
CONF_FX_CONTR_ERROR_DISPLAY_SQL=Error on display sql entries
CONF_FX_CONTR_ERROR_DISPLAY_CLIENT_ENTRIES=Error on display client entries
CONF_FX_CONTR_ERROR_DISPLAY_SERVICE_ENTRIES=Error on display service entries
CONF_FX_CONTR_ERROR_DISPLAY_APP_ENTRIES=Error on display apps entries
CONF_FX_CONTR_ERROR_DISPLAY_FOLDER=Error on display report folder
CONF_FX_CONTR_CONFIG_SAVED=Config successfully saved
CONFIG_TOOL_BAR_SORTING_VIA=Sorting via %s
CONFIG_TREE_VIEW_ERROR_CALL=Error on call

#endregion

#region tool.search
SEARCH_SELECT_SCOPES=Select one or more scopes
SEARCH_ERROR_PLAIN_TEXT=Error on open plain text
SEARCH_ERROR_OPEN_MATRIX=Error on open matrix
SEARCH_ERROR_OPEN_DICTIONARY=Error on open dictionary
SEARCH_ERROR_OPEN_VARS=Error on open vars
SEARCH_ERROR_OPEN_FILE=Error on open file
SEARCH_INVALID_REGEXP=Invalid regexp pattern
SEARCH_INVALID_FILE_MASK=Invalid file mask pattern
AGGREGATE_RESULT_SCROLL=Scroll from configuration
AGGREGATE_RESULT_OPEN_AS_PLAIN=Open as plain text
AGGREGATE_RESULT_OPEN_AS_DOC=Open as document
#endregion

#region tool.settings
SETTINGS_PANEL_CONTR_SAVE_PASS=Settings saved to file [%s] \n Restart application for all changes apply
SETTINGS_PANEL_CONTR_SAVE_FAIL=Error to save.\nSee log for details
GIT_TAB_CONTR_CHOOSE_HOST=Choose known host file
GIT_TAB_CONTR_CHOOSE_SSH=Choose ssh identity file
SHORTCUTS_TAB_CONTR_NAVIGATION=Navigation
SHORTCUTS_TAB_CONTR_ACTIONS=Actions
SHORTCUTS_TAB_CONTR_SHORTCUTS_USED=This shortcuts used %s
SETTINGS_MAIN=Main
SETTINGS_SHORTCUTS=ShortCuts
SETTINGS_LOG=Log
SETTINGS_COLORS=Color
SETTINGS_GIT=Git
SETTINGS_MATRIX=Matrix
SETTINGS_WIZARD=Wizard
SETTINGS_RESTORE_DEFAULT=Restore all to default
WIZARD_TAB_MIN=Min
WIZARD_TAB_MAX=Max
WIZARD_TAB_TYPE=Type : 
WIZARD_TAB_PATH=Path : 
WIZARD_TAB_SIZE=Size : 
WIZARD_TAB_POSITION=Position : 
WIZARD_TAB_ATTR=Attr : 
WIZARD_TAB_THRESHOLD=Threshold : 
WIZARD_TAB_RESTORE_DEFAULT=Restore default
SHORTCUTS_TAB_FOR=ShortCuts for :
SHORTCUTS_TAB_ACCEPT=Accept
SHORTCUTS_TAB_DEFAULT=Default
SHORTCUTS_TAB_DELETE=Delete
SHORTCUTS_TAB_RESTORE_DEFAULT=Restore default

MATRIX_TAB_SCREENSHOT=Screenshot
MATRIX_TAB_POPUP=Popup
MATRIX_TAB_FOLD_NEW=Fold new items
MATRIX_TAB_RESTORE_DEFAULT=Restore default
MAIN_TAB_MAX_COUNT=Max last matrix count :
MAIN_TAB_TIME_NOTIFICATION=Time notification :
MAIN_TAB_SEC=sec.
MAIN_TAB_THEME=Theme :
MAIN_TAB_FONT=Font :
MAIN_TAB_FONT_SIZE=Font size :
MAIN_TAB_SELECT_LANGUAGE=Select language: 
MAIN_TAB_FULLSCREEN_MODE=Use fullscreen mode
MAIN_TAB_VIEWER=Use external report viewer
MAIN_TAB_XPATH=Use fullscreen xpath dialog
MAIN_TAB_COPYRIGHT=Copyright
MAIN_TAB_RESTORE_DEFAULT=Restore default

LOG_TAB_FATAL=FATAL :
LOG_TAB_ERROR=ERROR :
LOG_TAB_WARN=WARN :
LOG_TAB_ALL=ALL :
LOG_TAB_INFO=INFO :
LOG_TAB_DEBUG=DEBUG :
LOG_TAB_TRACE=TRACE :
LOG_TAB_RESTORE_DEFAULT=Restore default

GIT_TAB_HOSTS=Git known hosts :
GIT_TAB_SSH=Git SSH identity :
GIT_TAB_RESTORE_DEFAULT=Restore default

COLORS_TAB_DEFAULT=Default
COLORS_TAB_EXPAND_ALL=Expand all
COLORS_TAB_COLLAPSE_ALL=Colapse all
COLORS_TAB_CLEAR_ALL=Clear all
COLORS_TAB_RESTORE_DEFAULT=Restore default

#endregion

APP_CON_STOP_BEFORE_RUN=You need to stop old application, before run new
APP_CON_CLOSE_FIRSTLY=You should choose app entry at first.
COMM_CANT_LOAD_RESOURCE=Can't load resource: 
COMM_FILE_DELETE_HEADER=Removing
COMM_FILE_DELETE_BODY=Are you sure you want to remove %s?\nYou can't undo this action.

#endregion

#region app
APP_POOL_APP_IS_NOT_LOADED=The application %s is not loaded.
APP_POOL_LOAD_FACTORY=The application factory with id %s is not found
#endregion

#region charts
X_AXIS=X axis labels for bar chart
Y_AXIS=Y axis description for bar chart
#endregion

#region common
#region common.documentation
SUPPORTED_CONTROLS=Поддерживаемые controls
DIFFERENCES=Различия
PARAMETER=Параметр
DESCRIPTION=Описание
EXAMPLE=Пример
#endregion

#region common.report
MARKER_KEY_A_DESCR=Use it if You want to put some part of code inside current text. Color of inserted code depends on JF color theme: dark or white.
MARKER_KEY_B_DESCR=Put some code into container. Used for highlighting big part of code.  Color of inserted code depends on JF color theme: dark or white.
MARKER_KEY_C_DESCR=Set blue color (#00bfff) for determined text.
MARKER_KEY_D_DESCR=Rotate determined text by 90 degrees.
MARKER_KEY_E_DESCR=Put text in new paragraph.
MARKER_KEY_F_DESCR=Underline some part of text.
MARKER_KEY_G_DESCR=Highlight some part of text as bolder.
MARKER_KEY_H_DESCR=Highlight some part of text as italic.
MARKER_KEY_I_DESCR=Put text in new paragraph.
MARKER_KEY_M_DESCR=Set current text as name of caption first level.
MARKER_KEY_N_DESCR=Set current text as name of caption second level.
MARKER_KEY_O_DESCR=Set current text as name of caption third level.
MARKER_KEY_P_DESCR=Set current text as name of caption fourth level.
MARKER_KEY_Q_DESCR=Set current text as name of caption fifth level.
#endregion

#region common.evaluator
LINKED_PROPS_ELEMENTS_SO_OLD=Enumerations are so old-school, don't use them. Use keySet() or entrySet() instead
MVEL_EVALUATOR_WRONG_TYPE_EXCEPTION=Wrong type of precompiled:
#endregion

JF_SIMPLE_FACADE_INIT_EXCEPTION=Configuration is invalid! See the logs for details.
JF_SIMPLE_FACADE_DO_ACTION_EXCEPTION=JackFishFacade not initialized. Call init() before doAction()
JF_SIMPLE_FACADE_BY_NAME_EXCEPTION=Action with name %s is unknown.
JF_SIMPLE_FACADE_START_EXCEPTION=JackFishFacade not initialized. Call init() before start()
JF_SIMPLE_FACADE_CONNECT_TO_EXCEPTION=JackFishFacade not initialized. Call init() before connectTo()
JF_SIMPLE_FACADE_STOP_EXCEPTION=JackFishFacade not initialized. Call init() before stop()
SETTINGS_GET_DEFAULT_VALUE_EXCEPTION=No default settings for key %s
#endregion

#region documents

#region documents.config
CONFIGURATION_OBJECT_FROM_CLASS_NAME_EXCEPTION=Class %s is not assignable from %s
CONTEXT_SET_HANDLER_EXCEPTION=Parameters count for handler %s (subCase %s) must be great that 0
CONTEXT_HANDLER_NOT_FOUND=Handler %s is not found
#endregion

#region documents.matrix
PARAMETER_TYPE_EXCEPTION=Type %s is not the same type as %s
PARAMETER_ARRAY_EXCEPTION=Type %s is an array. It needs an single object %s
MATRIX_ENGINE_MATRIX_INCORRECT=Matrix is incorrect. Errors : %s
#endregion

#region documents.matrix.parser
PARSER_VALUE_EXCEPTION=Not value for header in action.  Matrix name %s
PARSER_HEADER_EXCEPTION=No header for action.  Matrix name %s
PARSER_UNKNOWN_TYPE_EXCEPTION=Unknown type %s of item
PARSER_UNKNOWN_SYNTAX_EXCEPTION=Unknown syntax item %s
PARSER_TOO_MANY_SYNTAX_EXCEPTION=Too many syntax items are suitable: %s
SCREENSHOTKIND_VALUE_BY_NAME_EXCEPTION=Unknown name: %s
#endregion

#region documents.matrix.parser.items
ACTION_ITEM_CANT_FIND_ACTION=Can not to find the action: %s
ACTION_ITEM_DESCRIPTION=Adds new action into matrix
ACTION_UNKNOWN_NAME_EXCEPTION=Action with name %s is unknown.
ASSERT_EXAMPLE={{#Assert;#Message\n #a == 10;'The value of ' + a + ' doesn't match 10'#}}
ASSERT_EXPRESSION_EXCEPTION=Assert expression should be boolean
ASSERT_DESCRIPTION=This operator is used to check an assertion. If an assertion is correct, the matrix will run, if an assertion is incorrect, the operator is terminated and it is reported in user's message. This operator is used to check equality of expected and actual values. Fields: Assert - assertion. Message - a message, which will be reported
BREAK_DESCRIPTION=This operator is used to break cycles  for, forEach and while.
BREAK_EXAMPLE=Create cycle from 1 to 10 using an operator For, cycle when variable is a = 9 break a cycle using an operator Break. {{#\n #For;#From;#To;#Step \n a;1;10;1 \n #If \n a == 9 \n #Break \n #EndIf \n #EndFor#}}
CALL_DESCRIPTION=This operator is used to call a subprogram which is organized with SubCase. Call is performed with id SubCase giving name NameSpace - > NameSpace.SubCaseID\n SubCase that is being called can be in the current matrix as well as in the library (Project directory -> library).\n  In case if SubCase returns any value, it is available via  id operator Call.\n If SubCase is being called with operator Call, factual parameters, which are used by performing  SubCase, can be transferred.  Arguments should be named. 
CALL_EXAMPLE=1. Create SubCase with id Add and arguments firstNumber and secondNumber.\n 2. In a given SubCase make a sum of parameters values firstNumber and secondNumber. Return result using an operator Return.\n 3 Call SubCase Add with an operator Call and transfer two numbers as parameters. \n SubCase will make a sum of given values and return a result, which is accessible by using id SubCase - Add. {{#\n #Id;#SubCase;#firstNumber;#secondNumber\n Add;;1;2\n #Id;#Let\n result;firstNumber + secondNumber\n #Return\n result\n #EndSubCase\n #Id;#Call;#firstNumber;#secondNumber\n CALL1;Add;1;2#}}
CALL_CHOOSE_SUBCASE=Choose sub case from list
CALL_CANT_FIND_SUBCASE=Can't find sub case with id : [ %s ]
CALL_PARAMS_EXCEPTION=Errors in parameters expressions #Call
CASE_DESCRIPTION=This operator is used to describe one variant to compare with for an operator Switch.\n In each operator  Case is given one of the variants that equals the expression from the operator Switch
CASE_EXAMPLE=(Example #1)\n Or the operator Case is performed, which value is true (Example #2)\n After one of the blocks  case has been performed an operator  switch is being broken.\n Example #1:\n Variable a is transmitted into field  switch. The  Case will be performed which value matches a variable value.\n {{#\n #Switch\na\n#Case\n1\n#Action;#Greeting\nPrint;'Hello!'\n #Case\n2\n #Action;#Greeting\n Print;'Bye!'\n #EndSwitch#}} \nLogical data type which equals true is transferred into field  switch \n The Case will be performed, which field's expression will returns true. {{#\n #Id;#Let\n expression;'Annoucements(425)'\n #Switch\n true\n #Case\n expression.matches('[\\\\\\\\w|\\\\\\\\s]+[(]425{1}[)]')\n #Action;#result\n Print;true\n #Case\n expression.matches('[\\\\\\\\w|\\\\\\\\s]+[(]455{1}[)]')\n #Action;#result\n Print;false\n #EndSwitch#}}
CONTINUE_DESCRIPTION=This operator is used to move to the next cycles iteration For, ForEach, While.\n The new iteration starts with checking if cycle conditions are true.
CONTINUE_EXAMPLE=Create a cycle from 1 to 10 with an operator For and display variable value a  in console. If variable a = 9 start a cycle from the beginning with an operator Continue. {{#\n #For;#From;#To;#Step\na;1;10;1\n#If\na == 9\n#Continue\n#EndIf\n#Action;#a\nPrint;a\n#EndFor#}}
DEFAULT_DESCRIPTION=This operator describes a line of the operator Switch, which wil be performed if none of Case has been worked. \n This operator is 1 only  and should be necessarily placed after all Case blocks.
DEFAULT_EXAMPLE=Variable number is transferred to the field switch. As variable value doesn't match any Case, block Default will be performed. {{# \n#Id;#Let\nnumber;0\n#Switch\n number\n#Case\n1\n#Action;#Greeting\nPrint;'Hello!'\n#Case\n2\n#Action;#Greeting\nPrint;'Hi!'\n#Default\n#Action;#Greeting\nPrint;'Farewell'\n#EndSwitch#}}
ELSE_DESCRIPTION=This operator describes a line of the operator If which is performed if condition  - false. Line Else is only one for If.
ELSE_EXAMPLE={{#\n #Id;#Let\nyear;new DateTime().getYears(new Date())\n#If\nyear == 2017\n#Action;#today\nPrint;'is 2017'\n#Else\n#Action;#today\nPrint;'is not 2017'\n#EndIf#}}
FAIL_DESCRIPTION=This operator generates a failure in the current matrix place. If a failure given can't be proceeded by  OnError or by a global error handler, the current TestCase is failed. \nParameter Fail can take a string value then an error with this message is generated and this message is shown instead of failure.  An operator Fail can be called in an error handler and a variable err can be passed to him. \n(see OnError). In this case an exact failure place can be found.
FAIL_EXAMPLE={{#\n#Id;#TestCase;#Kind;#Depends;#For\naa;Test case;Never;;\n#Fail\n'my error'\n#OnError\n#Action;#Where error was\nPrint;err.Where#}}
FOR_DESCRIPTION=Operator For is used to organize a cycle which should be performed a given number of times. This cycle can for for increase and reduction. Fields: \nFor - a variable is given what iteration will be performed by. \nFrom - a numeric value which a cycle will be started with is given. \nTo - a numeric value which is reached and the last iteration will be performed. \nStep - a step, which will change the value in the field from.
FOR_EXAMPLE={{#\n#For;#From;#To;#Step\na;1;10;1\n#Action;#a\nPrint;a\n#EndFor#}}
FOREACH_DESCRIPTION=Operator ForEach is used to organize a cycle according the collection elements: massive, list, table, Map etc. \nFields:\nForEach - a variable name is given which is set with the next element value by each iteration.  \nIn - a collection is given which is needed to organize a cycle.
FOREACH_EXAMPLE={{#\n#ForEach;#In\na;['First', 'Second']\n#Action;#a\nPrint;a\n#EndForEach#}}
FOREACH_EXCEPTION_IN=Error in expression #In %s
FOREACH_EXCEPTION=#In is not a collection
IF_DESCRIPTION=This operator creates matrix branch depending on condition.  The operator if takes a logic expression. If true is a result of this expression, a code block inside of if operator is performed. \nIf the expression is false, the operator line Else is performed. If this line isn't there, an action is performed continually.
IF_EXAMPLE={{#\n#Id;#Let\nyear;new DateTime().getYears(new Date())\n#If\nyear == 2017\n#Action;#today\nPrint;'is 2017'\n#Else\n#Action;#today\nPrint;'is not 2017'\n#EndIf#}}
IF_EXPRESSION_EXCEPTION=Error in expression #If.\n %s
LET_DESCRIPTION=This operator is used to name a variable and set a value. \nIf there is no name, this expression is performed. The variable name is given In the left field, in the right field is the variable value or expression, which result will be saved in the variable.
LET_EXAMPLE=The variable  greeting is set with value Hello Wolrd!{{#\n#Id;#Let\ngreeting;'Hello world!'#}}
NAME_SPACE_DESCRIPTION=This operator introduces a name space in the library in order to link to Subcase from this library. \nIn the operator NameSpace are SubCases, which can be called with the use of Call - NameSpaceId.SubCase ID afterwards.\n The Id of NameSpace operator is the name of the creating library.\n In the name space {{@NameSpace@}} are {{@SubCase@}}.
NAME_SPACE_EXAMPLE=Create a library MyLibrary, which contains SubCase PrintHi.\nAfter the given matrix has been saved in a file, which is used to store libraries, it can be called in Call operator as following: \nMyLibrary.PrintHi\n{{#\n#Id;#NameSpace\nMyLibrary;\n#Id;#SubCase\nSUB1;\n#Action;#Greeting\nPrint;'Hello!'\n#EndSubCase\n#EndNameSpace#}}
ON_ERROR_DESCRIPTION=This operator is used to proceed failures in matrix when it's running.  It can be called if there is a failure only. It can be put in: TestCase, SubCase, For, ForEach, Step and OnError.\n  If there are failures in these blocks, an error-handler is searched and it operates. In this case a failure feature is removed from the block.  After a failure has been proceeded the block is performed if there are no more mistakes after the operator OnError.\n By performing OnError two local variables error and err are created implicitly.\n err - is a structured object, which contains fields \n err.Where - returns the action name where there was a failure. \nerr.Message - returns a failure message err.\n Kind - returns a failure type.\n error variable keeps a failure massage. \nOnError error-handler is prior to the global error-handler.
ON_ERROR_EXAMPLE=Create action SQLConnect but don't give the parameter Connection to it.. The arosen failure is proceeded and discovered.\n As a result of the proceeded example the following line will be displayed in console - Where error was = ActionItem:SQLexecute.{{#\n#TestCase;#Kind;#Depends;#For\nTest case;Never;;\n#Id;#Action;#Query;#Connection\nSQLEXEC1;SQLexecute;'';\n#OnError\n#Action;#Where error was\nPrint;err.Where#}}
RAW_MESSAGE_DESCRIPTION=This operator is used to describe an object MapMessage of the type given.
RAW_MESSAGE_EXAMPLE={{#\n#Id;#RawMessage;#Client\nMSG1;none;FIX\n$;MessageType\n0;none\n#EndRawMessage#}}
RAW_MESSAGE_GET_DICTIONARY_ERROR=Can't load factory %s
RAW_TABLE_DESCRIPTION=This operator is used to describe an object asTable. In matrix editor there is a special mini editor for rowText and rawMessage for this operator.
RAW_TABLE_EXAMPLE={{#\n#Id;#RawTable\nDATA1;Table\n@;newH\n0;newR\n#EndRawTable#}}
RAW_TABLE_CUT_INFO=Current table size is [%s;%s] and given size is [%s;%s].The table will be cut 
RAW_TABLE_CUT_CONFIRM=Do you want to continue cutting the table?
RAW_TEXT_DESCRIPTION=This operator is used to describe an object as Text. It has its own mini editor.
RAW_TEXT_EXAMPLE={{#\n#Id;#RawText\nTEXT1;Text\n\\"Hello world\\"\n#EndRawText#}}
RETURN_DESCRIPTION=This operator breaks  SubCase performing and returns the result.
RETURN_EXAMPLE={{#\n#Id;#SubCase\nSUB1;\n#Id;#Let\nresult;2+2*2\n#Return\nresult\n#EndSubCase#}}
SET_HANDLER_DESCRIPTION=Sets up an event handler for all TestCases or Steps.
SET_HANDLER_EXAMPLE={{#\n#SetHandler#}}
STEP_DESCRIPTION=This is an analogue of TestCase block , it is used to divide TestCase. \nEach Step keeps its result in a separate line in a system table  (see action ResultTable).\n Step which contains an action ResultTable is always Passed.
STEP_EXAMPLE={{#\n#Step;#Kind\n;\n#EndStep#}}
STEP_NOT_FOUND_EXCEPTION=Fail due the Step this id %s is not found
STEP_FAILED_EXCEPTION=Fail due the Step %s is failed
SUB_CASE_DESCRIPTION=This operator describes a subprogram. In parameters the program arguments are described, factual parameters are used with Call.\n  SubCase is performed by the Call operator only. SubCase operator can even be located in commented testcases.
SUB_CASE_EXAMPLE={{#\n#Id;#SubCase\nSUB1;\n#Action;#Greeting\nPrint;'Hello!'\n#EndSubCase#}}
SWITCH_DESCRIPTION=This operator allows to define multiple branches. With case and default the operator will be performed which condition is true. If no case suits, default is performed.
SWITCH_EXAMPLE=In switch is transferred true in case are placed expressions as regular. \nIn the field switch number 1 is passed, which matches the number from the first Case given. \nIf number 2 is passed to Switch, the second Case is performed {{#\n#Switch\n1\n#Case\n1\n#Action;#Greeting\nPrint;'Hello!'\n#Case\n2\n#Action;#Greeting\nPrint;'Bye!'\n#EndSwitch#}}
SWITCH_CHECK_EXCEPTION=Switch must contain only Case or Default item. But contains %s
TEST_CASE_DESCRIPTION=The main operator in matrix directory. It is used to logically divide matrix in steps. This is the high level operator, can't be put in any other actions or operators including TestCase. \nAll TestCase are performed one by one, independently of the performed results in previous testcases. Nevertheless, the dependence can be set with the field Depends.  If TestCase from the parameter Depends is failed,the dependend one will be failed too.\n Each TestCase also contains Screenshot parameter which is used to specify when in the TestCase given a screenshot is made.  \nTestCase ID is used to shortly identify and link to it in the parameter BeforeTestCase of actions TableReport, TextReport etc.\n Each TestCase keeps the performed result in a separate line in a system table (see action ResultTable).\n TestCase which has an action ResultTable is always Passed.\n EachTestCase introduces its name space, that means actions and variables from one TestCase aren't accessible from another one.\n To get the access  from the different TestCase is essentially to enter the parameter  Global for an action.(mark checkbox with G)
TEST_CASE_EXAMPLE={{#\n#TestCase;#Kind;#Depends;#For\n;;;#}}
TEST_CASE_NOT_FOUND_EXCEPTION=Fail due the TestCase this id %s is not found
TEST_CASE_FAILED_EXCEPTION=Fail due the TestCase %s is failed
WHILE_DESCRIPTION=Operator While is used to organized a cycle.
WHILE_EXAMPLE=Notify a variable a and set value 1 to it.\nWhile the variable value is a < 10 in  While cycle display its value in console  and increase it by 1. {{#\n#Id;#Let\na;1\n#While\na < 10\n#Action;#a\nPrint;a\n#Id;#Let\na;a+1\n#EndWhile#}}
END_RAW_TABLE_DESCRIPTION=Closes the statement Table.
END_RAW_MESSAGE_DESCRIPTION=Closes the statement Message.
END_IF_DESCRIPTION=Closes the statement If.
END_RAW_TEXT_DESCRIPTION=Closes the statement Text.
TEMP_ITEM_DESCRIPTION=Temp action
END_FOR_EACH_DESCRIPTION=Closes the statement ForEach.
END_STEP_DESCRIPTION=Marks end of step.
END_SUBCASE_DESCRIPTION=Marks end of sub case.
MATRIX_ROOT_DESCRIPTION=Root element.
END_SWITCH_DESCRIPTION=Marks end of switch statement.
END_FOR_DESCRIPTION=Closes the statement For.
END_WHILE_DESCRIPTION=Marks end of while loop.
END_DESCRIPTION=Only visual item
END_NAME_SPACE_DESCRIPTION=Marks end of namespace.
HELP_ACTION_ITEM_ACTION=Action
HELP_ACTION_ITEM_ADDITIONAL_FIELDS_YES=Additional fields - Yes
HELP_ACTION_ITEM_ADDITIONAL_FIELDS_NO=Additional fields - Yes
HELP_ACTION_ITEM_EXAMPLES=Examples
HELP_ACTION_ITEM_SEE_ALSO=See also
HELP_ACTION_ITEM_INPUT=Input:
HELP_ACTION_ITEM_FIELD_NAME=Field name
HELP_ACTION_ITEM_FIELD_TYPE=Field type
HELP_ACTION_ITEM_DESCRIPTION=Description
HELP_ACTION_ITEM_MANDATORY=Mandatory
HELP_ACTION_ITEM_DEFAULT=Default
HELP_ACTION_ITEM_SHOULD_FILLED=Should filled
HELP_ACTION_ITEM_OUTPUT=Output
HELP_ACTION_ITEM_RESULT_TYPE=Result type
HELP_CLASS_METHODS=Methods
HELP_ITEM_EXAMPLES=Examples
HELP_ITEM_SEE_ALSO=See also
HELP_WIZARD_ITEM_WIZARD_CATEGORY=Wizard category:
HELP_WIZARD_ITEM_VIEW_EXAMPLE=View example
#endregion
WINDOW_CHECK_PARAMS_EXCEPTION=The following fields are missing in the dictionary:
#endregion

#region exceptions
COLUMN_IS_PRESENT_EXCEPTION=Column with name %s already present
DIALOG_NOT_FOUND_EXCEPTION=Window %s not found in the dictionary
#endregion

#region functions
ROW_TABLE_HEADER_NOT_FOUND=Header with name '%s' not found into table
XML_CANT_SET_TEXT_EXCEPTION=Can't set text to document
XML_SET_ATTR_EXCEPTION=Attributes may sets only into Element
TABLE_COLUMN_NOT_FOUND=Column with name %s not found in the table
TABLE_IOOB_EXCEPTION=Index : %d , Size : %d
TABLE_DIFFERENCES=Differences
TABLE_DESCRIPTION=Description
TABLE_EXPECTED=Expected
TABLE_ACTUAL=Actual
#endregion

#region service
SERVICE_POOL_SERVICE_IS_NOT_LOADED=The service %s is not loaded or already stopped.
SERVICE_POOL_SERVICE_ALREADY_STARTED=The service '%s' already started.
SERVICE_POOL_NOT_FOUND=The service factory with serviceId %s is not found
#endregion

#region sql
DATA_BASE_POOL_DRIVER_NOT_FOUND=The driver %s was not found.
DATA_BASE_POOL_JAR_DOESNT_CONTAINS=Jar file %s does not contain SQL Driver.
DATA_BASE_POOL_NUMBER_OF_PARAMS=Number of transferred params not equal number of required params in query
DATA_BASE_POOL_SQL_ID_NULL=SQL entry id is null
#endregion

SUPPORTED_ENTRY_TRUE=SupportedEntry{ isSupported=true }
SUPPORTED_ENTRY_FALSE=SupportedEntry{ isSupported=false }


######################################
## PLUGINS part
######################################

#region plugins
PLUGIN_COMMON_DESCRIPTION=empty

#region plugins.app.web
WEB_PLUGIN_DESCRIPTION=Web плагин используется для тестирования веб приложений с помощью браузера. Основан на использовании Selenium фреймворка и доступен для браузеров, поддерживаемых данным фреймворком. Поддерживает кроссбраузерное тестирование.
WEB_PLUGIN_DIFFERENCE=Вы не можете подключиться к уже запущенному приложению. {{`ApplicationCloseWindow работает без изменений.`}}{{`ApplicationConnectTo не поддерживается.`}}{{`ApplicationMove не поддерживается.`}}{{`ApplicationNavigate работает без изменений.`}}{{`ApplicationNewInstance работает без изменений.`}}{{`ApplicationRefresh работает без изменений.`}}{{`ApplicationResize не может минимизировать окно.`}}{{`ApplicationSetProperties работает без изменений.`}}{{`ApplicationSwitchTo работает без изменений.`}}{{`DialogAlert  работает без изменений.`}}{{`DialogSwitchToWindow работает без изменений.`}}
WEB_PLUGIN_LOG_LEVEL=Задаёт уровень логгирования для запущенного плагина. Рекомендуем использовать 'ALL' (используется по умолчанию)
WEB_PLUGIN_JRE_EXEC=Если вы хотите использовать версию JRE, отличную от используемой по умочанию, вы можете указать к ней путь.
WEB_PLUGIN_JRE_ARGS=Указывает параметры запуска плагина. Например, минимальный и максимальный размер памяти
WEB_PLUGIN_CHROME_DRIVER=Указывает путь для драйвера Google Chrome
WEB_PLUGIN_GECKO_DRIVER=Указывает путь для драйвера Firefox
WEB_PLUGIN_IE_DRIVER=Указывает путь для драйвера Internet Explorer
WEB_PLUGIN_CHROME_DRIVER_BINARY=Указывает путь к установленному бруазеру Google Chrome. Путь должен существовать для запуска данного браузера. Может быть абсолютным или относительным.
WEB_PLUGIN_FIREFOX_PROFILE=Указывает папку, в которой хранятся настройки профиля пользователя для браузера Firefox 
WEB_PLUGIN_PRIVATE_MODE=Приватный запуск браузера позволяет не сохранять информацию о посещённых сайтах. Работает только для Internet Explorer.
WEB_PLUGIN_BROWSER=С помощью комбобокса вы можете указать браузер, запускаемый для работы с тестируемым приложением
WEB_PLUGIN_URL=Указать URL, который должен быть открыт с помощью заданного браузера. необходимо указывать полный путь и помнить про различия между https/https
WEB_PLUGIN_WHERE_OPEN=Указывает где запустить новое приложение: в новой вкладке, в новом окне или во вкладке, открытой первоначально
WEB_PLUGIN_PROPERTY_URL=Вы можете получить или задать URL тестируемого приложения
WEB_PLUGIN_PROPERTY_TITLE=Вы можете получить или задать заголовок тестируемого приложения
WEB_PLUGIN_PROPERTY_ALL_TITLES=Вы можете получить все заголовки тестируемого приложения
WEB_PLUGIN_PROPERTY_COOKIE=Вы можете получить cookie из используемого браузера указав интересующее имя
WEB_PLUGIN_PROPERTY_ALL_COOKIES=Вы можете получить все cookie из используемого браузера
WEB_PLUGIN_PROPERTY_ADD_COOKIE=Вы можете добавить cookie в используемый браузер
WEB_PLUGIN_PROPERTY_REMOVE_COOKIE=Вы можете удалить cookie из используемого браузера указав имя куки
WEB_PLUGIN_PROPERTY_REMOVE_ALL_COOKIES=Вы можете удалить все cookie из используемого браузера
WEB_PLUGIN_PROPERTY_TAB=empty
WEB_PLUGIN_IS_DRIVER_LOGGING=Enable logging for browser. Default value 'false'
BROWSER_SET_CHROME_PATH_EXCEPTION=You need set the 'ChromeDriverPath' parameter on plugin to valid value
BROWSER_SET_IE_PATH_EXCEPTION=You need set the 'IEDriverPath' parameter on plugin to valid value
BROWSER_UNKNOWN=Unknown browser : %s
CUSTOM_IE_DRIVER_OS_EXCEPTON=You appear to be running %s. The IE driver only runs on Windows.
SELENIUM_OPERATION_EXECUTOR_ERROR_DRAG_AND_DROP=Error on drag and drop
SELENIUM_OPERATION_EXECUTOR_CANT_SCROLL_TO_INDEX=Can't scroll to index %d. Child size : %d
SELENIUM_OPERATION_EXECUTOR_ELEMENT_OUT_OF_SCREEN=Element out of screen
SELENIUM_OPERATION_EXECUTOR_ERROR_ON_FIND_INTO_TABLE="Error on find into table
SELENIUM_OPERATION_EXECUTOR_DONT_SUPPORT=Don't support
SELENIUM_OPERATION_EXECUTOR_CANT_FIND_BY_INDEX=Can't select element by index %d ,because found %d elements
SELENIUM_OPERATION_EXECUTOR_NOT_FOUND_IN_THE_LIST=Element with text '%s' was not found in the list
SELENIUM_OPERATION_EXECUTOR_EMPTY_TABLE=Table is empty
SELENIUM_OPERATION_EXECUTOR_INVALID_INDEX=Invalid index=[%d]. Maximum index=[%d].
SELENIUM_OPERATION_EXECUTOR_HEADERS_NOT_FOUND=Headers not found. Check your header locator or table locator
SELENIUM_OPERATION_EXECUTOR_CANT_FIND_TAG_IN_TABLE=Can't find tag tbody in current table
SELENIUM_REMOTE_APP_EMPTY_BROWSER_EXCEPTION=Browser can't be null or empty.
SELENIUM_REMOTE_APP_EMPTY_URL_EXCEPTION=URL can't be null or empty.
SELENIUM_REMOTE_APP_WRONG_BROWSER_NAME=Wrong browser name.
SELENIUM_REMOTE_APP_PAGE_LOADING=Page loading
SELENIUM_REMOTE_APP_FAIL_DRIVER_CREATION=Driver creation is failed
SELENIUM_REMOTE_APP_ALERT_IS_NOT_PRESENT=Alert is not present
SELENIUM_REMOTE_APP_GET_DIALOG_SIZE=Get dialog size
SELENIUM_REMOTE_APP_GET_DIALOG_POSITION=Get dialog position
SELENIUM_REMOTE_APP_OWNER_NOT_FOUND=Owner was not found.
SELENIUM_REMOTE_APP_TOO_MUCH_OWNERS=%d owners were found instead 1.
SELENIUM_REMOTE_APP_URL_IS_NULL=url is null
WEB_DRIVER_LISTENER_NO_JS=Current driver instance doesn't support executing javascript
WEB_DRIVER_LISTENER_DRIVER_UNSUPPORT=Current driver instance does not support %s
WEB_DRIVER_LISTENER_NOT_LOCATABLE=Current element instance does not locatable
#endregion

#region plugins.app.win
WIN_PLUGIN_DESCRIPTION=Плагин для тестирования приложений, написанных под ОС Windows. Основан на базе фреймворка UI Automation.
WIN_PLUGIN_DIFFERENCE=Не может работать с ячейками таблицы как с независимыми элементами. Работает только с таблицей.{{`ApplicationCloseWindow не поддерживается.`}}{{`ApplicationConnectTo работает без изменений.`}}{{`ApplicationMove работает без изменений.`}}{{`ApplicationNavigate не поддерживается.`}}{{`ApplicationNewInstance не поддерживается.`}}{{`ApplicationRefresh работает без изменений.`}}{{`ApplicationResize - если окно находиться в уже максимальном состоянии, то для изменения его размера необходимо предварительно перевести окно в нормальный размер (Resize.Normal) и только потом менять размер на желаемый. Аналогично следует поступать в случае минимизированного окна.`}}{{`ApplicationSetProperties не поддерживается.`}}{{`ApplicationSwitchTo не поддерживается.`}}{{`DialogAlert работает без изменений.`}}{{`DialogSwitchToWindow не поддерживается.`}}
WIN_PLUGIN_LOG_LEVEL=Задаёт уровень логгирования для запущенного плагина. Рекомендуем использовать 'ALL' (используется по умолчанию)
WIN_PLUGIN_JRE_EXEC=Если вы хотите использовать версию JRE, отличную от используемой по умочанию, вы можете указать к ней путь.
WIN_PLUGIN_JRE_ARGS=Указывает параметры запуска плагина. Например, минимальный и максимальный размер памяти
WIN_PLUGIN_MAX_TIMEOUT=Вы можете задать максимальное время (в миллисекундах), в течении которого плагин будет пытаться найти элементы в окне
WIN_PLUGIN_ALWAYS_TO_FRONT=Запуск приложения на переднем плане. При любых действиях с приложением (клик, например) окно также выйдет на передний план.
WIN_PLUGIN_MAIN_WINDOW=Вы можете подключиться к уже запущенному приложению указав название его окна
WIN_PLUGIN_HEIGHT=Вы можете подключиться к уже запущенному приложению указав высоту и ширину его окна в пикселях. Для корректной работы надо указывать оба параметра.
WIN_PLUGIN_WIDTH=Вы можете подключиться к уже запущенному приложению указав ширину и высоту его окна в пикселях. Для корректной работы необходимо указывать оба параметра
WIN_PLUGIN_PID=Вы можете подключиться к уже запущенному приложению указав его PID (используйте диспетчер задач чтобы узнать PID приложения)
WIN_PLUGIN_CONTROL_KIND=Вы можете подключиться к уже запущенному приложению указав его ControlKind
WIN_PLUGIN_TIMEOUT=Указать время, в течении которого будет попытка подключения к уже запущенному приложению (в миллисекундах). По умолчанию 5 секунд.
WIN_PLUGIN_EXEC=Вы можете задать приложение для тестирования
WIN_PLUGIN_WORK_DIR=Вы можете задать рабочую папку, в которой находится тестируемое приложение
WIN_PLUGIN_ARGS=Вы можете задать параметры для запуска приложения
WIN_PLUGIN_RECTANGLE=Вы мжете получить ширину и высоту запущенного приложения, а также его координаты на экране
WIN_PLUGIN_TITLE=Вы мжете получить заголовок запущенного приложения
JNA_DRIVER_IMPL_INTERNAL_ERROR=internal error
JNA_DRIVER_IMPL_DLL_NOT_FOUND=Dll is not found
PROXY_WIN_GUI_APP_NEED_WINDOWS=This adapter needs Windows.
WIN_OPERATION_EXECUTOR_JNA_OWNER_NOT_FOUND=Owner was not found. Owner: 
WIN_OPERATION_EXECUTOR_JNA_TOO_MUCH_OWNERS=%d owners were found instead 1. Owner: 
WIN_OPERATION_EXECUTOR_JNA_TOO_MUCH_ELEMENTS=Found %d elements instead 1. Element : 
WIN_OPERATION_EXECUTOR_JNA_NO_PATH_IN_TREE=Path '%s' is not found in the tree.
WIN_OPERATION_EXECUTOR_JNA_UNSUPPORTED_ATTR_VALUE=Unsupported attribute value. Can use only : %s
WIN_OPERATION_EXECUTOR_JNA_CANT_SCROLL_TO_INDEX=Can't scroll to index %d. Child size : %d
WIN_OPERATION_EXECUTOR_JNA_INSIDE_CURRENT_COMPONENT=Inside current component found %d elements with name %d
WIN_OPERATION_EXECUTOR_JNA_RECTANGLE_PATTERN_EXCEPTION=returned rectangle not matches pattern %s , rect : %s
WIN_REMOTE_APP_JNA_PARAMETER_EMPTY_NULL=Parameter %s must be only of %s or empty/null
WIN_REMOTE_APP_JNA_PARAMS_MUST_BE_FILLED=At least one of params (MainWindow, ControlKind, Height, PID, Width) must be filled
WIN_REMOTE_APP_JNA_EXEC_CANT_BE_NULL=Exec can't be null or empty.
WIN_REMOTE_APP_JNA_WORKDIR_CANT_BE_NULL=WorkDir can't be null or empty.
WIN_REMOTE_APP_JNA_CURRENT_WINDOW_NOT_FOUND=Current window not found
WIN_REMOTE_APP_JNA_TOO_MUCH_MAIN_WINDOWS=Found more that one main windows : %d
WIN_REMOTE_APP_JNA_PARAM_MUST_BE_MORE_ZERO=Parameter %s must be from 0 to %s or empty/null
#endregion

#region plugins.app.swing
SWING_PLUGIN_DESCRIPTION=Плагин для тестирования приложений, написанных с помощью библиотеки Swing. Основан на базе библиотеки Fest.
SWING_PLUGIN_DIFFERENCE=Не может работать с ячейками таблицы как с независимыми элементами. Работает только с таблицей. {{`ApplicationCloseWindow не поддерживается.`}}{{`ApplicationConnectTo работает без изменений.`}}{{`ApplicationMove работает без изменений.`}}{{`ApplicationNavigate не поддерживается.`}}{{`ApplicationNewInstance не поддерживается.`}}{{`ApplicationRefresh не поддерживается.`}}{{`ApplicationResize работает без изменений.`}}{{`ApplicationSetProperties не поддерживается.`}}{{`ApplicationSwitchTo не поддерживается.`}}{{`DialogAlert работает без изменений.`}}{{`DialogSwitchToWindow не поддерживается.`}}
SWING_PLUGIN_LOG_LEVEL=Задаёт уровень логгирования для запущенного плагина. Рекомендуем использовать 'ALL' (используется по умолчанию)
SWING_PLUGIN_JRE_EXEC=Если вы хотите использовать версию JRE, отличную от используемой по умочанию, вы можете указать к ней путь.
SWING_PLUGIN_JRE_ARGS=Указывает параметры запуска плагина. Например, минимальный и максимальный размер памяти
SWING_PLUGIN_MAIN_CLASS=Вы можете указать выполняемый класс запускаемого тестируемого приложения
SWING_PLUGIN_JAR=Вы можете указать jar-файл для запуска тестируемого приложения
SWING_PLUGIN_ARGS=Вы можете задать параметры для запуска тестируемого приложения
SWING_PLUGIN_URL=Используется для скачивания приложения с помощью jnpl и его последующего запуска.
SWING_PLUGIN_TITLE=Вы можете получить заголовок запущенного тестируемого приложения
MATCHER_SWING_WRONG_XPATH=Wrong xpath: %s
SWING_OPERATION_EXECUTOR_UNABLE_TO_FIND_ELEMENT=Unable to find component 
SWING_OPERATION_EXECUTOR_ERROR_ON_FIND_INTO_TABLE=Error on find into table
SWING_OPERATION_EXECUTOR_COMPONENT_IS_DISABLED=Component %s is disabled.
SWING_OPERATION_EXECUTOR_MENU_ELEMENT_NOT_FOUND=The menu element was not found in path '%s'
SWING_OPERATION_EXECUTOR_PATH_NOT_FOUND_IN_THE_TREE=Path '%s' is not found in the tree.
SWING_OPERATION_EXECUTOR_COMBOBOX_IS_NOT_EDITABLE=ComboBox is not editable
SWING_OPERATION_EXECUTOR_COLUMN_NOT_FOUND=The column '%s' is not found. Possible values are: %s
SWING_OPERATION_EXECUTOR_DOESNT_HAVE_LIST_MODEL=Element %s doesn't have list model. Please try another element.
SWING_REMOTE_APP_CANT_INIT_APP=Can't initialize application
SWING_REMOTE_APP_SELF_IS_NOT_A_WINDOW=Self %s is not in a Window
SWING_REMOTE_APP_SELF_IS_NOT_DIALOG_OR_FRAME=Self %s is not in a Dialog or Frame
SWING_REMOTE_APP_USE_DIALOG_RESIZE=Can't resize. Please use width and height as parameters in action DialogResize for resizing current dialog.
#endregion

#region plugins.app.javafx
JAVAFX_PLUGIN_DESCRIPTION=JavaFX plugin description
JAVAFX_PLUGIN_DIFFERENCE=JavaFX plugin difference
JAVAFX_PLUGIN_LOG_LEVEL=JavaFX plugin log level
JAVAFX_PLUGIN_JRE_EXEC=JavaFX plugin jre exec
JAVAFX_PLUGIN_JRE_ARGS=JavaFX plugin jre args
JAVAFX_PLUGIN_MAIN_CLASS=JavaFX plugin main class
JAVAFX_PLUGIN_JAR=JavaFX plugin jar
JAVAFX_PLUGIN_ARGS=JavaFX plugin args
JAVAFX_PLUGIN_URL=JavaFX plugin url
JAVAFX_PLUGIN_TITLE=JavaFX plugin title
FX_OPERATION_EXECUTOR_ELEMENT_NO_ITEMS=Target element does not has items
FX_OPERATION_EXECUTOR_EXPAND_EXCEPTION=Path '%s' is not found in the tree.
FX_OPERATION_EXECUTOR_TEXT_EXCEPTION=ComboBox is not editable
FX_OPERATION_EXECUTOR_GET_TREE_EXCEPTION=Component is not instance of TreeView. Component : %s
FX_OPERATION_EXECUTOR_TEXT_TABLE_CELL_EXCEPTION=Cant set text to not text element
FX_OPERATION_EXECUTOR_NOT_TABLE=Target not instance of Table or TreeTable. Target : %s
FX_OPERATION_EXECUTOR_TARGET_IS_NOT_VISIBLE=Target %s is not visible
FX_REMOTE_APPLICATION_NOT_DIALOG_OR_WINDOW=Self %s is not dialog or window
FX_REMOTE_APPLICATION_IS_NOT_INIT_EXCEPTION=Application is not init
FX_REMOTE_APPLICATION_DIALOG_CANT_RESIZE=Dialog '%s' can't resize.
FX_REMOTE_APPLICATION_USE_DIALOG_RESIZE=Can't resize. Please use width and height as parameters in action DialogResize for resizing current dialog.
FX_TABLE_VIEW_TOOB_EXCEPTION=Can't get value for row %s because size of rows is %s
FX_TABLE_VIEW_GET_ROW_NULL_CONDITION=Cant find row via null condition
FX_TABLE_VIEW_GET_ROW_DUPLICATE_KEY=Duplicate key %s
FX_TABLE_VIEW_TOO_MANY_ROWS=Too many rows
FX_TABLE_VIEW_NO_ONE_ROWS=No one row was found
FX_TABLE_VIEW_COLUMN_TOOB_EXCEPTION=Can't get value for column %s because size of columns is %s
UTILS_FX_NO_ON_STAGES=No one stages was found
UTILS_FX_APP_WAS_CLOSED=Application was closed
#endregion

#endregion

######################################
## API part
######################################

#region api

#region api.app
#endregion

#region api.client
#endregion

#region api.common
PARAMETERS_KIND_LOAD=Параметры для работы с плагином
PARAMETERS_KIND_START=Параметры для запуска приложения
PARAMETERS_KIND_CONNECT=Параметры для подключения к уже запущенному приложению
PARAMETERS_KIND_STOP=Параметры для остановки запущенного приложения
PARAMETERS_KIND_GET_PROPERTY=Параметры, которые можно получить из запущенного приложения
PARAMETERS_KIND_SET_PROPERTY=Параметры, которые можно задать запущенному приложению
PARAMETERS_KIND_ENCODE=
PARAMETERS_KIND_PROPS=
PARAMETERS_KIND_NEW_INSTANCE=Создание нового экземпляра приложения
#endregion

#region api.conditions
#endregion

#region api.error

#region api.error.app
#endregion

#region api.error.client
#endregion

#region api.error.common
API_NULL_PARAMETER_EXCEPTION=Parameter %s is null
#endregion

#region api.error.service
#endregion

#endregion

#region api.service
#endregion

#endregion

######################################
## COMMON part
######################################

COMMON_VALUE=Value
COMMON_IS_NOT_FOUND=is not found
COMMON_CLIENT_IS_NOT_LOADED=The client %s is not loaded.
COMMON_CLIENT_FACTORY_IS_NOT_FOUND=The client factory with id %s is not found
COMMON_ACTION_NAME=actionName
COMMON_CHOOSE_SUB_CASE=Choose sub case from list
COMMON_RESULT_IS_NOT_BOOLEAN=Result is not type of Boolean
COMMON_ERROR_IN_EXPRESSION=Error in expression : %s
COMMON_ON=on
COMMON_OFF=off
COMMON_NAME=name
COMMON_SHIFT_NAME=Name
COMMON_DIALOG=Dialog
COMMON_ELEMENT=Element
COMMON_ERROR=Error
COMMON_JACKFISH=JackFish
COMMON_OPEN=Open
COMMON_CLOSE=Close
COMMON_YES=Yes
COMMON_NO=No
COMMON_COPY=Copy
COMMON_HELP=Help
COMMON_REMOVE=Remove
COMMON_RENAME=Rename
COMMON_WIZARD=Wizard
COMMON_ALL=All
COMMON_START=Start
COMMON_STOP=Stop
COMMON_PAUSE=Pause
COMMON_STEP=Step
COMMON_FIND=Find
COMMON_CONNECT=Connect
COMMON_ERROR_IN=Error in
COMMON_SAVE=Save
COMMON_SETTINGS=Settings
COMMON_GIT=Git
COMMON_JAR_FILTER=Jar files(*.jar)
COMMON_XML_FILTER=Xml files(*.xml)
COMMON_JF_FILTER=jf files (*.jf)
COMMON_NEW=New
COMMON_MATRIX=Matrix
COMMON_DICTIONARY=Dictionary
COMMON_CSV=CSV
COMMON_PARAMETER=Parameter
COMMON_ALL_FILES=All files
COMMON_CANCEL=Cancel
COMMON_SIZE=Size
COMMON_DATE=Date
COMMON_HIDDEN=Hidden
COMMON_IS_DIR=Is directory
COMMON_CLEAR=Clear
COMMON_CLASS=Class
COMMON_EXPRESSION=Expression
COMMON_RESULT=Result
COMMON_OK=Ok


