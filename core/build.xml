<!--
   Copyright (c) 2009-2015, Exactpro Systems, LLC
   Quality Assurance & Related Development for Innovative Trading Systems.
   All rights reserved.
   This is unpublished, licensed software, confidential and proprietary
   information which is the property of Exactpro Systems, LLC or its licensors.
  -->

<project name="JF" default="createTool">

	<property name="api.dir" location="../API"/>
	<property name="netx.dir" location="../NetXfixed"/>
	<property name="src.dir" location="src"/>
	<property name="test.dir" location="testsrc"/>
	<property name="build.dir" location="build"/>
	<property name="buildtest.dir" location="buildtest"/>
	<property name="testdata.dir" location="testdata"/>
	<property name="lib.dir" location="libs"/>
	<property name="version" value="4.2.0"/>
    <property name="revision" value="local_build"/>
	<property name="tool" location="tool"/>

	<target name="clean">
		<delete dir="${build.dir}"/>
		<mkdir dir="${build.dir}"/>
	</target>

	<path id="project.classpath">
		<fileset dir="${lib.dir}">
			<patternset includes="**/*.jar"/>
		</fileset>
		<fileset dir="${api.dir}/release">
			<patternset includes="**/*.jar"/>
		</fileset>
	</path>

	<target name="replace.version" depends="clean">
		<echo>Version: ${version}.${revision}</echo>
		<echo file="${src.dir}/com/exactprosystems/jf/common/version/version.properties">
			VERSION = ${version}.${revision}
		</echo>
	</target>

	<target name="build.api" depends="replace.version">
		<ant antfile="${api.dir}/build.xml" target="build" dir="${api.dir}">
		</ant>
	</target>

	<target name="build.netx" depends="build.api">
		<ant antfile="${netx.dir}/build.xml" target="build" dir="${netx.dir}">
		</ant>
	</target>
	
	<target name="compile" depends="build.netx">
		<javac srcdir="${src.dir}" destdir="${build.dir}" debug="on">
			<classpath refid="project.classpath"/>
		</javac>
		<copy todir="${build.dir}">
			<fileset dir="${src.dir}">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>

	<target name="build" depends="compile">
		<echo>jar building...</echo>
		<jar destfile="jackfish.jar" basedir="${build.dir}">
			<manifest>
				<attribute name="Version" value="${version}.${revision}"/>
				<attribute name="Main-Class" value="com.exactprosystems.jf.common.MainRunner"/>
				<attribute name="Class-Path" value="."/>
			</manifest>
			<zipfileset src="${api.dir}/release/api.jar"/>
			<zipfileset src="${lib.dir}/commons-cli-1.2.jar"/>
			<zipfileset src="${lib.dir}/commons-exec-1.1.jar"/>
			<zipfileset src="${lib.dir}/javacsv.jar"/>
			<zipfileset src="${lib.dir}/log4j-1.2.17.jar"/>
			<zipfileset src="${lib.dir}/mvel2-2.2.7.Final.jar"/>
		</jar>
	</target>

	<target name="buildAll" depends="build">
		<!--	apps	-->
		<delete dir="apps"/>
		<mkdir dir="apps"/>
		<ant antfile="../AppWeb/build.xml" target="distribute" dir="../AppWeb"/>
		<ant antfile="../AppWinGui/build.xml" target="distribute" dir="../AppWinGui"/>
		<ant antfile="../AppSwing/build.xml" target="distribute" dir="../AppSwing"/>

		<!--	clients	-->
		<delete dir="clients"/>
		<mkdir dir="clients"/>
		<ant antfile="../ClientDTS/build.xml" target="distribute" dir="../ClientDTS"/>
		<ant antfile="../ClientFIX/build.xml" target="distribute" dir="../ClientFIX"/>
		<ant antfile="../ClientTest/build.xml" target="distribute" dir="../ClientTest"/>

		<!--	services -->
		<delete dir="services"/>
		<mkdir dir="services"/>
		<ant antfile="../ServiceSailfish/build.xml" target="distribute" dir="../ServiceSailfish"/>
		<ant antfile="../ServiceMatrix/build.xml" target="distribute" dir="../ServiceMatrix"/>
	</target>

	<target name="createMock">
		<echo>create mock app</echo>
		<jar destfile="${testdata.dir}/resources/mock/mockapp.jar" basedir="${buildtest.dir}" includes="**/MockApp*">
			<manifest>
				<attribute name="Main-Class" value="org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader"/>
				<attribute name="Rsrc-Main-Class" value="com.exactprosystems.jf.MockApp"/>
				<attribute name="Class-Path" value="."/>
				<attribute name="Rsrc-Class-Path" value="."/>
			</manifest>
			<zipfileset src="${lib.dir}/jar-in-jar-loader.zip"/>
		</jar>
	</target>

	<target name="junit" depends="buildAll">
		<echo>junit tests...</echo>
		<delete dir="${buildtest.dir}"/>
		<mkdir dir="${buildtest.dir}"/>
		<delete dir="${testdata.dir}/reports"/>
		<mkdir dir="${testdata.dir}/reports"/>
		
		<javac srcdir="${test.dir}" destdir="${buildtest.dir}" debug="on">
			<classpath>
				<path refid="project.classpath"/>
				<path path="${build.dir}"/>
			</classpath>
		</javac>
		
		<copy todir="${buildtest.dir}">
			<fileset dir="${test.dir}">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
		<antcall target="createMock"/>
		<junit printsummary="yes" haltonfailure="yes" showoutput="true" dir=".">
			<classpath>
				<path refid="project.classpath"/>
				<path path="${build.dir}"/>
				<path path="${buildtest.dir}"/>
			</classpath>
			<formatter type="plain"/>

			<batchtest fork="yes" todir="${testdata.dir}/reports" >
				<fileset dir="${test.dir}">
					<include name="**/Auto*.java"/>
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="createTool" depends="junit">
		<delete dir="${tool}"/>
		<mkdir dir="${tool}"/>

		<copy todir="${tool}/apps"><fileset dir="apps"/></copy>
		<chmod perm="ugo+rx" dir="${tool}/apps/unix" includes="*.*"/>
		<copy todir="${tool}/clients"><fileset dir="clients"/></copy>
		<copy todir="${tool}/services"><fileset dir="services"/></copy>
		<copy todir="${tool}/sql"><fileset dir="sql"/></copy>
		<copy todir="${tool}/dic"><fileset dir="dic"/></copy>
		<copy todir="${tool}/docs"><fileset dir="docs"/></copy>
		<copy todir="${tool}/examples"><fileset dir="examples"/></copy>
		
		<copy file="uservars/myvars.ini" todir="${tool}/uservars"/>
		<copy file="jackfish.jar" todir="${tool}"/>
		<copy file="config.xml" todir="${tool}"/>
		<copy file="vars.ini" todir="${tool}"/>
		<copy file="run.bat" todir="${tool}"/>
		<copy file="run.sh" todir="${tool}"/>
		<chmod file="${tool}/run.sh" perm="ugo+rx"/>

		<delete dir="${tool}/apps/cache"/>

		<!-- build.zip -->
		<delete file="build.zip"/>
		<zip basedir="${tool}" destfile="build.zip"/>
		
		<!-- update.zip -->
		<delete file="update.zip"/>
		<delete  dir="${tool}" excludes="**/*.jar"/>
		<zip basedir="${tool}" destfile="update.zip"/>

		<!-- cleanup -->
		<delete dir="${tool}"/>
	</target>
</project>
