################################################################################
# Copyright (c) 2009-2018, Exactpro Systems LLC
# www.exactpro.com
# Build Software to Test Software
#
# All rights reserved.
# This is unpublished, licensed software, confidential and proprietary
# information which is the property of Exactpro Systems LLC or its licensors.
################################################################################


DEFAULT=
DRAG_N_DROP_LIST_TOOLTIP=Use drag-n-drop to reorder elements

#//region actions
DEFAULT_OUTPUT_DESCRIPTION=No output value.

#//region actions.app
APP_CONNECTION_NAME_DESCRIPTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application that the indicated action belongs to. The output value of such an action is as in {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
APP_CLOSE_WINDOW_GENERAL_DESCRIPTION=Plug-in dependent action. The purpose of the action is to close the currently active window of the application. When the application is a browser, the action closes the currently active tab.
APP_CLOSE_WINDOW_OUTPUT_DESCRIPTION=Returns the title bar of the window that was closed.
APP_CLOSE_WINDOW_EXAMPLES={{# \n#Id;#Action;$AppConnection\nACW;ApplicationCloseWindow;app\n#Assert;#Message\n!Str.IsNullOrEmpty(ACW.Out);'String is null or empty'#}}
APP_CONNECT_TO_GENERAL_DESC=A plug-in dependent action. The purpose of the action is to connect to the running application. The action requires some additional parameters which depend on the type of the plug-in used.
APP_CONNECT_TO_ADDITIONAL_DESC=The parameters are determined by the chosen plug-in. For example, the available parameters for win.jar are the following:{{` {{$Main window$}} - a text string to search for the window of the application to connect to.`}}{{` {{$Height$}} - the height of the window.`}} {{` {{$Width$}} - the width of the window.`}} The parameters can be chosen in the dialog window opened with the context menu of this action in the {{$'All parameters'$}} option.
APP_CONNECT_TO_OUTPUT_DESC=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application that the indicated action belongs to. It should be created with an active {{$'Global'$}} flag.
APP_CONNECT_TO_EXAMPLE={{##Id;#Action;$AppId;ControlKind;AlwaysToFront;MainWindow;Timeout\nAPPSTR1;ApplicationConnectTo;'win';ControlKind.Panel;true;'WinTest';10000#}}
APPLICATION_CONNECT_TO_ID=An adapter key, one of those described in the {{$App entries$}} branch of the configuration, will be used to start the corresponding plug-in and to select the dictionary.
APPLICATION_CONNECT_TO_CONNECTION=A special object which identifies the started application session. If this parameter is not empty the reconnect is performed. The output value of such an action is as in {{@ApplicationStart@}}.
APP_GET_PROPERTIES_GENERAL_DESC=A plug-in dependent action. The purpose of the action is to get certain properties from the available connection.
APP_GET_PROPERTIES_ADDITIONAL_DESC=The parameters are determined by the chosen plug-in. {{`For example, additional parameters {{$Title$}} and {{$URL$}} are available for web plug-in. They are necessary to get the information about the title bar and the address respectively.`}} The parameters can be chosen in the dialog window opened via the context menu of this action in the {{$'All parameters'$}} option.
APP_GET_PROPERTIES_OUTPUT_DESC=An associative array which displays the names of the elements processed by the action along with properties received from the app.
APP_GET_PROPERTIES_EXAMPLE={{# \n#Id;#Action;URL;$AppConnection\nAGP1;ApplicationGetProperties;;app\n#Assert;#Message\n!Str.IsNullOrEmpty(AGP1.Out.URL);'String is null or empty'#}}
APPLICATION_GET_PROPERTIES_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application that the indicated action belongs to. The output value of such an action is as in {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
APP_MOVE_GENERAL_DESC=A plug-in depend action. This action is used for moving the main window.
APP_MOVE_EXAMPLE={{##Id;#Action;Exec;WorkDir;$AppId\nAPPSTR1;ApplicationStart;'C:/Windows/notepad.exe';'C:/Windows';'Win'\n#Action;$X;$Y;$AppConnection\nApplicationMove;100;100;APPSTR1.Out#}}
APPLICATION_MOVE_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application that the indicated action belongs to. The output value of such an action is as in {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
APPLICATION_MOVE_X=The X coordinate for moving the window.
APPLICATION_MOVE_Y=The Y coordinate for moving window.
APP_NAVIGATE_GENERAL_DESC=Navigating inside the application.
APP_NAVIGATE_ADDITIONAL_DESC=The parameters are determined by the chosen plug-in. {{`For example, an additional parameter {{$Navigate$}} is available for a web plug-in. It has two values {{$BACK$}} and {{$FORWARD$}} which help to move within the browser back and forward respectively.`}} The parameters can be chosen in the dialog window opened via the context menu of this action in the {{$'All parameters'$}} option.
APP_NAVIGATE_EXAMPLE={{# \n#Action;$Navigate;$Navigate;$AppConnection\nApplicationNavigate;NavigateKind.BACK;NavigateKind.FORWARD;app#}}
APPLICATION_NAVIGATE_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application that the indicated action belongs to. The output value of such an action is as in {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
APPLICATION_NAVIGATE_KIND=Where to navigate. See the additional field description.
APP_NEW_INSTANCE_GENERAL_DESC=A plug-in dependent action. The action is used to open new windows in the web browser.
APP_NEW_INSTANCE_ADDITIONAL_DESC=The parameters are determined by the chosen plug-in. For example, the available parameters for web.jar are the following: {{` {{$URL$}} - string. It defines the URL.`}} {{` {{$WhereOpen$}} - string. Set where the new application should be opened`}} The parameters can be chosen in the dialog window opened via the context menu of this action in the {{$'All parameters'$}} option.
APP_NEW_INSTANCE_EXAMPLE={{##Action;$AppConnection;URL;WhereOpen\nApplicationNewInstance;APPSTR1.Out;'https://www.google.com';'OpenNewUrl'#}}
APPLICATION_NEW_INSTANCE_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application the indicated action belongs to. The output value of such an action is as in {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
APP_REFRESH_GENERAL_DESC=A plug-in dependent action. The purpose of the action is to refresh the application window. It should be used only with the web plug-in.
APP_REFRESH_EXAMPLE={{# \n#Action;$AppConnection\nApplicationRefresh;app#}}
APPLICATION_REFRESH_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application that the indicated action belongs to. The output value of such an action is as in {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
APP_RESIZE_GENERAL_DESC=The purpose of the action is to change the window size of the application under test.
APP_RESIZE_EXAMPLE=Example 1.{{##Action;$AppConnection;$Width;$Height\nApplicationResize;app;1000;1000#}}  \nExample 2.{{##Action;$AppConnection;$Resize\nApplicationResize;APPSTR1.Out;Resize.Maximize#}}
APPLICATION_RESIZE_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application the indicated action belongs to. The output value of such an action is as in {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
APPLICATION_RESIZE_HEIGHT=The window height is changed to the specified height.
APPLICATION_RESIZE_WIDTH=The window width is changed to the specified width.
APPLICATION_RESIZE_RESIZE=A type of resizing. It must be Resize.Maximize, Resize.Minimize or Resize.Normal
APP_SET_PROPERTIES_GENERAL_DESC=A plug-in dependent action. The purpose of the action is to set certain properties into the available connection.
APP_SET_PROPERTIES_ADDITIONAL_DESC=The parameters are determined by the chosen plug-in. {{`For example, additional parameters {{$CookieAdd$}} and {{$CookieRemove$}} are available for the web plug-in. They are necessary to add and to remove a cookie respectively.`}} The parameters can be chosen in the dialog window opened via the context menu of this action in the {{$'All parameters'$}} option.
APP_SET_PROPERTIES_EXAMPLE={{# \n#Id;#Action;$AppId;Browser;URL\nAPPSTR1;ApplicationStart;'WEB';'Chrome';'https://google.com'\n#Action;$AppConnection;URL\nApplicationSetProperties;APPSTR1.Out;'https://translate.google.com'#}}
APPLICATION_SET_PROPERTIES_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application that the indicated action belongs to. The output value of such an action is as in {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
APP_START_GENERAL_DESC=The purpose of the action is to launch the application under test. The type of the application is determined by the chosen plug-in (see also {{@GUI plug-ins@}}). The action requires some additional parameters, which depend on the type of the plug-in used. The parameters are not mandatory from the standpoint of the tool itself, but they are required for the plug-in to launch the application correctly.
APP_START_ADDITIONAL_DESC=The structure and the meaning of the parameters depend on the plug-in used. For example, web.jar requires the following list {{` {{$Browser$}} - the browser in which the web application is started, `}} {{` {{$URL$}} - the Internet link to the application server. `}} In order to avoid errors in writing these additional parameters, the user can add them by using the matrices editor accessible via the 'All parameters...' context menu after the {{$AppId$}} parameter has been filled (and is filled by the constant string).
APP_START_OUTPUT_DESC=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application that the indicated action belongs to. For example, in order to shut down the application under test and to free its resources via the {{$ApplicationStop$}} action, the user must pass a valid object to this action which was received from the {{$ApplicationStart$}} action.
APP_START_EXAMPLE=As a rule, {{$ApplicationStart$}} is placed in one of the initial TestCases where initialization is performed. Therefore, it requires that the {{$Global$}} flag be set, as access to the output value is necessary within the whole matrix rather than just within the {{$TestCase$}} containing the action. {{# \n#Id;#Global;#Action;$AppId;Browser;URL\nAPPSTR1;1;ApplicationStart;'WEB';Browser;Env1#}} It is a standard using this action with the web.jar plugin.
APPLICATION_START_APP_ID=An adapter key, one of those described in the App entries branch of the configuration, that will be used for starting the corresponding plug-in and selecting the dictionary. The plug-in, in its turn, will start the application under test using the transferred parameters. If no record is found in a configuration for the corresponding {{$AppId$}}, the action will result in an error.
APP_STOP_GENERAL_DESC=The purpose of the action is to close the application under test. As a rule, ApplicationStop is placed in one of the last TestCases to stop the application initialized in {{@ApplicationStart@}} or {{@ApplicationConnectTo@}}. The {{$'Global'$}} flag (named 'G') should be set in the {{@ApplicationStart@}} or {{@ApplicationConnectTo@}} actions.
APP_STOP_EXAMPLE={{# \n#Action;$AppConnection\nApplicationStop;app#}}
APPLICATION_STOP_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application that the indicated action belongs to. The output value of such an action is as in {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
APPLICATION_STOP_NEED_KILL=If true, the process will be killed
APP_SWITCH_TO_GENERAL_DESC=A plug-in dependent action. The purpose of the action is to switch the focus between windows/tabs of the web application.
APP_SWITCH_TO_ADDITIONAL_DESC=The parameters are determined by the chosen plug-in. {{`For example, additional {{$Title$}} and {{$URL$}} parameters are available for the web plug-in. They are necessary to get the information about the title bar and the address respectively.`}} The parameters can be chosen in the dialog window opened via the context menu of this action in the {{$'All parameters'$}} option.
APP_SWITCH_TO_OUTPUT_DESC=It returns the title bar of the window which gained the focus.
APP_SWITCH_TO_EXAMPLE={{# \n#Id;#Action;Title;$AppConnection\nAST;ApplicationSwitchTo;'Title';app\n#Assert;#Message\nStr.IsNullOrEmpty(AST.Out);'Title is null'#}}
APPLICATION_SWITCH_TO_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application that the indicated action belongs to. The output value of such an action is as in {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
APPLICATION_SWITCH_TO_SOFT_CONDITION=If the parameter value is true, the string in Title will be compared to the window title bar using the 'contains' principle. 
ACTIONS_HELPER_CHOOSE_APP_ERROR=Choose default application at first.
#//endregion

#//region actions.client
CLIENT_CHECK_FIELDS_GENERAL_DESC=The purpose of the action is to check message fields against the dictionary field set of the client.
CLIENT_CHECK_FIELDS_OUTPUT_DESC=True, if the message is correct.
CLIENT_CHECK_FIELDS_EXAMPLE={{`1.Load the client for FIX.`}}{{`2.Create a FIX message with a set key-value.`}}{{`3.Check the message.`}}{{# \n#Id;#Action;$ClientId\nCLLD1;ClientLoad;'FIX'\n#Id;#Action;PartyID;PartyIDSource;PartyRole;$MessageType\nMSGCR1;MessageCreate;'test';'1';3;'TestRequest'\n#Id;#Action;$MapMessage;$ClientConnection\nCLCHM1;ClientCheckFields;MSGCR1.Out;CLLD1.Out#}}
CLIENT_CHECK_FIELDS_MESSAGE=The message that it is required to check.
CLIENT_CHECK_FIELDS_CONNECTION=The connection derived from the ClientLoad action output.
CLIENT_CHECK_MESSAGE_GENERAL_DESC=The purpose of the action is to compare the message of the MapMessage type with the field set of the key-value type. The MapMessage is the output value of actions: {{@ClientCreateMapMessage@}}, {{@ClientDecode@}}, {{@ClientGetMessage@}}, {{@ClientSendMessage@}}. In the report, a chart will be formed with the Mismatched fields headline : consisting of columns {{$Name$}} and {{$Expected$}} + {{$Actual$}}. If there is inequality in the compared fields, the action fails. 
CLIENT_CHECK_MESSAGE_ADDITIONAL_DESC=In additional parameters, the names and values, which should be compared with MapMessage that is passed in parameter {{$ActualMessage$}}, are pointed out.
CLIENT_CHECK_MESSAGE_EXAMPLE={{`1. Load the client for FIX`}}{{`2. Create a FIX message with a key-value set.`}}{{`3. Check the message.`}} {{# \n#Id;#Action;$ClientId\nCLLD1;ClientLoad;'TestClient'\n#Id;#Action;$ClientId\nCLLD1;ClientLoad;'TestClient'\n#Id;#Action;PartyID;PartyIDSource;PartyRole;$MessageType\nMSGCR1;MessageCreate;'test';'1';3;'TestRequest'\n#Id;#Action;PartyID;$ActualMessage;$ExpectedMessageType;$ClientConnection\nCLMSGCHK1;ClientCheckMessage;'test';MSGCR1.Out;'TestRequest';CLLD1.Out#}}
CLIENT_CHECK_MESSAGE_CONNECTION=The connection derived from the ClientLoad action output.
CLIENT_CHECK_MESSAGE_ACTUAL=The message that it is required to compare.
CLIENT_CHECK_MESSAGE_MESSAGE_TYPE=The message type that is expected.
CLIENT_CLEAR_MESSAGES_GENERAL_DESC=The purpose of the action is to clear the list of all accepted client messages. Start of the client is not mandatory.
CLIENT_CLEAR_MESSAGES_EXAMPLE={{`1. Load the client for FIX.`}}{{`2. Clear the list of the client messages.`}}{{# \n#Id;#Action;$ClientId\nCLLD1;ClientLoad;'FIX'\n#Id;#Action;$ClientConnection\nCLCLM1;ClientClearMessages;CLLD1.Out#}}
CLIENT_CLEAR_MESSAGES_CONNECTION=The connection with the client derived from the {{@ClientLoad@}} action.
CLIENT_CONNECT_GENERAL_DESC=The purpose of the action is to connect the client to a specific socket. Usually the number of the socket comes from the service. \nLater the client will bring in and send messages through this socket.
CLIENT_CONNECT_EXAMPLE={{`1. Load the client for FIX.`}}{{`2. Connect the client to the port #10506.`}}{{# \n#Id;#Action;$ClientId\nCLLD1;ClientLoad;'TestClient'\n#Id;#Action;$ClientConnection;$Socket\nCLCNCT1;ClientConnect;CLLD1.Out;new java.net.Socket('127.0.0.1', 10506)#}}
CLIENT_CONNECT_ADDITIONAL_DESC=Additional parameters for the client connect. See avaliable options on help for the client
CLIENT_CONNECT_OUTPUT_DESC=True, if the connection was successful.
CLIENT_CONNECT_CONNECTION=The connection derived from the ClientLoad action output.
CLIENT_CONNECT_SOCKET=The port that will use the client.
CLIENT_COUNT_MESSAGES_GENERAL_DESC=The purpose of the action is to count the messages in which the field set conforms to the reported condition. Simple comparison conditions are passed in additional parameters. Complicated comparison conditions are indicated in the parameter Conditions.
CLIENT_COUNT_MESSAGES_OUTPUT_DESC=The number of messages which meet the requirements.
CLIENT_COUNT_MESSAGES_ADDITIONAL_DESC=Additional parameters that will be used in filtering messages. Each parameter must have a String type key and a Condition type value. See help for class Condition.
CLIENT_COUNT_MESSAGES_EXAMPLE={{`1. Load the client for FIX.`}}{{`2. Count the number of messages with the Name field and  the Value field .`}} {{# \n#Id;#Action;$ClientId\nCLLD1;ClientLoad;'FIX'\n#Id;#Action;$ClientConnection;$MessageType;Name\nCLCNT1;ClientCountMessages;CLLD1.Out;'*';'Value'#}}
CLIENT_COUNT_MESSAGES_CONDITIONS=The conditions in which the comparison will be carried out.
CLIENT_COUNT_MESSAGES_MESSAGE_TYPE=Message type. Use *  for any type of messages.
CLIENT_COUNT_MESSAGES_CONNECTION=The connection derived from the ClientLoad action output.
CLIENT_DECODE_GENERAL_DESC=The purpose of the action is to decode the message. Converts the byte array to a message. 
CLIENT_DECODE_OUTPUT_DESC=A converted message.
CLIENT_DECODE_EXAMPLE={{`1. Load the client for FIX.`}}{{`2. Create the message.`}}{{`3. Encode the message.`}}{{`4. Decode the message.`}} {{# \n#Id;#Action;$ClientId\nCLLD1;ClientLoad;'FIX'\n#Id;#Action;PartyID;$MessageType\nMSGCR1;MessageCreate;'test';'TestRequest'\n#Id;#Action;$MapMessage;$ClientConnection\nCLENC1;ClientEncode;MSGCR1.Out;CLLD1.Out\n#Id;#Action;$Array;$ClientConnection\nCLDEC1;ClientDecode;CLENC1.Out;CLLD1.Out#}} 
CLIENT_DECODE_ARRAY=A byte array which it is required to convert to a MapMessage.
CLIENT_DECODE_CONNECTION=The connection derived from the ClientLoad action output.
CLIENT_ENCODE_GENERAL_DESC=The purpose of the action is to encode the message. It converts the message to a byte array. Start of the client is not mandatory.
CLIENT_ENCODE_OUTPUT_DESC=A byte array.
CLIENT_ENCODE_EXAMPLE={{`1. Load the client for FIX.`}}{{`2. Create the message.`}}{{`3. Encode the message.`}} {{# \n#Id;#Action;$ClientId\nCLLD;ClientLoad;'FIX'\n#Id;#Action;PartyID;$MessageType\nMSGCR1;MessageCreate;'test';'TestRequest'\n#Id;#Action;$MapMessage;$ClientConnection\nCLENC1;ClientEncode;MSGCR1.Out;CLLD.Out#}}
CLIENT_ENCODE_MESSAGE=The MapMessage object that it is required to convert to a byte array.
CLIENT_ENCODE_CONNECTION=The connection derived from the ClientLoad action output.
CLIENT_GET_MESSAGE_GENERAL_DESC={{`The purpose of the action is to get the message that conforms to the required condition. The search of the message takes place in the message queue. If the message with the required conditions wasn't found, the search starts from the beginning of the queue because, during the search, new messages can appear in the queue.`}}{{`The search happens during the specified period of time, if the message is not found upon expiry of the time, the action fails.`}}
CLIENT_GET_MESSAGE_ADDITIONAL_DESC=The values, in accordance with which the search of the message will happen.
CLIENT_GET_MESSAGE_OUTPUT_DESC=The message or error, if the message was not found within the time limit.
CLIENT_GET_MESSAGE_EXAMPLE={{`1. Load the client for FIX.`}}{{`2. Find the message with the Value value and the Name name .`}}  {{# \n#Id;#Action;$ClientConnection;$MessageType;$MessageTimeout;$Remove\nCLGM1;ClientGetMessage;CLLD1.Out;'*';5000;true#}}
CLIENT_GET_MESSAGE_CONNECTION=The connection derived from the ClientLoad action output.
CLIENT_GET_MESSAGE_MESSAGE_TYPE=The type of message. Use *  for any type of messages.
CLIENT_GET_MESSAGE_CONDITIONS=The conditions upon which the message will be checked.
CLIENT_GET_MESSAGE_TIMEOUT=The time given to find the acceptable message.
CLIENT_GET_MESSAGE_REMOVE=Delete the found message.
CLIENT_LOAD_GENERAL_DESC=The purpose of the action is to load and initialize the connection with the Client. Later, the returned connection is used in such actions as {{@ClientStart@}}, {{@ClientStop@}}, {{@ClientDecode@}}, etc. Clients represent the entity which performs client- server functions. The client can send and get messages through the received TCP connection.
CLIENT_LOAD_OUTPUT_DESC=The connection with the Client.
CLIENT_LOAD_EXAMPLE={{`Load the client for FIX.`}} {{# \n#Id;#Action;$ClientId\nCLLD1;ClientLoad;'FIX'#}}
CLIENT_LOAD_ID=Id of the Client with which the connection should be made.
CLIENT_SEND_MAP_MESSAGE_GENERAL_DESC=The purpose of the action is to send messages through the established connection. Start of the client is mandatory. The client is aimed at converting messages to a specified type and sending them.
CLIENT_SEND_MAP_MESSAGE_EXAMPLE={{`1. Load the client for FIX.`}}{{`2. Create a message with the help of the MessageCreate method.`}}{{`3. Connect to the port #13000.`}}{{`4. Send the created message, test it preliminarily with the indication of CHECK - true in the  parameter.`}}{{# \n#Id;#Action;$ClientId\nCLLD1;ClientLoad;'TestClient'\n#Id;#Action;Address;Port;$ClientConnection\nCLSTRT1;ClientStart;'127.0.0.1';10506;CLLD1.Out\n#Id;#Action;$MessageType;PartyID\nMSGCR1;MessageCreate;'TestRequest';'test'\n#Action;$MapMessage;$ClientConnection\nClientSendMapMessage;MSGCR1.Out;CLLD1.Out#}}
CLIENT_SEND_MAP_MESSAGE_CONNECTION=The connection derived from the ClientLoad action output.
CLIENT_SEND_MAP_MESSAGE_MESSAGE=The message to send.
CLIENT_SEND_MAP_MESSAGE_CHECK=Message validation before sending. As a default - true.
CLIENT_SEND_MESSAGE_GENERAL_DESC=The purpose of the action is to create and send the message. Start of the client is mandatory.
CLIENT_SEND_MESSAGE_OUTPUT_DESC=The message that was created and sent.
CLIENT_SEND_MESSAGE_ADDITIONAL_DESC=The additional parameters are the name and value set that will be converted into a message type typical for the client.
CLIENT_SEND_MESSAGE_EXAMPLE={{`1. Load the client for FIX.`}}{{`2. Connect to the port #10555.`}}{{`3. Create and send the message, check it beforehand with the indication of CHECK - true in the  parameter.`}}{{# \n#Id;#Action;$ClientId\nCLLD1;ClientLoad;'TestClient'\n#Id;#Action;Address;Port;$ClientConnection\nCLSTRT1;ClientStart;'127.0.0.1';10506;CLLD1.Out\n#Id;#Action;$Check;PartyID;$ClientConnection;$MessageType\nCLSM1;ClientSendMessage;true;'test';CLLD1.Out;'TestRequest'#}}
CLIENT_SEND_MESSAGE_CONNECTION=The connection derived from the ClientLoad action output.
CLIENT_SEND_MESSAGE_MESSAGE_TYPE=The type of the created message.
CLIENT_SEND_MESSAGE_CHECK=Checks the validation before sending the message. As a default - true.
CLIENT_SEND_RAW_MESSAGE_EXAMPLE={{`1. Load the client for FIX.`}}{{`2. Connect to the port #10555.`}}{{`3. Create and send the raw message.`}}{{# \n#Id;#Let\nstr;'8=FIXT.1.1|9=91|35=A|34=1|49=SenderCompID|52=20170426-08:25:00.002'\n#Id;#Let\nstr;str + '|56=TargetCompID|98=0|108=1|141=Y|1137=9|10=131|'\n#Id;#Let\nbytes;str.replace('|', '\001').getBytes()\n#Id;#Action;$ClientId\nCLLD1;ClientLoad;'TestClient'\n#Id;#Action;$ClientConnection;$Socket\nCLCNCT1;ClientConnect;CLLD1.Out;new java.net.Socket('127.0.0.1', 10506)\n#Id;#Action;$ClientConnection;$Data\nCLSRM1;ClientSendRawMessage;CLLD1.Out;bytes#}}
CLIENT_SEND_RAW_MESSAGE_GENERAL_DESC=The purpose of the action is to send a byte array through the established connection without any preprocessing.  Start of the client is mandatory.
CLIENT_SEND_RAW_MESSAGE_CONNECTION=The connection derived from the ClientLoad action output.
CLIENT_SEND_RAW_MESSAGE_DATA=A byte array that will be sent 'as is'.
CLIENT_SET_PROPERTIES_ADDITIONAL_DESC=This is an additional name value set for the client.
CLIENT_SET_PROPERTIES_EXAMPLE={{`1. Load the client for FIX`}}{{`2. Set the value Value for the Name property`}} {{# \n#Id;#Action;$ClientId\nCLLD1;ClientLoad;'FIX'\n#Id;#Action;$ClientConnection;Name\nCLSP1;ClientSetProperties;CLLD1.Out;'Value'#}}
CLIENT_SET_PROPERTIES_GENERAL_DESC=The purpose of the action is to set properties to the client. The following properties are available: {{$SenderCompID$}}, {{$TargetCompID$}}, {{$MsgSeqNum$}}.
CLIENT_SET_PROPERTIES_CONNECTION=The connection derived from the ClientLoad action output.
CLIENT_START_GENERAL_DESC=The purpose of the action is to start the client. It establishes the connection with the remote service by using the mentioned address and the port, receives messages and adds them to the queue. If the UseHeartBeat parameter is shown as true in the customer setting, the client will automatically send  the heart beat with the interval which is also mentioned in the parameters of the client.
CLIENT_START_OUTPUT_DESC=True, if the client started successfully.
CLIENT_START_ADDITIONAL_DESC=The Address and Port parameters are indicated as additional parameters. Correspondingly, in their values, the address and the service port, with which the connection is required, are indicated.
CLIENT_START_EXAMPLE={{`1. Load the client for FIX.`}}{{`2. Start the client.`}}{{# \n#Id;#Action;$ClientId\nCLLD1;ClientLoad;'TestClient'\n#Id;#Action;$ClientConnection;Address;Port\nCLSTRT1;ClientStart;CLLD1.Out;'127.0.0.1';10506#}}
CLIENT_START_CONNECTION=The connection derived from the ClientLoad action output.
CLIENT_STOP_GENERAL_DESC=The purpose of the action is to stop a connectivity break with the service. Start of the client is mandatory.
CLIENT_STOP_EXAMPLE={{`1. Load the client for FIX.`}}{{`2. Start the client.`}}3. Stop the client.{{# \n#Id;#Action;$ClientId\nCLLD1;ClientLoad;'TestClient'\n#Id;#Action;$ClientConnection;Address;Port\nCLSTRT1;ClientStart;CLLD1.Out;'127.0.0.1';10506\n#Action;$ClientConnection\nClientStop;CLLD1.Out#}}
CLIENT_STOP_CONNECTION=The connection derived from the ClientLoad action output.
CLIENTS_HELPER_CHOOSE_CLIENT_ERROR=Choose a default client at first.
CLIENTS_HELPER_UNKNOWN_MESSAGE_TYPE=The message with message type='%s' is unknown.
CLIENTS_HELPER_UNKNOWN_FIELD_NAME=The field with name='%s' is unknown.
#//endregion

#//region actions.table
TABLE_CREATE_GENERAL_DESC=The purpose of the action is to create a table (object type {{$Table$}}). A Table object is set as a two-dimensional structure consisting of rows and columns. Row numeration starts with 0, columns are named. A Table object can be created with  {{@RawTable@}}, with actions {{@TableCreate@}} , {{@TableLoadFromFile@}} , {{@TableLoadFromDir@}} , {{@TableSelect@}} and method {{@Do.getTable()@}}. {{`|header1|header2|`}} {{`|value1 |value2 |`}} {{`|value1 |value2 |`}}
TABLE_CREATE_ADDITIONAL_DESC=Additional parameters are used to assign column titles. The value fields of the parameters are left empty.
TABLE_CREATE_OUTPUT_DESC=Table structure.
TABLE_CREATE_EXAMPLE={{`1.Create a table with the Name and Age columns .`}}{{`2. Verify that the created object has columns set initially.`}} \n{{# \n#Id;#Action;Name;Age\nTC;TableCreate;;\n#Assert;#Message\nTC.Out.getHeader(0)=='Name' && TC.Out.getHeader(1)=='Age';'Table is not correct'#}}
TABLE_ADD_COLUMNS_GENERAL_DESC=The purpose of this action is to add columns to the given table. It can be used if a table is created from different sources or if new columns are added to the given table.
TABLE_ADD_COLUMNS_EXAMPLES={{`1. Create a table with a Name column.`}}{{`2. Add the created Age column to the table (to row number 0).`}}{{`3. Verify that the table has columns Name and Age. `}}{{# \n#Id;#RawTable\nTC;Table\n@;Name\n0;\n#EndRawTable\n#Action;$Index;$Table;$Columns\nTableAddColumns;1;TC;{'Age'}\n#Assert;#Message\nTC.getHeader(0) == 'Name' && TC.getHeader(1) == 'Age';'Table is not correct'#}}
TABLE_ADD_COLUMNS_TABLE=A table for adding columns.
TABLE_ADD_COLUMNS_COLUMNS=An array of column titles' names.
TABLE_ADD_COLUMNS_INDEX=Row number for insertion. Numeration starts with 0. By default it will be inserted at end of the table.
TABLE_ADD_VALUE_EXAMPLE={{`1. Create a table with the Name and Age columns. Add a value into row 0 for the column Name. The cell in the Age column is left empty.`}}{{`2. Verify that the value in the first row of the Name column is equal to 'Mike', Age is equal to null. The Age Column is filled with a null value. `}}{{# \n#Id;#RawTable\nTC;Table\n@;Name;Age\n0;;\n#EndRawTable\n#Action;$Index;$Table;Name\nTableAddValue;0;TC;'Mike'\n#Assert;#Message\nTC.get(0).get('Name') == 'Mike' && TC.get(0).get('Age') == null;'Not equals'#}}
TABLE_ADD_VALUE_GENERAL_DESC=The purpose of this action is to add rows to the Table.
TABLE_ADD_VALUE_ADDITIONAL_DESC=The additional parameters are used to insert values, where a parameter name is a column name, and the parameter value - a cell value.
TABLE_ADD_VALUE_TABLE=A table for adding a row.
TABLE_ADD_VALUE_INDEX=A row index, where a new row is added. If it is a negative value, it will be inserted at the end of the table. Numeration starts with 0.
TABLE_COLUMN_AS_LIST_GENERAL_DESC=This action extracts one column of the table and returns it as a list of values.
TABLE_COLUMN_AS_LIST_OUTPUT_DESC=A list of strings.
TABLE_COLUMN_AS_LIST_EXAMPLE={{# \n#Id;#RawTable\nDATA2;Table\n@;A\n0;1\n1;2\n2;3\n3;4\n4;5\n#EndRawTable\n#Id;#Action;#Assert;$Table;$Column\nTBL2;TableColumnAsList;This.Out.size() == 5 && This.Result == Result.Passed && This.Out[0] == '1';DATA2;'A'#}}
TABLE_COLUMN_AS_LIST_TABLE=The table from which the column will be extracted.
TABLE_COLUMN_AS_LIST_COLUMN=The column name which will be extracted.
TABLE_COLUMN_AS_LIST_GET_VALUES=If true, returns values, otherwise, returns expressions.
TABLE_COLUMN_RENAME_GENERAL_DESC=The purpose of the action is to rename a column in the given table.
TABLE_COLUMN_RENAME_ADDITIONAL_DESC=The given column name is indicated in a parameter's name, a new column name - in a parameter's value.
TABLE_COLUMN_RENAME_TABLE=A table, in which to rename a column / columns.
TABLE_COLUMN_RENAME_EXAMPLE={{`1. Create a table with the Name and Age columns.`}}{{`2. Rename the Name column to FirstName.`}}{{`3. Verify that the new name is assigned to the column. `}}{{# \n#Id;#RawTable\nTC;Table\n@;Name;Age\n0;;\n#EndRawTable\n#Action;$Table;Name\nTableColumnRename;TC;'FirstName'\n#Assert;#Message\nTC.getHeader(0) == 'FirstName';'Values is not equals'#}}
TABLE_COMPARE_TWO_GENERAL_DESC=The purpose of this action is to compare two tables.
TABLE_COMPARE_TWO_EXAMPLE={{`1. Create a table with the Name and Age columns. Values Mike and 42 are put into the first table row, respectively.`}}{{`2. Create a table similar to the previous one. Add values Mike and 41 to the respective second table row columns.`}}{{`3. Compare the two tables.`}}Information about the differences (row number and columns titles, the values of which do not match) is reported as a result of this action in form of:{{`Differences`}}{{`# Expected Actual`}}{{`0 [ Name : Mike, Age : 42 ] [ Name : Mike, Age : 41 ]`}}{{`Age 42 41`}}{{`If tables have different column numbers, the distinctions in cells will be ignored and the information about all column titles is displayed.`}} {{# \n#Id;#RawTable\nTC;Table\n@;Name;Age\n0;Mike;42\n#EndRawTable\n#Id;#RawTable\nTC1;Table\n@;Name;Age\n0;Mike;41\n#EndRawTable\n#Id;#Action;$Expected;$Actual\nres;TableCompareTwo;TC;TC1#}}
TABLE_COMPARE_TWO_OUTPUT_DESC=A table as a result of comparison.
TABLE_COMPARE_TWO_ACTUAL=A table to be compared.
TABLE_COMPARE_TWO_EXPECTED=A table to be compared with.
TABLE_COMPARE_TWO_EXCLUDE=An array of column names excluded from comparison.
TABLE_COMPARE_TWO_IGNORE_ROWS_ORDER=Ignore row order.
TABLE_COMPARE_TWO_COMPARE_VALUES=If true, compare values, otherwise, compare the string representations of values.
TABLE_CONSIDER_COLUMN_AS_GENERAL_DESC=The purpose of the action is to convert string values stored in a table to a certain data type. \nTable Objects are filled with string values by default. The action is used when it is necessary to perform an action with data stored in a table not as a line but as one type of data given: {{$Integer$}}, {{$String$}}, {{$Boolean$}}, {{$Double$}}, {{$BigDecimal$}}, {{$Date$}}, and also {{$Expression$}} which is used to name cells which include expressions in MVEL. These expressions will be calculated when actions TableReport (if parameter ReportValues is used), TableSaveToFile (if parameter SaveValues is used), TableCompareTwo are performed.
TABLE_CONSIDER_COLUMN_AS_EXAMPLE={{`1. Create a table with the Name, Age and SalaryPerYear columns, and populate it with values.`}}{{`2. Set Integer as the data type for the Age column.`}}{{`3. Using the TableSelect action, select all rows with values of more than 25(int) in the Age column.`}}{{`4. Verify that TableConsiderColumnsAs is correct. `}}{{# \n#Id;#RawTable\nTC;Table\n@;Name;Age;SalaryPerYear\n0;Mike;42;12000 * 12\n1;John;32;25000*12\n2;Fred;21;7000*12\n#EndRawTable\n#Action;$Table;$Integer\nTableConsiderColumnsAs;TC;'Age'\n#Id;#Action;$Table;Age\nTS;TableSelect;TC;new NumberCondition('Age','>',25)\n#Action;$Expression;$Table\nTableConsiderColumnsAs;'SalaryPerYear';TS.Out\n#Assert;#Message\nTS.Out.size() == 2 && TS.Out.get(0).get('SalaryPerYear') == '144000';#}}
TABLE_CONSIDER_COLUMN_AS_TABLE=A table to be performed.
TABLE_CONSIDER_COLUMN_AS_STRING=Specifies an array of column names, where it is necessary to set a data type - String.
TABLE_CONSIDER_COLUMN_AS_BOOLEAN=Specifies an array of column names, where it is necessary to set a data type - Boolean.
TABLE_CONSIDER_COLUMN_AS_INTEGER=Specifies an array of column names, where it is necessary to set a data type - Integer.
TABLE_CONSIDER_COLUMN_AS_DOUBLE=Specifies an array of column names, where it is necessary to set a data type - Double.
TABLE_CONSIDER_COLUMN_AS_BIG_DECIMAL=Specifies an array of column names, where it is necessary to set a data type - BigDecimal.
TABLE_CONSIDER_COLUMN_AS_DATE=Specifies an array of column names, where it is necessary to set a data type - Date.
TABLE_CONSIDER_COLUMN_AS_EXPRESSION=Specifies an array of column names, where it is necessary to set a data type - Expression.
TABLE_CONSIDER_COLUMN_AS_GROUP=Specifies an array of column names, where it is necessary to set a data type - Group.
TABLE_CONSIDER_COLUMN_AS_HYPERLINK=Specifies an array of column names, where it is necessary to set a data type - Hyperlink.
TABLE_CONSIDER_COLUMN_AS_COLORED=Specifies an array of column names, where it is necessary to set a data type - Colored.
TABLE_EDIT_GENERAL_DESC=Edit the table via interaction with a user
TABLE_EDIT_ADDITIONAL_DESC=Values, where a parameter name is a table column name, and a parameter value - true, if it is allowed to edit.
TABLE_EDIT_EXAMPLE={{# \n#Id;#RawTable \nTC;Table \n@;Name;Age;City \n0;Mike;25;London \n1;Jane;21;Moscow \n2;Ann;19;France \n#EndRawTable \n \n#Action;$Table;$Title;Name;Age;City \nTableEdit;TC;'Title';true;false;true \n \n#Action;$Table;$Title \nTableReport;TC;'table after edit' \n \n #}}
TABLE_EDIT_OUTPUT_DESC=Returns true if the user pushed the Ok button.
TABLE_EDIT_TITLE=The title of user input dialog.
TABLE_EDIT_TABLE=A table to be edited.
TABLE_GET_ROW_INDEXES_GENERAL_DESC=This action is used for searching for suitable row numbers in the given table. It can be applied when it is necessary to get all indexes of such rows.
TABLE_GET_ROW_INDEXES_ADDITIONAL_DESC=Columns containing the data which defines the search conditions. The column title is given in the parameter's value. In the value, it is necessary to specify the content defining the search.
TABLE_GET_ROW_INDEXES_OUTPUT_DESC=Outputs the index list matching the conditions.
TABLE_GET_ROW_INDEXES_EXAMPLE={{# \n#Id;#RawTable \nTC;Table \n@;Name;Column \n0;Mike;2 \n1;John;32 \n2;Fred;2 \n3;Mike;1 \n4;Angel;10 \n5;John;40 \n#EndRawTable \n \n#Action;$Table;$Integer \nTableConsiderColumnsAs;TC;'Column' \n \n#Id;#Action;$Table;Column;Name \nTBLIDX1;TableGetRowIndexes;TC;new NumberCondition('Column','>',2);'John' \n \n#Assert;#Message \nTBLIDX1.Out == [1,5]; \n \n#}}
TABLE_GET_ROW_INDEXES_TABLE=The table in which row search is performed.
TABLE_LEFT_JOIN_GENERAL_DESC=The purpose of the action is to join tables as in SQL Left Join.
TABLE_LEFT_JOIN_ADDITIONAL_DESC=Additional parameters are used to assign column titles.
TABLE_LEFT_JOIN_OUTPUT_DESC=Table structure.
TABLE_LEFT_JOIN_EXAMPLE={{`1. Create a table with the Name and Language columns. Populate it with a few rows.`}}{{`2. Create a table with the Name and CityId columns. Populate it with a few rows.`}}{{`3. Use Left Join choosing rows from the first table on condition: matching column Name. `}}{{# \n#Id;#RawTable \nCity;Table \n@;id;Name;Language \n0;1;London;us \n1;2;Moscow;ru \n2;3;France;fr \n#EndRawTable \n \n#Id;#RawTable \nPerson;Table \n@;Name;CityId \n0;Andrey;1 \n1;Victor;2 \n2;Aleksander;1 \n3;Valery;4 \n4;Kate;3 \n#EndRawTable \n \n#Id;#Action;$Condition;$LeftTable;$LeftAlias;  \n$RightTable;$RightAlias;CityName;Language \nTBLJN1;TableLeftJoin;'person.CityId == city.id';  \nPerson;'person';City;'city';'city.Name';'city.Language' \n \n#Action;$Table;$Title \nTableReport;TBLJN1.Out;'title'#}}
TABLE_LEFT_JOIN_RIGHT_TABLE=A table, the rows of which matched the condition.
TABLE_LEFT_JOIN_LEFT_TABLE=A table,  the rows of which are selected according to the condition.
TABLE_LEFT_JOIN_RIGHT_ALIAS=Alias for the right table rows.
TABLE_LEFT_JOIN_LEFT_ALIAS=Alias for the left table rows.
TABLE_LEFT_JOIN_CONDITION=The condition under which a row sample is made.
TABLE_LOAD_FROM_DIR_GENERAL_DESC=The purpose of the action is to get the directory structure as a Table object. It can be used to check the required files in this directory.
TABLE_LOAD_FROM_DIR_OUTPUT_DESC=A table which consists of the following columns: Name, Size, Date, Is directory, Hidden. Each table row contains data corresponding to a file/folder in this directory. If it points to a null directory or file, a Table object is created without any columns or rows. If it is directed to an empty directory, a table is created with column titles and 0 rows.
TABLE_LOAD_FROM_DIR_EXAMPLE={{`1. Create a table with information about files/folders in the Home directory.`}} \n{{# \n#Id;#Action;$Dir\nTBLD1;TableLoadFromDir;System.getProperty('user.home')#}}
TABLE_LOAD_FROM_DIR_DIRECTORY=Path to the directory. It's not permitted to use paths with metacharacters (wildcard).
TABLE_LOAD_FROM_FILE_GENERAL_DESC=The purpose of the action is to create a table from a csv. {{`{{$CSV$}} (Comma-Separated Values) file - a text format for displaying the table data. Specification: Each file row is a table row. The first row contains column titles.`}}
TABLE_LOAD_FROM_FILE_OUTPUT_DESC=If the file is not found, the Table object is not created.
TABLE_LOAD_FROM_FILE_EXAMPLE={{`1. Upload the table from a testTable.csv file divided internally with '|'. Verify that the table is downloaded correctly.`}}{{# \n#Id;#Action;#Assert;$File;$Delimiter\nTLFF;TableLoadFromFile;TLFF.Out.size() > 0;'PathToFile/testTable.csv';'|'#}}
TABLE_LOAD_FROM_FILE_FILE=A path to the file
TABLE_LOAD_FROM_FILE_DELIMITER=Any symbol that divides the values in the file. By default ',' is accepted.
TABLE_REMOVE_COLUMNS_GENERAL_DESC=The purpose of this action is to delete columns in the given table (a Table-type Object). Can be used to correct the table.
TABLE_REMOVE_COLUMNS_EXAMPLE={{`1. Create a table with columns Name, Age, Gender, Salary`}}{{`2. Delete columns Name, Age, Gender in the given table.`}}{{`3.Verify that headings are deleted. `}}{{# \n#Id;#RawTable\nTC;Table\n@;Name;Age;Gender;Salary\n0;;;;\n#EndRawTable\n#Action;$Table;$Columns\nTableRemoveColumns;TC;{'Name','Age','Gender'}\n#Assert;#Message\nTC.getHeader(0) == 'Salary';#}}
TABLE_REMOVE_COLUMNS_TABLE=The table, the columns of which are to be deleted.
TABLE_REMOVE_COLUMNS_COLUMNS=An array of column names to delete.
TABLE_REMOVE_ROW_GENERAL_DESC=This action is used to delete a selected row in the given table.
TABLE_REMOVE_ROW_OUTPUT_DESC=True, if removal is successful
TABLE_REMOVE_ROW_EXAMPLE={{` 1. Create a table with the Name and Age columns. Add two rows with data to the table. `}}{{` 2. Delete the first row in the table (the row with index 0). `}}{{` 3. Verify that the first row was deleted and was replaced with the row containing data about Anna. `}}{{# \n#Id;#RawTable\nTC;Table\n@;Name;Age\n0;Mike;25\n1;Anna;20\n#EndRawTable\n\n#Id;#Action;$Table;$Index\nTBLRR1;TableRemoveRow;TC;0\n#Assert;#Message\nTC.get(0).get('Name') == 'Anna' && TC.size() == 1;'Table is not correct'#}}
TABLE_REMOVE_ROW_TABLE=A table where a line needs to be deleted.
TABLE_REMOVE_ROW_ROW=A row number for deletion. If the value is negative, the last row will be deleted. Numeration starts with 0.
TABLE_REPLACE_GENERAL_DESC=This action is used to replace cell values, if the value is equal to the given one or complies with a regular expression.
TABLE_REPLACE_EXAMPLE={{`1. Create a table with the Name and Age columns. Add four rows with data about Mike, Anna, John, Bruce.`}}{{`2. Replace all that comply with Regexp with 'passed'.`}}{{`3. Verify if everything is correct.`}} {{# \n#Id;#RawTable\nTC;Table\n@;Name;Mail\n0;John;c0nst@money.simply.net\n1;Mike;somebody@dev.com.ua\n2;Bruce;Name.Sur_name@gmail.com\n3;Anna;user33@somewhere.in.the.net\n#EndRawTable\n#Id;#Let\nrgxp;'[a-zA-Z]{1}(\\w|\\.)+@(\\w)+\\.((net)|(com))'\n#Action;$Regexp;$Replace;$Table;$Columns\nTableReplace;rgxp;'passed';TC;'Mail'\n#Action;$Table;$Title\nTableReport;TC;'Result'\n#Assert;#Message\nTC.get(0).get('Mail')!='passed' && TC.get(1).get('Mail')!='passed' && TC.get(2).get('Mail')=='passed' && TC.get(3).get('Mail')!='passed';'Assert!'#}}
TABLE_REPLACE_TABLE=The table, where it is necessary to replace values.
TABLE_REPLACE_COLUMNS=An array of column titles, where it is necessary to change values.
TABLE_REPLACE_REPLACE=The replacing value.
TABLE_REPLACE_SEARCH=If a cell value or a part of a cell is equal to this value, the cell will be replaced. It is ignored if you set Regexp.
TABLE_REPLACE_REGEXP=If a cell value complies with this regular expression, it will be replaced.
TABLE_REPLACE_MATCH_CELL=If the value is true, the whole cell will be replaced, otherwise, only the part of the cell that complies will be replaced. It is used only when setting the Search parameter and is ignored when setting Regexp.
TABLE_REPORT_GENERAL_DESC=This action is used to output the table to a report.
TABLE_REPORT_ADDITIONAL_DESC=Columns containing the data which defines the outgoing columns. The column title is given in the parameter's name. In the value of the parameter, it is necessary to specify the new name for the column in the report.
TABLE_REPORT_EXAMPLE={{` 1. Create a test case with a Test id.`}}{{` 2. Create a table with the Name and Age columns. Add values to the first row of the table.`}}{{` 3. Output the table into the report only with the Age column, before the test case with a Test id.`}} {{# \n#Id;#TestCase;#Kind;#Depends;#For\nTest;;;;\n#Id;#RawTable\nTC;Table\n@;Name;Age\n0;Mike;25\n#EndRawTable\n#Action;$BeforeTestCase;$Table;$Title;$Columns\nTableReport;'Test';TC;'Table title';{'Age' : 'Age of person'}#}}
TABLE_REPORT_TABLE=A table for outputing into a report.
TABLE_REPORT_TITLE=The title of the output table.
TABLE_REPORT_TO_REPORT=This parameter is used for directing the output from the given object to the external report created by the {{@ReportStart@}} action.
TABLE_REPORT_COLUMNS=An array or map of column titles to be output into the report.
TABLE_REPORT_WIDTHS=An array of integers which define the widht of each column.
TABLE_REPORT_BEFORE_TEST_CASE=Allows to output the table to the highest level of the report.
TABLE_REPORT_REPORT_VALUES=If the value is false, the value from the cell is output, if the value is true, the expression result is output. Applicable for the cells of the Expression type, see {{@TableConsiderColumnAs@}}.
TABLE_REPORT_WITH_NUMBERS=If the value is true, the column with the row numbers is output.
TABLE_SAVE_TO_FILE_GENERAL_DESC=This action is used to save a table to a csv file. {{`CSV (Comma-Separated Values)`}} is a text format, used for displaying data from the table.Specification: Each row in the file is one row from the table. The first row contains column titles.
TABLE_SAVE_TO_FILE_OUTPUT_DESC=True, if saved successfully.
TABLE_SAVE_TO_FILE_EXAMPLE={{` 1. Create a table with the Name and Age columns. `}}{{` 2. Add values to the first row of the table. `}}{{` 3. Save the table into a dest.csv. file `}}{{# \n#Id;#RawTable\nTC;Table\n@;Name;Age\n0;Mike;25\n#EndRawTable\n#Id;#Action;$Table;$File\nTSTF;TableSaveToFile;TC;'dest.csv'\n#Assert;#Message\nTSTF.Out;'Table was not saved'#}}
TABLE_SAVE_TO_FILE_TABLE=A table to be saved to a file
TABLE_SAVE_TO_FILE_FILE_NAME=Path name to the target file where the table will be saved. 
TABLE_SAVE_TO_FILE_DELIMITER=Any character that separates the columns in the file. The default is ','
TABLE_SAVE_TO_FILE_SAVE_VALUES=If the value is false, the value from the cell is saved, if the value is true, the expression result is saved. Applicable for the cells of the Expression type, see {{@TableConsiderColumnAs@}}.
TABLE_SELECT_GENERAL_DESC=This action is used for extracting rows from the given table and creating a new table with these rows. It can be applied when it is necessary to get only a part of data from the table. Row extraction is done according to the content which is specified in the additional parameters.
TABLE_SELECT_ADDITIONAL_DESC=The columns containing the data which defines the selection. The column title is given in the parameter's value. In the value, it is necessary to specify the content which defines the selection.
TABLE_SELECT_OUTPUT_DESC=Outputs the table containing the selected rows.
TABLE_SELECT_EXAMPLE={{`Example #1:`}} \n{{`1. Create a table with the Name and Age columns. Complete the table with 3 rows.`}} \n{{`2. Set the data type to Integer for the Age column.`}} \n{{`3. With the TableSelect action, select all rows with the value 'Mike' in the Name column.`}} \n{{`4. Verify that the size of the table is equal to 1. `}} \n{{# \n#Id;#RawTable\nTC;Table\n@;Name;Age\n0;Mike;42\n1;John;42\n2;Fred;21\n#EndRawTable\n#Action;$Table;$Integer\nTableConsiderColumnsAs;TC;'Age'\n#Id;#Action;$Table;$Age\nTS;TableSelect;TC;new StringCondition('Name','Mike')\n#Assert;#Message\nTS.Out.size() == 1;'Assert!'#}} \n{{`Example #2:`}} \n{{`1. Create a table with the Name and Age columns. Complete the table with 3 rows.`}} \n{{`2. Set the data type to Integer for the column Age.`}} \n{{`3. With the action TableSelect select all lines where the column values Age are more than 20`}} \n{{`4. Verify that the size of the table is equal to 2. `}} \n{{# \n#Id;#RawTable \nTC;Table \n@;Name;Age \n0;Mike;42 \n1;John;34 \n2;Fred;21 \n#EndRawTable \n#Action;$Table;$Integer \nTableConsiderColumnsAs;TC;'Age' \n#Id;#Let \ncondition; new AndCondition(new NumberCondition('Age','>',20)) \n#Id;#Action;$Table;$Age \nTS;TableSelect;TC;condition \n#Assert;#Message \nTS.Out.size() == 2;#}} \n
TABLE_SELECT_TABLE=The table from which rows are selected
TABLE_SET_VALUE_GENERAL_DESC=This action is used to set values in the cells of the given table.
TABLE_SET_VALUE_ADDITIONAL_DESC=Set values for all cells in the given row. Each parameter name sets the column title, where the value is set. The value of the corresponding parameter sets the value of the column.
TABLE_SET_VALUE_EXAMPLE={{`1. Create a table with the Name and Age columns. Add values to the first row of the table.`}}{{`2. Set values 'John' and '42'  in the first row of the Name and Age columns.`}}{{`3. Verify that the new values are inserted correctly. `}}{{# \n#Id;#RawTable\nTC;Table\n@;Name;Age\n0;Mike;25\n#EndRawTable\n#Action;$Table;$Index;Name;Age\nTableSetValue;TC;0;'John';'42'\n#Assert;#Message\nTC.get(0).get('Name') == 'John'&& TC.get(0).get('Age') == '42' && TC.size() == 1;'Assert!'#}}
TABLE_SET_VALUE_TABLE=The table to be changed.
TABLE_SET_VALUE_INDEX=Row number for setting the value. Numeration starts with 0.
TABLE_SORT_GENERAL_DESC=This action is used to sort the table by the given column.
TABLE_SORT_OUTPUT_DESC=Returns the original table, sorted.
TABLE_SORT_EXAMPLE={{` 1. Create a table with the Name and Age columns. Complete the table with 3 rows.`}}{{`2. Do top-down sorting in the Age column.`}}{{`3. Output the sorted table to report. `}}{{# \n#Id;#RawTable\nTC;Table\n@;Name;Age\n0;Mike;42\n1;John;57\n2;Anna;21\n#EndRawTable\n#Action;$Ascending;$ColumnName;$Table\nTableSort;false;'Age';TC\n#Action;$Table;$Title\nTableReport;TC;'Table title'#}}
TABLE_SORT_TABLE=The sorted table.
TABLE_SORT_COLUMN_INDEX=The column title that defines the table sorting.
TABLE_SORT_ASCENDING=The sorting type: true - ascending order sorting, false - descending order sorting. By default - true.
TABLE_SORT_IGNORE_CASE=If this ignoreCase is true - sorting will ignore case considerations. Only available for strings.
TABLE_UNION_GENERAL_DESC=This action is used to add all rows from one table to the end of another one. With the table merge, the Main Table columns have priority, that means that merging with the table with more columns, the extra ones will be ignored. In case of adding the table with not enough columns from the main one, the values in the missing columns will be null.
TABLE_UNION_EXAMPLE={{# \n#Id;#RawTable \nmain;Table \n@;Name;Age;Gender \n0;Mike;42;Male \n1;Anna;21;Female \n#EndRawTable \n \n#Id;#RawTable \nadditional;Table \n@;Name;Age \n0;Fred;28 \n1;Carl;10 \n#EndRawTable \n \n#Action;$UnitedTable;$MainTable \nTableUnion;additional;main \n \n#Action;$Table;$Title \nTableReport;main;'dfdf' \n \n#Id;#RawTable \nexpected;Table \n@;Name;Age;Gender \n0;Mike;42;Male \n1;Anna;21;Female \n2;Fred;28; \n3;Carl;10; \n#EndRawTable \n \n#Id;#Action;$Expected;$Actual \nTBLCMP1;TableCompareTwo;expected;main \n \n#}}
TABLE_UNION_MAIN_TABLE=The table adding rows.
TABLE_UNION_UNITED_TABLE=The table with the rows that will be added to the main table
#//endregion

#//region actions.gui
DESKTOP_SCREENSHOT_GENERAL_DESC=The purpose of the action is to capture the full screenshot along with the desktop. \nThis gives the user the advantage to see system notifications of third-party applications. The disadvantage is that the screenshot is captured on the 'upper layer', i.e the events/windows overlapped by other windows will not be seen.
DESKTOP_SCREENSHOT_OUTPUT_DESC=The image grabbed from the desktop.
DESKTOP_SCREENSHOT_EXAMPLE={{# \n#Id;#Action;$Description\nDSK1;DesktopScreenshot;'My desktop'#}}
DESKTOP_SCREENSHOT_DESCRIPTION_PARAM=The description of the image which will be displayed in the tooltip.
DIALOG_ALERT_GENERAL_DESC=The purpose of this action is to process pop-up notifications. \nIt is a plug-in dependent action currently being used only with the web plug-in.
DIALOG_ALERT_OUTPUT_DESC=The output value is the notification heading.
DIALOG_ALERT_EXAMPLE={{`1. Type 'hello' in the pop-up notification field`}}{{`2. Ensure we have the notification heading as the output value.`}}{{# \n#Id;#Action;$Text;$Perform;$AppConnection\nDLGALRT1;DialogAlert;'hello';PerformKind.Accept;APPSTR1.Out\n#Assert;#Message\nDLGALRT1.Out != null;'The notification heading is not getted'#}}
DIALOG_ALERT_APP_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application that the indicated action belongs to. The output value of such an action is as in {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
DIALOG_ALERT_PERFORM_KIND=A PerformKind type. The parameter responsible for actions with alert.  There are 3 states to the parameter: \nNothing - ignore the notification. \nAccept - click 'OK'. \nDismiss - click 'Cancel'.
DIALOG_ALERT_TEXT=Used to input text into the corresponding field of the notification.
DIALOG_CHECK_LAYOUT_GENERAL_DESC=The following action is needed to check the structure of the dialog elements in the form. It helps to verify the reorganization of the forms of agile applications forms. For example, a change of resolution, the screen layout (vertical/horizontal), etc. You can also verify the adjustment of elements related to one another, the visibility of elements, and their sizes. The action uses its dictionary, in which forms, their elements and algorithms for finding them on the screen are described. The chosen application 'knows' about its dictionary and allows to operate interactively with it - to choose a dialog from the list and to choose those elements that will be used by the user via the 'All parameters' context menu. When you run this action, it gets the information related to the dictionary from the connection with the application (AppConnection). Running the action starts with processing of the 'OnOpen' section of the chosen dialog. If there are some elements in this section, the action will be applied to all of them one by one, by default. Usually, the Wait element is found here; it waits for the main container of the form to appear on the screen. In some cases (when the user is sure that there is a form on the screen), processing of this section can be turned off by setting the DoNotOpen parameter to true. This parameter is false by default. The same happens when closing the form - the OnClose section is processed. Usually the Wait element is found here; it waits for the main container of the form to become invisible. It is possible to stop processing this section by setting the DoNotClose parameter. The main work is done in the dictionary's Run section of the dialog. All the identified elements (that have the Id attribute) from this section can be used when dealing with DialogCheckLayout. The name of the element is set as the name of the parameter. The elements of the form are processed according to this action. If an element is not virtual (for example, Wait), it should be found on the screen, then its sequence that was set by the parameter is processed. The DoSpec action is specified in the parameter. For example, DoSpec top('Element1', 10) means that Element1 is 10px higher than the known one.
DIALOG_CHECK_LAYOUT_APP_CONNECTION=The application connection.
DIALOG_CHECK_LAYOUT_DIALOG=A name of the dialog.
DIALOG_CHECK_LAYOUT_DO_NOT_OPEN=Do not open a new dialog.
DIALOG_CHECK_LAYOUT_DO_NOT_CLOSE=Do not close the dialog.
DIALOG_CHECK_LAYOUT_FIELDS=The map of the control name per control operation.
DIALOG_CHECK_LAYOUT_TABLE=Table with DoSpec operations
DIALOG_CHECK_LAYOUT_EXAMPLE={{# \n#Id;#Action;Button;$DoNotOpen;$Dialog;$AppConnection\nDLGCL1;DialogCheckLayout;DoSpec.visible();true;'Main';appCon#}}
DIALOG_CLOSE_GENERAL_DESC=The purpose of the action is to close the dialogs. The dialog to be closed needs to be described in the Close section of the dictionary. When working with swing and win plug-ins, Dialogs can be closed without being described in the Close section because there is a capability to programmatically close the window. In web, the elements can't be closed programmatically and require direct handling.
DIALOG_CLOSE_OUTPUT_DESC=The number of dialogs closed.
DIALOG_CLOSE_EXAMPLE={{`1. Start the web application.`}}{{`2. Close all the elements described in the Close section of MyDialog.`}}{{`3. Check the number of closed elements.`}}{{# \n#Id;#Action;Browser;URL;$AppId\nAPPSTR1;ApplicationStart;'Chrome';'https://google.com';'WEB'\n#Id;#Action;$Dialog;$AppConnection\nDLGCLS1;DialogClose;'MyDialog';APPSTR1.Out\n#Assert;#Message\nDLGCLS1.Out > 0;'0 elements were closed'#}}
DIALOG_CLOSE_APP_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application that the indicated action belongs to. The output value of such an action is as in {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
DIALOG_CLOSE_DIALOG=The name of the Dialog, whose Close section has the descriptions of the elements to be closed.
DIALOG_FILL_EXAMPLE=Parameter names assign names to the elements from the Run section of the specified dialog. \nExpressions are operations with elements.
DIALOG_FILL_OUTPUT_DESC=An associative array which displays the names of the elements processed by the action along with values received from the form, for example, as a result of the operation Do.get().If some element in the action was used several times, only the last value will be returned. Expressions are operations with elements.
DIALOG_FILL_GENERAL_DESC=The purpose of this action is to work with control elements on the screen of the application under test.  With its help, the user can fill in the text boxes of the forms, manage the mouse and the keyboard and also get some parameters from the elements of the forms (names, attributes, etc.). The action uses the dictionary containing the descriptions of forms, its elements and the rules for finding those elements on the screen.  In the matrix editor, this action can help to choose the elements which need to be dealt with from the dictionary.  For this, the user should choose the 'Default app' on the Matrix editor control panel. The chosen application 'is aware' of its dictionary and allows to work with it interactively by choosing a dialog from the list or indicating the elements to work with through the 'All parameters' context menu for the specified dialog.  The elements can be of different types - buttons, text boxes, menus, tables, etc.  Each type of element can only process the operations pertaining to it. For example, buttons can be clicked, but not filled with text. Besides, for each element, the action is set by default. While being launched, the action draws the information about the dictionary from the connection with the application (AppConnection). The work of the action starts with processing the 'OnOpen' section of the chosen dialog. If there are some elements in this section, then the default action will be performed for all of them, one after another. Usually, the Wait element is found here; it waits for the main container of the form to appear on the screen. This allows to make sure the elements of the form are available for work.  In some cases - when the user is sure that the form is on the screen - the processing of this section can be canceled by setting the DoNotOpen parameter to true. By default, this parameter is false. The same mechanism works when closing the form - the OnClose section is processed.  Usually it contains the Wait element which waits for the form's container to become invisible. The processing of this section can be forbidden with the DoNotClose parameter. Most work is performed with the Run section of the dialog in the dictionary.  All the named elements (with the ID attribute set) from this section can be used when working with DialogFill. The name of the element is set as the parameter name. The form's elements are processed in the order used in this action.  If the element is not virtual (like Wait), then it is first searched for on the screen, and then, the sequence of operations is performed, defined by the value of the parameter. The same element can be met several times. For instance, you can click the button, input a value in the text field and click the same button again. In general, the expression is a sequence of operations. There is a class for describing these sequences - Do.  For example Do.click(). However, more complex sequences can be built for each element. For a certain text field, one can come up with such a sequence: Do.text('test').delay(100).check('test'). Here the operations are described in more detail:  [Do] if the expression doesn't represent the sequence of operations, then, for the specified element, its default action is performed. Therefore, text fields can just be given string values that will be automatically modified into a Do.text('your text') chain. If the value is not necessary for the operation, for example, the default action for a button is just clicking, then this value is ignored.
DIALOG_FILL_APP_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application that the indicated action belongs to. The output value of such an action is as in {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
DIALOG_FILL_DIALOG=The name of the dialog being processed.
DIALOG_FILL_DO_NOT_OPEN=Do not process the 'OnOpen' section of the dialog from the dictionary.  False by default.
DIALOG_FILL_DO_NOT_CLOSE=Do not process the 'OnClose' section of the dialog from the dictionary.  False by default.
DIALOG_FILL_STOP_ON_FAIL=Stops if an error occurs in the processing of another element of this action. Otherwise, the element's error code is logged into the output collection of the matrix values, but the work of the action is not interrupted. True by default.
DIALOG_FILL_FIELDS=It is an associative array which can be used instead of parameters. The array keys define the elements in the dictionary; the values are operations. This parameter is designated for writing frameworks working with dictionaries more than for daily work. \n
DIALOG_RESIZE_EXAMPLE=Example 1.{{# \n#Action;$Dialog;$AppConnection;$Height;$Width \nDialogResize;'Dialog';appCon;500;500 \n#}}  \nExample 2.{{# \n#Action;$Dialog;$AppConnection;$Resize \nDialogResize;'Dialog';appCon;Resize.Maximize \n#}}
DIALOG_RESIZE_GENERAL_DESC=The purpose of the action is to change the window size. The window is the element described in the 'Self' section of the dictionary.
DIALOG_RESIZE_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application that the indicated action belongs to. The output value of such an action is as in {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
DIALOG_RESIZE_DIALOG=The name of the dialog being processed.
DIALOG_RESIZE_RESIZE=The type of resizing. Must be Resize.Maximize, Resize.Minimize or Resize.Normal
DIALOG_RESIZE_HEIGHT=The window height is changed to the specified height.
DIALOG_RESIZE_WIDTH=The window width is changed to the specified width.
DIALOG_SWITCH_TO_WINDOW_GENERAL_DESC=The purpose of this action is to switch focus to another application. \nPlug-in dependent action currently being used only with the web plug-in.
DIALOG_SWITCH_TO_WINDOW_EXAMPLE={{`1. Start the web application.`}}{{`2. Connect to the desktop application, the window entitled WinApp.`}}{{`3. Switch focus back to the MainFrame of the web application, located in MyDialog.`}}{{# \n#Id;#Action;Browser;URL;$AppId\nAPPSTR1;ApplicationStart;'Chrome';'https://google.com';'WEB'\n#Action;$Frame;$Dialog;$AppConnection\nDialogSwitchToWindow;'MainFrame';'MyDialog';APPSTR1.Out#}}
DIALOG_SWITCH_TO_WINDOW_APP_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application the indicated action belongs to. The output value of such an action is as in {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
DIALOG_SWITCH_TO_WINDOW_DIALOG=The name of the dialog containing the frame, to which it is necessary to connect. If it is absent, the tool will switch to the parent frame.
DIALOG_SWITCH_TO_WINDOW_FRAME=The frame name, to which the focus will be set.
DIALOG_VALIDATE_GENERAL_DESC=The purpose of this action is to check the accessibility of all the elements of the indicated dialog.
DIALOG_VALIDATE_ADDITIONAL_DESC=The name of the additional parameter should contain the ID of the element. The value should contain the expected number of detected elements.
DIALOG_VALIDATE_EXAMPLE={{`1. Connect to the web application.`}}{{`2. Check the accessibility of all the elements described in MyDialog.`}}{{# \n#Id;#Action;Browser;URL;$AppId\nAPPSTR1;ApplicationStart;'Chrome';'https://google.com';'WEB'\n#Action;$Dialog;$AppConnection;But1;But2\nDialogValidate;'MyDialog';APPSTR1.Out;1;1#}}
DIALOG_VALIDATE_APP_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application that the indicated action belongs to. The output value of such an action is as in {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
DIALOG_VALIDATE_DIALOG=The dialog whose elements need to be checked for accessibility.
DIALOG_VALIDATE_DO_NOT_OPEN=When true is set, the operations indicated in the 'On open' section of the current dialog are performed. False by default.
DIALOG_VALIDATE_DO_NOT_CLOSE=When true is set, the operations indicated in the 'On close' section of the current dialog are performed.  False by default.
IMAGE_GET_GENERAL_DESC=The purpose of this action is to get the screenshot of the started application. Without setting optional parameters, the screenshot of the whole application is made. When setting the Dialog parameter, the screenshot of the first element of the 'Self' section is made. When setting the Dialog and the Name parameters, the screenshot of the element indicated in Name is made.
IMAGE_GET_OUTPUT_DESC=The image that is grabbed from the screen.
IMAGE_GET_EXAMPLE={{`1. Make the screenshot of the logo element located in MyDialog.`}}{{# \n#Id;#Action;$Description;$Dialog;$Name;$AppConnection\nIMGGET1;ImageGet;'Chrome screenshot';'MyDialog';'But1';App#}}
IMAGE_GET_APP_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application that the indicated action belongs to. The output value of such an action is as in {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
IMAGE_GET_DIALOG=The name of the dialog.
IMAGE_GET_NAME=The name of the element.
IMAGE_GET_DESCRIPTION=The description of the image that will be displayed in the tooltip.
IMAGE_GET_X1=The X coordinate is for the upper left corner
IMAGE_GET_Y1=The Y coordinate is for the upper left corner
IMAGE_GET_X2=The X coordinate is for the bottom right corner
IMAGE_GET_Y2=The Y coordinate is for the bottom right corner
IMAGE_REPORT_GENERAL_DESC=The purpose of this action is to place the generated image into the report.
IMAGE_REPORT_OUTPUT_DESC=The path to the image.
IMAGE_REPORT_EXAMPLE={{`1. Start the application.`}}{{`2. Capture the whole application.`}}{{`3. Create a new report.`}}{{`4. Send the generated image to the new report.`}}{{# \n#Id;#Action;Browser;URL;$AppId\nAPPSTR1;ApplicationStart;'Chrome';'https://google.com';'WEB'\n#Id;#Action;$AppConnection\nIMGGET1;ImageGet;APPSTR1.Out\n#Id;#Action;$Image\nIMGRPT1;ImageReport;IMGGET1.Out#}}
IMAGE_REPORT_AS_LINK=Instead of the image, a link to it is generated in the report.
IMAGE_REPORT_IMAGE=The image to be placed into the report.
IMAGE_REPORT_TO_REPORT=The Report object, that will include the indicated image, is specified. The report is an output value of the ReportStart action.
IMAGE_REPORT_BEFORE_TESTCASE=Allows to output the table to the highest level of the report.
IMAGE_REPORT_TITLE=The title of the image.
IMAGE_SAVE_GENERAL_DESC=The purpose of this action is to save the image.
IMAGE_SAVE_OUTPUT_DESC=The full path to the file
IMAGE_SAVE_EXAMPLE={{`1. Connect to web application`}}{{`2. Get the images of the whole application.`}}{{`3. Save the file to the user's home directory.`}}{{# \n#Id;#Action;Browser;URL;$AppId\nAPPSTR1;ApplicationStart;'Chrome';'https://google.com';'WEB'\n#Id;#Action;$AppConnection\nIMGGET1;ImageGet;APPSTR1.Out\n#Id;#Action;$Dir;$Image\nIMGSV1;ImageSave;currentUser/home;IMGGET1.Out#}}
IMAGE_SAVE_IMAGE=The object of the Image type that needs to be saved.
IMAGE_SAVE_DIR=The directory, where the file should be saved. In this case, the filename will be generated.
IMAGE_SAVE_FILE=The path to the file where the image will be saved.
DIALOG_GET_PROPERTIES_GENERAL_DESC=The purpose of this action is to get dialog properties: Size and/or Position. It doesn't work for the web plugin.
DIALOG_GET_PROPERTIES_OUTPUT_DESC=An associative array that displays the names of the elements processed by the action along with properties received from the dialog.
DIALOG_GET_PROPERTIES_EXAMPLE={{##Id;#Action;$Size;$Position;$Dialog;$AppConnection\nAPPPAR1;DialogGetProperties;;;'Dialog';connection#}}
DIALOG_GET_PROPERTIES_APP_CONNECTION=A special object which identifies the started application session. This object is required in many other actions to specify the session of the application the indicated action belongs to. The output value of such an action is as in {{@ApplicationStart@}}, {{@ApplicationConnectTo@}}.
DIALOG_GET_PROPERTIES_DIALOG=The name of the dialog.
DIALOG_GET_PROPERTIES_SIZE=The key to get a size property. The value of the parameter may be empty.
DIALOG_GET_PROPERTIES_POSITION=The key to get a position property. The value of the parameter may be empty.
DIALOG_MOVE_GENERAL_DESC=The action for moving the determined dialog to the X and the Y coordinates. It doesn't work for the web plugin.
DIALOG_MOVE_EXAMPLE={{##Action;$Dialog;$X;$Y;$AppConnection\nDialogMove;'Dialog';newX;newY;connection#}}
DIALOG_MOVE_CONNECTION=A special object that identifies the started application session.
DIALOG_MOVE_DIALOG=The name of the dialog.
DIALOG_MOVE_X_COORDINATE=The new X coordinate for the dialog.
DIALOG_MOVE_Y_COORDINATE=The new Y coordinate for the dialog.
GUI_HELPER_CHOOSE_DEFAULT_APP=It's necessary to set up the default application.
#//endregion

#//region actions.matrix
MATRIX_RUN_GENERAL_DESC=The purpose of the action is to run a Matrix from a file. An execution context is created for the run matrix, so that the matrices would not cross during the run. The matrix being run creates its own status report. The matrix being run uses the same output console as the triggering one. Otherwise, the messages sent by the {{@Print@}} action would be invisible. To pass some value to the matrix being run, the {{$Parameter$}} should be used. To pass several values at once, they should be bulked, for example, in Map. In the started matrix, to access this value, use a public variable with the predefined {{$Parameter$}} name.
MATRIX_RUN_OUTPUT_DESC=A special object which identifies the started matrix. This object is required for the {{@MatrixWait@}} action to wait when the started matrix stops. With the help of this object, it is possible to access the information about the number of successfully run and failed test cases of the started matrix.
MATRIX_RUN_EXAMPLE={{# \n#Id;#Action;$Matrix\nMXRN1;MatrixRun;'matrices/Matrix.jf'\n#Assert;#Message\nMXRN1.Out.isRunning();'MatrixRun is failed'#}}
MATRIX_RUN_MATRIX=A file path to the matrix being run. A path can be both absolute and relative. The current folder is the folder where the configuration is.
MATRIX_RUN_AT=It is used to state the time when the matrix is started. If the specified time hasn't come yet, the launched matrix goes to a halted state until the start time, otherwise, the matrix starts straightaway.
MATRIX_RUN_PARAMETER=Is used to pass parameters to the started matrix. As a call-by-reference mechanism is used, be careful: the started matrix could modify the passed object. It should be considered and can be used as a feedback mechanism between matrices.
MATRIX_RUN_FROM_TEXT_GENERAL_DESC=The purpose of this action is to run the matrix from the text. An execution context is created for the matrix being run, so that the matrices would not cross under run. The matrix being run creates its own status report.
MATRIX_RUN_FROM_TEXT_OUTPUT_DESC=A special object which identifies the started matrix. This object is required for {{@MatrixWait@}} action to wait when the started matrix stops. With the help of this object, it is possible to access the information about the number of successfully run and failed test cases of the started matrix.
MATRIX_RUN_FROM_TEXT_EXAMPLE={{# \n#Id;#RawText;#Kind\nTEXT1;Text;Matrix\n~;"#Id;#TestCase;#Kind;#Depends;#For"\n~;"TEST;;;;"\n~;"    #Action;$Str;$BeforeTestCase"\n~;"    Report;'Test AAA';'TEST'"\n#EndRawText\n#Id;#Action;$Text\nMXRN1;MatrixRunFromText;TEXT1\n#Assert;#Message\nMXRN1.Out.isRunning();'MatrixRun is failed'#}}
MATRIX_RUN_FROM_TEXT_TEXT=The {{$Text$}} object is related to the execution matrix.
MATRIX_RUN_FROM_TEXT_AT=It is used to state the time when the matrix is started. If the specified time hasn't come yet, the launched matrix goes to a halted state until the start time, otherwise, the matrix starts straightaway.
MATRIX_RUN_FROM_TEXT_PARAMETER=Is used to pass parameters to the started matrix. As a call-by-reference mechanism is used, be careful: the started matrix could modify the object passed.
MATRIX_WAIT_GENERAL_DESC=The purpose of this action is to wait until the executed matrix stops. If the matrix doesn't stop during the specified timeout, the action is failed.
MATRIX_WAIT_EXAMPLE={{# \n#Id;#Action;$Matrix\nMXRN1;MatrixRun;'matrices/Matrix.jf'\n#Id;#Action;$Time;$Matrix\nMXWT1;MatrixWait;5000;MXRN1.Out#}}
MATRIX_WAIT_MATRIX=A special object that connects to the matrix which is run.
MATRIX_WAIT_TIME=The matrix timeout per millisecond. If the matrix doesn't stop during the specified timeout, the action is failed. If the value is 0, the matrix will be pending with no time limit until it stops. Be careful with such a value: if the started matrix is cycled, the current matrix will freeze in latency.
#//endregion

#//region actions.message
MESSAGE_CHECK_GENERAL_DESC=The purpose of the action is to compare MapMessage with the collection of the key-value type. \nMapMessage is the output of such actions as MessageCreate, ClientCreateMapMessage, ClientDecode, ClientGetMessage, ClientSendMessage.  \n The report will have a table with 'Mismatched fields' heading, containing columns 'Name' and 'Expected + Actual'. \nIf there is dissimilarity in the compared objects, the MapMessage action fails.
MESSAGE_CHECK_ADDITIONAL_DESC=The names and values, which should be compared in MapMessage passed to ActualMessage, are specified in additional parameters.
MESSAGE_CHECK_EXAMPLE=1. Create a MapMessage object. \n2. Compare the values in MapMessage with the value passed in Additional parameters.  \n{{# \n#Id;#Action;$MessageType;ApplVerID;MsgType;TargetCompID\nMSGCR2;MessageCreate;'TestRequest';'0';'5';'TEST'\n#Id;#Action;$ActualMessage;ApplVerID;MsgType\nMSGCHK1;MessageCheck;MSGCR2.Out;0;'5'#}}
MESSAGE_CHECK_ACTUAL=An object of the MapMessage type.
MESSAGE_COMPARE_TWO_GENERAL_DESC=The purpose of the action is to compare two MapMessage objects. \nMapMessage is the output of such actions as MessageCreate, ClientCreateMapMessage, ClientDecode, ClientGetMessage, ClientSendMessage.  \n If there is dissimilarity in the compared objects, the MapMessage action fails.
MESSAGE_COMPARE_TWO_EXAMPLE=1-2. Create two MapMessage objects with different values  \n3. Check them with the MessageCompareTwo action. \n{{# \n#Id;#Action;$Fields;$MessageType\nMSGCR1;MessageCreate;{'First item':'First Value', 'Second Item':'Second Value'};'TestRequest'\n#Id;#Action;$Fields;$MessageType\nMSGCR2;MessageCreate;{'First item':'First Value', 'Second Item':'Second Value'};'TestRequest'\n#Action;$Expected;$Actual\nMessageCompareTwo;MSGCR2.Out;MSGCR1.Out#}}
MESSAGE_COMPARE_TWO_ACTUAL=The MapMessage which should be compared.
MESSAGE_COMPARE_TWO_EXPECTED=The MapMessage which should be compared with.
MESSAGE_COMPARE_TWO_EXCLUDE=An array of column names which should be excluded from the comparison.
MESSAGE_CREATE_GENERAL_DESC=The purpose of the action is to create a MapMessage object.  \nA MapMessage object is a collection which stores data in the form of key/value pairs. \nIt is used in such actions as ClientCheckFields, ClientCheckMessage, ClientEncode, ClientSendMapMessage, MessageCheck, MessageCompareTwo.
MESSAGE_CREATE_OUTPUT_DESC=A Message object.
MESSAGE_CREATE_EXAMPLE={{##Id;#Action;$MessageType;$Fields\nMSGCR1;MessageCreate;'DataUpdate';{'First item':'First Value', 'Second Item':'Second Value'}#}}
MESSAGE_CREATE_ADDITIONAL_DESC=Names and values are passed to fill the MapMessage. This parameter is only used if the Fields parameter is not set.
MESSAGE_CREATE_MESSAGE_TYPE=The type of the created MapMessage should be specified.
MESSAGE_CREATE_SOURCE=The source of the created MapMessage should be specified.
MESSAGE_CREATE_FIELDS=The collection of Map type values is specified.
MESSAGE_REPORT_GENERAL_DESC=The purpose of the action is to display the content of the {{$MapMessage$}} object  in the report on the matrix run. An object of the {{$MapMessage$}} type is a tree-based representation of a message which consists of fields. It is applied when it is necessary to send or receive {{$MapMessage$}}.
MESSAGE_REPORT_EXAMPLE={{# \n#Id;#Action;$MessageType;Param1;Param2\nMSGCR2;MessageCreate;'TestRequest';'qwe';'asd'\n#Action;$MapMessage;$Title\nMessageReport;MSGCR2.Out;'My Message'#}}
MESSAGE_REPORT_MESSAGE=The {{$MapMessage$}} object that it is necessary to output.
MESSAGE_REPORT_TITLE=The title of the text.
MESSAGE_REPORT_TO_REPORT=This parameter is used for directing the output from the given object to the external report created by the {{$ReportStart$}} action.
MESSAGE_REPORT_BEFORE_TESTCASE=Allows to output the message to the highest level of the report.
MESSAGE_CREATE_VALUE_ERROR=For the '%s' field, the value is an array, and each element of this array should be a Map object.
#//endregion

#//region actions.report
CHART_REPORT_GENERAL_DESC=The purpose of the action is to display graphs and diagrams in reports based on data from the tables.
CHART_REPORT_ADDITIONAL_DESC=Depends on the type of the graph/diagram. {{` {{$Labels$}} - it is needed to name a column, the values of which  will be used for creating a diagram.`}} {{` {{$YAxisDescription$}} - it is needed to specify the name that will be assigned to Z-axis.`}} {{` {{$Values$}} - the name of the column, the values of which will be used for creating a Pie chart.`}}
CHART_REPORT_EXAMPLE=1. Make a table \n2. Create a report with the ReportStart action \n3. Create a graph based on the table. Specify a newly created report in the Report parameter . \n4-5. Display the report. \n{{# \n#Id;#TestCase;#Kind;#Depends;#For\nChart;;;;\n#Id;#RawTable\nDATA1;Table\n@;Labels;Mike salary;John Salary\n0;2001;1;2\n1;2002;2;3\n2;2003;3;4\n3;2004;3;4\n4;2005;3;5\n5;2006;4;5\n#EndRawTable\n#Id;#Action;$ReportName\nREP1;ReportStart;'My report'\n#Action;$ToReport;$Type;$Table;$Title;Labels\nChartReport;REP1.Out;ChartKind.Line;DATA1;'Chart title';'Labels'\n#Action;$Passed;$Report;$Failed\nReportFinish;0;REP1.Out;0\n#Action;$Report\nReportShow;REP1.Out.getReportName()#}}
CHART_REPORT_TITLE=The title.
CHART_REPORT_TABLE=The table that contains data for a graph.
CHART_REPORT_CHART_TYPE=The type of graph.
CHART_REPORT_TO_REPORT=This parameter is used for directing the output from the given object to the external report created by the {{$ReportStart$}} action.
CHART_REPORT_COLORS=The color map.
CHART_REPORT_BEFORE_TEST_CASE=Allows to display a graph at the top of the report.
REPORT_GENERAL_DESC=The prupose of this action is to output values to the report.
REPORT_ADDITIONAL_DESC=The name and the value that will be shown in the report.
REPORT_EXAMPLE=This example will add the following row 'String for printing: name = value' to the report that was created by the {{@ReportStart@}} action  \n{{# \n#Id;#Action;$ReportName\nREP1;ReportStart;'My Report'\n#Action;$ToReport;$Str;name\nReport;REP1.Out;'String for printing:';'value'\n#Action;$Passed;$Report;$Failed\nReportFinish;1000;REP1.Out;200\n#Action;$Report\nReportShow;REP1.Out.getReportName()#}}
REPORT_TO_REPORT=This parameter is used for directing the output from the given object to the external report created by the {{@ReportStart@}} action.
REPORT_BEFORE_TEST_CASE=Allows to output a table to the top of the report.
REPORT_MESSAGE=The output row.
REPORT_FINISH_EXAMPLE={{`1. Create a Report object.`}}{{`2. Create a Table object.`}}{{`3. Move the Table object using the {{@TableReport@}} action to the report created in the first step.`}}{{`4. Finish building the Report object.`}} {{# \n#Id;#Action;$Version;$ReportName\nREP1;ReportStart;'3.141592';'MyReport'\n#Id;#RawTable\nDATA1;Table\n@;newH\n0;newR\n#EndRawTable\n#Action;$ToReport;$Table;$Title\nTableReport;REP1.Out;DATA1;'Report title'\n#Action;$Passed;$Report;$Failed\nReportFinish;1523;REP1.Out;777#}}
REPORT_FINISH_GENERAL_DESC=This action is used as a final step in building a report taken from the {{@ReportStart@}} action. It will be impossible to add new elements to the Report after using this action.
REPORT_FINISH_REPORT=The report that should be finished.
REPORT_FINISH_PASSED=The number of passed actions is specified.
REPORT_FINISH_FAILED=The number of failed actions is specified.
REPORT_FINISH_START_TIME=The time when the report starts being built. If the parameter is not set, then the current time is used.
REPORT_FINISH_FINISH_TIME=The time when the report is finished. If the parameter is not set, then the current time is used.
REPORT_NAME_GENERAL_DESC=The purpose of this action is to add text to the name of the created report.
REPORT_NAME_EXAMPLE=If the following example is executed, the name of the report file will be: 'Date and time of running matrix'_'Matrix name'_'PASSED' Chrome.html \n{{# \n#Action;$Name\nReportName;'Chrome'#}}
REPORT_NAME_NAME=The text that will be added to the name of the report.
REPORT_NAME_FAILED_STEPS=The failed steps count that will be added to the report.
REPORT_NAME_PASSED_STEPS=The passed steps count that will be added to the report.
REPORT_SHOW_GENERAL_DESC=This action is used for the Report object display which was finished with the ReportFinish action. The report will be displayed straight after finishing this action.
REPORT_SHOW_EXAMPLE={{`1. Create a Report object.`}}{{`2. Create a Table object.`}}{{`3. Move the Table object using the TableReport action to the report created in the first step.`}}{{`4. Finish building the Report object.`}}{{`5. Display the report.`}} {{# \n#Id;#Action;$Version;$ReportName\nREP1;ReportStart;'3.141592';'MyReport'\n#Id;#RawTable\nDATA1;Table\n@;newH\n0;newR\n#EndRawTable\n#Action;$ToReport;$Table;$Title\nTableReport;REP1.Out;DATA1;'Report title'\n#Action;$Passed;$Report;$Failed\nReportFinish;23;REP1.Out;34\n#Action;$Report\nReportShow;REP1.Out.getReportName()#}}
REPORT_SHOW_REPORT=The Report object that should be displayed.
REPORT_START_GENERAL_DESC=This action is used to create a Report object. It is possible to set it as a ToReport parameter in the following actions: {{@TableReport@}}, {{@TextReport@}}, {{@XmlReport@}} and others to fill the created Report object
REPORT_START_OUTPUT_DESC=The created report.
REPORT_START_EXAMPLE={{# \n#Id;#Action;$Version;$ReportName\nREP1;ReportStart;'3.141592';'MyReport'#}}
REPORT_START_REPORT_NAME=The name of the created report.
REPORT_START_VERSION=The version of the report. It will be displayed in the report.
#//endregion

#//region actions.services
SERVICE_LOAD_GENERAL_DESC=The following action is needed to load a service, to initialize it and to connect to it. Services are things functioning as a server in a client-server relationship. A server listens to a specific port and allows to establish a TCP connection from the client side.
SERVICE_LOAD_OUTPUT_DESC=The output is a connection with a loaded server. It is used for further interaction with the loaded server.
SERVICE_LOAD_EXAMPLE={{# \n#Id;#Action;$ServiceId\nSRVLD1;ServiceLoad;'TEST'#}}
SERVICE_LOAD_ID=A service ID, that was described in the Service entries configuration, which will be used for booting the relevant service. If no entry is found in the configuration with such a ServiceId, the action finishes with an error.
SERVICE_START_GENERAL_DESC=The purpose of this action is to run a service that was loaded earlier by {{@ServiceLoad@}}.
SERVICE_START_ADDITIONAL_DESC=The additional parameters depend on the type of the running service.
SERVICE_START_OUTPUT_DESC=True, if the service started successfully.
SERVICE_START_EXAMPLE={{`1. Load MatrixService`}}{{`2. Load a service with the additional Port parameter that was loaded earlier.`}} {{# \n#Id;#Action;$ServiceId\nSRVLD1;ServiceLoad;'TEST'\n#Id;#Action;Port;$ServiceConnection\nSRVSTRT1;ServiceStart;10565;SRVLD1.Out#}}
SERVICE_START_CONNECTION=A connection with the service that should be run is specified. The output object of the {{@ServiceLoad@}} action is indicated.
SERVICE_STOP_GENERAL_DESC=The purpose of this action is to stop the service that was run by {{@ServiceStart@}}.
SERVICE_STOP_EXAMPLE={{`1. Load MatrixService.`}}{{`2. Run the service with the additional Port parameter that was specified earlier.`}}{{`3. Close the connection.`}} {{# \n#Id;#Action;$ServiceId\nSRVLD1;ServiceLoad;'TEST'\n#Id;#Action;Port;$ServiceConnection\nSRVSTRT1;ServiceStart;10565;SRVLD1.Out\n#Id;#Action;$ServiceConnection\nSRVSTP1;ServiceStop;SRVLD1.Out#}}
SERVICE_STOP_CONNECTION=The connection with the service that needed to be closed is specified.
SERVICE_HELPER_CONNECTION_IS_NULL=The connection is null.
SERVICE_HELPER_SERVICE_NOT_LOADED=The connection is wrong. Service not loaded
#//endregion

#//region actions.sql
SQL_CONNECT_GENERAL_DESC=The action is used to establish a database connection which is used in the {{@ SQLexecute @}}, {{@ SQLinsert @}}, {{@ SQLselect @}}, {{@ SQLtableUpload @}}, {{@ SQLdisconnect @}} actions.
SQL_CONNECT_OUTPUT_DESC=The connection to the SQL server.
SQL_CONNECT_EXAMPLE={{` 1. Establish a database connection setting all mandatory parameters. `}}{{` 2. Check that the connection is created and open. `}}{{# \n#Id;#Action;$User;$Server;$Base;$Sql;$Password\nSQLCNT1;SQLconnect;'username';'127.0.0.1:3306';'database';'MySql';'password'\n#Assert;#Message\n!(SQL.Out.isClosed());'connection is not established'#}}
SQL_CONNECT_SQL=The SQL Entry name.
SQL_CONNECT_SERVER=The database ip address. The value of this parameter replaces ${SERVER} in the sqlConnection line in the selected SQL entry parameters.
SQL_CONNECT_BASE=The database name. The value of this parameter replaces ${BASE} in the sqlConnection line in the selected SQL entry parameters.
SQL_CONNECT_USER=The database user name.
SQL_CONNECT_PASSWORD=The database password.
SQL_DISCONNECT_GENERAL_DESC=The action is used to close a database connection.
SQL_DISCONNECT_EXAMPLE={{` 1. Establish a database connection setting all mandatory parameters. `}}{{` 2. Close the database connection. `}}{{` 3. Confirm that the database connection is closed. `}}{{# \n#Id;#Action;$User;$Server;$Base;$Sql;$Password\nSQLCNT1;SQLconnect;'username';'127.0.0.1:3306';'database';'MySql';'password'\n#Id;#Action;$Connection\nSQLDCNT1;SQLdisconnect;SQLCNT1.Out\n#Assert;#Message\nSQLCNT1.Out.isClosed();'connection is not closed'.#}}
SQL_DISCONNECT_CONNECTION=The database connection established by the SQLconnect action.
SQL_EXECUTE_GENERAL_DESC=The action is used to execute any SQL database query.
SQL_EXECUTE_ADDITIONAL_DESC=The additional parameter is defined by the data that will be used in the completed SQL query instead of placeholders -'?'. The parameter name is not used during the execution and, in this case, can serve as a comment for the user. For example, you can use it as an object description set as a parameter value. {{*Attention!*}} You should mind the order of the additional parameters.
SQL_EXECUTE_OUTPUT_DESC=Returns 'true' if the query was for data selection and 'false' if it was for data change.
SQL_EXECUTE_EXAMPLE={{` 1. Create a connection to a database. `}}{{` 2. Execute the query to create a Users table. `}}{{` 3.-4. Define and initialize the Name and Age variables. `}}{{` 5. Execute the query to fill in the Users table using placeholders in additional parameters. `}}{{` 6. Execute the Update query using placeholders. `}} \n{{# \n#Id;#Action;$User;$Server;$Base;$Sql;$Password\nSQLCNT1;SQLconnect;'username';'127.0.0.1:3306';'database';'MySQL';'password'\n#Id;#RawText;#Kind\ncreateTable;Text;None\n~;"CREATE TABLE users (id INT(6) PRIMARY KEY,"\n~;"name VARCHAR(30) NOT NULL,age int NOT NULL)"\n#EndRawText\n#Id;#Action;$Query;$Connection\nSQLEXEC1;SQLexecute;createTable;SQLCNT1.Out\n#Id;#Let\nname;'mike'\n#Id;#Let\nage;23\n#Id;#RawText;#Kind\ninsertQuery;Text;None\n~;"insert into users (name, age) values (?, ?)"\n#EndRawText\n#Id;#Action;$Query;$Connection;User name;User age\nSQLINS1;SQLinsert;insertQuery;SQLCNT1.Out;name;age\n#Id;#RawText;#Kind\nupdateQuery;Text;None\n~;"update users set name=? where ? = 23"\n#EndRawText\n#Id;#Action;$Query;$Connection;User new name;User new age\nSQLEXEC2;SQLexecute;updateQuery;SQLCNT1.Out;'john';age#}}
SQL_EXECUTE_CONNECTION=The database connection established by the {{@ SQLconnect action @}}.
SQL_EXECUTE_QUERY=The SQL database query.
SQL_INSERT_ADDITIONAL_DESC=The additional parameter is defined by the data that will be used in the completed SQL query instead of placeholders -'?'. The parameter name is not used during the execution and, in this case, can serve as a comment for the user. For example you can use it as an object description set as a parameter value.  \n{{*Attention!*}} You should mind the order of the additional parameters.
SQL_INSERT_OUTPUT_DESC=Returns a list containing a primary auto-increment line key generated as a result of executing an SQL query.
SQL_INSERT_EXAMPLE={{` 1. Create a connection to a database. `}}{{` 2. Execute the query to create a Users table. `}}{{` 3.-4. Define and initialize the Name and Age variables.`}}{{` 5. Execute the SQLinsert action using placeholders in additional parameters.`}}{{` 6. Verify that the query returned the key list.`}} \n \n{{# \n#Id;#Action;$User;$Server;$Base;$Sql;$Password\nSQLCNT1;SQLconnect;'username';'127.0.0.1:3306';'database';'MySQL';'password'\n#Id;#RawText;#Kind\ncreateTable;Text;None\n~;"CREATE TABLE users (id INT(6) PRIMARY KEY,"\n~;"name VARCHAR(30) NOT NULL,age int NOT NULL)"\n#EndRawText\n#Id;#Action;$Query;$Connection\nSQLEXEC1;SQLexecute;createTable;SQLCNT1.Out\n#Id;#Let\nname;'mike'\n#Id;#Let\nage;23\n#Id;#RawText;#Kind\ninsert;Text;None\n~;"\""insert into users (name, age) values (?, ?)\"""\n#EndRawText\n#Id;#Action;$Query;$Connection;User name;User age\nSQLINS1;SQLinsert;insert;SQLCNT1.Out;name;age\n#Assert;#Message\nSQLINS1.Out.size() > 0;#}}
SQL_INSERT_QUERY=The SQL database query
SQL_INSERT_CONNECTION=Connection to the database - the output value of the SQLconnect action
SQL_INSERT_GENERAL_DESC=This action is used to execute the Insert SQLquery.
SQL_SELECT_GENERAL_DESC=This action is used to execute the Select SQLquery.
SQL_SELECT_ADDITIONAL_DESC=The additional parameter is defined by the data that will be used in the completed SQL query instead of placeholders -'?'. The parameter name is not used during the execution and, in this case, can serve as a comment for the user. For example, you can use it as an object description set as a parameter value.  \n{{*Attention!*}} You should mind the order of the additional parameters.
SQL_SELECT_OUTPUT_DESC=The selected SQL query returns a Table object. The returned Table column names coincide with the Table column names that  we get as a result of the query.
SQL_SELECT_EXAMPLE={{` 1. Create a connection to a database. `}}{{` 2. Execute the query to create a Users table `}}{{` 3.-4. Define and initialize the Name and Age variables `}}{{` 5. Execute the query to fill in the Users table using placeholders in the additional parameters `}}{{` 6. Execute the SQLselect action using placeholders in the additional parameters `}}{{` 7. Add the table to the report using the Table Report action `}} \n{{# \n#Id;#Action;$User;$Server;$Base;$Sql;$Password\nSQLCNT1;SQLconnect;'username';'127.0.0.1:3306';'database';'MySQL';'password'\n#Id;#RawText;#Kind\ncreateTable;Text;None\n~;"CREATE TABLE users (id INT(6) PRIMARY KEY,"\n~;"name VARCHAR(30) NOT NULL,age int NOT NULL)"\n#EndRawText\n#Id;#Action;$Query;$Connection\nSQLEXEC1;SQLexecute;createTable;SQLCNT1.Out\n#Id;#Let\nname;'mike'\n#Id;#Let\nage;23\n#Id;#RawText;#Kind\ninsertQuery;Text;None\n~;"insert into users (name, age) values (?, ?)#EndRawText"\n~;"selectQuery"\n~;"select name, age from test.users where name = ? and age = ?"\n#EndRawText\n#Id;#Action;$Query;$Connection;User name;User age\nSQLEXEC3;SQLexecute;insertQuery;SQLCNT1.Out;name;age\n#Id;#Action;$Query;$Connection;User name;User age\nSQLSLCT1;SQLselect;selectQuery;SQLCNT1.Out;name;age\n#Action;$Table;$Title\nTableReport;SQLSLCT1.Out;'Report title'#}}
SQL_SELECT_QUERY=The SQL database query.
SQL_SELECT_CONNECTION=The connection to the database - the output value of the SQLconnect action.
SQL_TABLE_UPLOAD_EXAMPLE={{` 1. Create a table. `}}{{` 2. Create a connection to a database. `}}{{` 3. Execute a query to create the Users table. `}}{{` 4. Upload the data from the Table object to the Users table of the current database. `}}{{# \n#Id;#RawTable\nDATA1;Table\n@;Name;Age\n0;Mike;25\n1;Anna;24\n#EndRawTable\n#Id;#Action;$User;$Server;$Base;$Sql;$Password\nSQLCNT1;SQLconnect;'username';'127.0.0.1:3306';'database';'MySQL';'password'\n#Id;#RawText;#Kind\ncreateTable;Text;None\n~;"CREATE TABLE users (id INT(6) PRIMARY KEY,"\n~;"name VARCHAR(30) NOT NULL,age int NOT NULL)"\n#EndRawText\n#Id;#Action;$Query;$Connection\nSQLEXEC1;SQLexecute;createTable;SQLCNT1.Out\n#Action;$Table;$Connection;$Data\nSQLtableUpload;'users';SQLCNT1.Out;DATA1#}}
SQL_TABLE_UPLOAD_GENERAL_DESC=The following action is used to upload the data from the {{$Table$}} object to the database. The data is added using the Union principle (adding to the end of the database)
SQL_TABLE_UPLOAD_CONNECTION=The connection to the database - output value of the SQLconnect action.
SQL_TABLE_UPLOAD_TABLE=The name of the database table that needs to be filled in with data.
SQL_TABLE_UPLOAD_DATA=The Table, from which the data is taken to be added to the database.
#//endregion

#//region actions.system
CHECK_GENERAL_DESC=The following action is needed to check structured objects that implement the Map interface, for example: table rows, MapMessages.
CHECK_OUTPUT_DESC=A logical variable, true if the matching values are equal, otherwise - false. If there are differences between matching values, the {{$Mismatched$}} table, the fields of which contain the information about the mismatched values, is added to the report.
CHECK_ADDITIONAL_DESC=Helps to pass values and their names that need to be compared.
CHECK_EXAMPLE={{`1. Make a table with 2 rows and columns, add the values.`}}2. Compare the values from the first row of the table with the ones that are specified in the additional parameters of the Check action. {{# \n#Id;#RawTable\nDATA1;Table\n@;Country;Capital\n0;Russia;Moscow\n1;Germany;Berlin\n#EndRawTable\n;$DoNotFail;$Actual;Country;Capital\nCheck;true;DATA1.get(0);'Russia';'Berlin'#}}
CHECK_DONT_FAIL=If true, then when identifying differences as a result of the comparison, the action will still be marked as Passed, otherwise - as Failed. By default, the parameter is false.
CHECK_ACTUAL=A set of names and values that should be compared.
COMPARE_GENERAL_DESC=The following action is used to compare two structured objects that implement the Map interface, for example: table rows, MapMessages.
COMPARE_OUTPUT_DESC=A table as a resulf of the comparison.
COMPARE_ADDITIONAL_DESC=Helps to pass values and their names that need to be compared.
COMPARE_EXAMPLE={{`1. Make a table with 2 rows and columns, add the values.`}}2. Compare the values from the first row of the table with those ones that are specified in Expected parameter of the Compare action . {{# \n#Id;#RawTable\nDATA1;Table\n@;Country;Capital\n0;Russia;Moscow\n1;Germany;Berlin\n#EndRawTable\n#Action;$DoNotFail;$Actual;$Expected\nCompare;true;DATA1.get(0);{ 'Country':'Russia', 'Capital':'Berlin' }#}}
COMPARE_ACTUAL=A set of names and values that should be compared.
COMPARE_EXPECTED=A set of names and values that should be compared with.
COMPARE_DONT_FAIL=If true, then, when identifying the differences as a result of the comparison, the action will still be marked as Passed, otherwise -as Failed. By default, the  parameter is false.
EXECUTE_GENERAL_DESC=This action is used to run external processes via the command line of the operating system. \nDepends on the operating system used; different commands can be used for the same actions in different systems. \nUsing this action allows to unpack an archive or download a file from the FTP server.
EXECUTE_OUTPUT_DESC=The result of the standard output of the running process to the console. \nAvailable, if stated true in the Wait parameter. \nTo get text, use Out.Text; to get ExitCode, use Out.ExitCode; to get PID, use Out.PID.
EXECUTE_EXAMPLE={{`1. Run the 'help' system command`}}2. Check if you get an answer in the form of text when executing the current command. \n{{# \n#Id;#Action;$Command\nEXEC1;Execute;'java -jar '+Sys.jfDir()+File.separator+'jackfish.jar'\n#Action;$Str\nPrint;EXEC1.Out.Text#}}
EXECUTE_COMMAND=The system command that will be executed.
EXECUTE_WAIT=Waiting for the command to terminate. If true - the execution of the matrix is stopped until the command is executed. By default - true.
EXECUTE_WORK_DIR=A task of the working directory for the current command.
INPUT_GENERAL_DESC=Inputs a value via interaction with a user
INPUT_OUTPUT_DESC=The result of the user choosing a value or a default value if the timeout expired.
INPUT_TITLE=The title of the user input.
INPUT_DEFAULT_VALUE=Default value if the timeout expired.
INPUT_HELP_KIND=How to help the user enter or choose a value.
INPUT_DATA_SOURCE=Collection (a list or a map) to choose a value.
INPUT_TIMEOUT=If this timeout expires, the default value will be used.
INPUT_EXAMPLE={{##Id;#Action;$Timeout;$DefaultValue;$HelpKind;$Title\nINP1;Input;1000;'any string';HelpKind.String;'Title'#}}
PRINT_GENERAL_DESC=The following action is used to output values to the console of the current matrix.
PRINT_ADDITIONAL_DESC=The name of the output object is indicated in the name of the additional parameter, the output object is indicated in the value of the parameter.
PRINT_EXAMPLE=The following example will output the following row to the console: 'Comment for a string:  Name = Value' \n{{# \n#Action;$Str;Name\nPrint;'Comment for a string: ';'Value'#}}
PRINT_MESSAGE=The comments to the output row.
RESTORE_GENERAL_DESC=This action is used to get the value that was previously saved in the global Store (see the {{@Store@}} action). \nOnly the objects that are in the global Store (View -> Store) can be restored. \nAll objects from the global Store are only saved during the current tool session.
RESTORE_OUTPUT_DESC=The value that will be required. Otherwise, null, if a non-existent value was required.
RESTORE_EXAMPLE=Restore the value with the currentTime name that was stored by the Store action. Assign it to the local createDate variable. \n{{# \n#Action;$AsVar;$Name\nRestore;'createDate';'currentTime'#}}
RESTORE_NAME=The name of the object, the value of which will be restored.
RESTORE_AS_VAR=The name of the variable that will be given the value of the restored object. The variable will be global if the action is tagged 'G', otherwise, the variable will be local.
RESULT_TABLE_GENERAL_DESC=This action is used to get a copy of the system table that contains information about the current running matrix.  \nThis table is made when running a matrix, each row of the table contains information about one {{@TestCase@}} or {{@Step@}}. \nAmendments made to the table do not influence the system table.  The {{@ResultTableUserValue@}} action is used to add columns and values. \nIt allows to use an optional parameter to get {{@ResultTable@}} from another matrix.
RESULT_TABLE_OUTPUT_DESC=A copy of the system table that has columns Matrix, TestCaseId, TestCase, StepIdentity, Step, Time, Result, Error, Screenshot.
RESULT_TABLE_EXAMPLE={{# \n#Id;#TestCase;#Kind;#Depends;#For\nFirst;;;;\n#Action;name\nPrint;'value'\n#Action;$Time\nWait;1000\n#Id;#TestCase;#Kind;#Depends;#For\nSecond;;;;\n#Action;$Text;$Notifier\nShow;'Some text for\nprint';Notifier.Info\n#Fail\n'Fail'\n#Id;#TestCase;#Kind;#Depends;#For\nThird;;;;\n#Id;#Action;$Decoraded\nRESTBL1;ResultTable;true\n#Action;$BeforeTestCase;$Table;$Title\nTableReport;'First';RESTBL1.Out;'Result table'#}}
RESULT_TABLE_DECORATED=If true is set, the table is human-readable. Otherwise, the values in the table will be objects that can be used later.
RESULT_TABLE_MATRIX=The MatrixRunner object is indicated (that is an output value of actions {{@MatrixRun@}} and {{@MatrixRunFromText@}}). This action will be used in the summary table.
RESULT_TABLE_USER_VALUE_GENERAL_DESC=This action is used to add extra columns and values to the system table that can be acquired by the {{@ResultTable@}} action. 
RESULT_TABLE_USER_VALUE_ADDITIONAL_DESC=The names of additional columns are specified in the value of the additional parameter, in the value of the parameter, values are indicated, that will be added to the row that corresponds to that test case or step, where the following action is. {{`If the names match, additional columns do not replace the columns of the system table: Matrix, TestCaseId, TestCase, StepIdentity, Step, Time, Result, Error, Screenshot.`}}
RESULT_TABLE_USER_VALUE_EXAMPLE={{# \n#Id;#TestCase;#Kind;#Depends;#For\nRTUSERVAL;ResultTableUserValue;Never;;\n#Action;UserValue\nResultTableUserValue;'value'\n#Step;#Kind;#For;#Depends\n;;;\n#EndStep\n#Id;#Action;$Decoraded\nRESTBL1;ResultTable;false\n#Assert;#Message\nRESTBL1.Out[RESTBL1.Out.size - 1].Result == Result.Passed;'Assert'\n#Id;#Let\n;RESTBL1.Out.size\n#Assert;#Message\nRESTBL1.Out[RESTBL1.Out.size - 2].UserValue == 'value';'Wrong value'\n#Assert;#Message\nRESTBL1.Out[RESTBL1.Out.size - 1].UserValue == null;'Wrong value'\n#Action;OtherValue\nResultTableUserValue;100\n#Step;#Kind;#For;#Depends\n;;;\n#Action;UserValue;OtherValue\nResultTableUserValue;'value1';200\n#EndStep\n#Id;#TestCase;#Kind;#Depends;#For\nRT;;;;\n#Id;#Action;$Decoraded\nRESTBL1;ResultTable;true\n#Action;$BeforeTestCase;$Table;$Title\nTableReport;'RTUSERVAL';RESTBL1.Out;'Result table'#}}
RESULT_TABLE_USER_VALUE_MATRIX=The MatrixRunner object is indicated (that is an output value of actions {{@MatrixRun@}} and {{@MatrixRunFromText@}}). This action will be used in the summary table.
SHOW_GENERAL_DESC=This action is used to output values in the pop-up notification that appears above all windows.
SHOW_EXAMPLE=Output the following row \"Current time is: currentTime\" in the pop-up window, with an Info notification. \n{{# \n#Action;$Text;$Notifier\nShow;'Current time is: ' + DateTime.currentTime();Notifier.Info#}}
SHOW_NOTIFIER=Set a type of notification: Info - blue, Success - green, Error - red.
SHOW_TEXT=The output row.
STORE_GENERAL_DESC=This action is used to store the values of an object from any matrix in the global {{$Store$}}. \nLater, this object is available via the {{@Restore@}} action. \nAlso, if the value is {{$null$}}, the stored value will be removed from {{$Store$}}. All objects from thr global {{$Store$}} are only stored during the current tool session.
STORE_EXAMPLE=Save the DateTime object that contains the current date and time when doing this action. \n{{# \n#Action;$Value;$Name\nStore;DateTime.current();'currentTime'#}}
STORE_NAME=The name of the saved object.
STORE_VALUE=The object that needs to be stored.
WAIT_GENERAL_DESC=This action is used to stop running a matrix for a while. To execute this action correctly, it is necessary to specify at least one optional parameter.
WAIT_EXAMPLE=Stop running the matrix for 5 seconds. \n{{# \n#Action;$Time\nWait;5000#}}
WAIT_TIMEOUT=The time in milliseconds; during this time, the matrix run will be paused.
WAIT_BY_TIME=The time until which the matrix run will be paused. It is ignored, when the 'Time' parameter is specified.
#//endregion

#//region actions.text
TEXT_ADD_LINE_GENERAL_DESC=The purpose of the action is to add a line to a {{$Text$}} object. A {{$Text$}} object is a text-based pattern which consists of lines. The action can work for creating a {{$Text$}} object line-by-line from different sources.
TEXT_ADD_LINE_EXAMPLE={{# \n#Id;#Action;$Content\nTXT1;TextCreate;'Text'\n#Action;$Line;$Text\nTextAddLine;'New line';TXT1.Out#}}
TEXT_ADD_LINE_TEXT=A {{$Text$}} object .
TEXT_ADD_LINE_LINE=The line that should be added.
TEXT_CREATE_GENERAL_DESC=The purpose of the action is to create a {{$Text$}} object. A {{$Text$}} object is a text-based pattern which consists of lines. A {{$Text$}} object is used as the input object in many text actions. Also a {{$Text$}} object can be converted into a line object which can contain many lines {{$Text.Out.toString()$}} divided by the line break symbol ( \n) and transferred to any action which accepts the line as the parameter or parameters, for example in the {{@SQLExecute@}} action.
TEXT_CREATE_OUTPUT_DESC=A {{$Text$}} object is a text-based pattern which consists of lines.
TEXT_CREATE_EXMAPLE={{# \n#Id;#Action;$Content\nTXT1;TextCreate;'Text'\n#Assert;#Message\nTXT1.Out.toString() == 'Text';'Assert!'#}}
TEXT_CREATE_CONTENT=The text that it is required to type.
TEXT_LOAD_FROM_FILE_EXAMPLE={{# \n#Id;#Action;$File\nTXT1;TextLoadFromFile;'path/text.txt'\n#Assert;#Message\nTXT1.Out != null;'Assert!'#}}
TEXT_LOAD_FROM_FILE_GENERAL_DESC=The purpose of the action is to create a {{$Text$}} object from the file. A {{$Text$}} object is a text-based pattern which consists of lines. Any file which contains plain text can be used as a source file.
TEXT_LOAD_FROM_FILE_OUTPUT_DESC=A {{$Text$}} object is a text-based pattern which consists of lines.
TEXT_LOAD_FROM_FILE_FILE=A text file, the text of which needs to be typed.
TEXT_PERFORM_GENERAL_DESC=The purpose of the action is to implement macro substitution in a {{$Text$}} object. A {{$Text$}} object is a text-based pattern, which consists of lines, which can contain macro substitution. Macro substitution is found directly in the test, and it is represented by a formula which is enclosed into a special "@{}" tag. The result of the action work is a {{$Text$}} object, in which the results of the macro execution are presented in the form of the literal text. For example: "Hi! My name is @{personName}" or "My taxes in 2016 are @{amount * 0.13}"  will be converted into the text "Hi! My name is John " and "My taxes in 2016 are 13" correspondingly, on condition that  the variable personName contains "John", and the variable amount contains 100. It is recommended to use the following action for generating a {{$Text$}} object during the matrix implementation and its upcoming transfer to the {{@MatrixRunFromText@}} action for a dynamic matrix execution or a text assembly of a complex structure, such as the Expected value for the subsequent comparison with the Actual value. It is possible to find detailed information about macro options and macro executable expressions on the website (http://mvel.documentnode.com/#mvel-2.0-templating-guide).
TEXT_PERFORM_OUTPUT_DESC=A {{$Text$}} object is a text-based pattern which consists of lines.
TEXT_PERFORM_EXAMPLE={{# \n#Id;#Action;$Content\nTXT1;TextCreate;'My taxes in 2016 is @{amount * 0.13} rub'\n#Id;#Let\namount;100\n#Id;#Action;$Text\nTXT2;TextPerform;TXT1.Out\n#Assert;#Message\nTXT2.Out.toString() == 'My taxes in 2016 is 13.0 rub';'Assert failed'#}}
TEXT_PERFORM_TEXT=The {{$Text$}} object, with which the operation should be performed.
TEXT_REPORT_GENERAL_DESC=The purpose of the action is to display the {{$Text$}}  object content in the report on the matrix run. A{{$Text$}} object  is a text-based pattern which consists of lines. It is applied when it is necessary to examine the content of the {{$Text$}} object.
TEXT_REPORT_EXAMPLE={{# \n#Id;#Action;$Content\nTXT1;TextCreate;'Text'\n#Action;$Title;$Text\nTextReport;'My text';TXT1.Out#}}
TEXT_REPORT_TEXT=The {{$Text$}} object , which it is required to output.
TEXT_REPORT_TITLE=The title of the text.
TEXT_REPORT_BEFORE_TESTCASE=It accepts the test case id before which the text will be displayed in the report.
TEXT_REPORT_TO_REPORT=This parameter is used for directing the output from the given object to the external report created by the {{$ReportStart$}} action.
TEXT_SAVE_TO_FILE_GENERAL_DESC=The purpose of the action is to save a {{$Text$}} object to a file. A {{$Text$}} object is a text-based pattern which consists of lines.
TEXT_SAVE_TO_FILE_OUTPUT_DESC=True, if saving is successful.
TEXT_SAVE_TO_FILE_EXAMPLE={{# \n#Id;#Action;$Content\nTXT1;TextCreate;'Text'\n#Id;#Action;$Text;$File\nTXT2;TextSaveToFile;TXT1.Out;'file.txt'\n#Assert;#Message\nTXT2.Out;'Assert!'#}}
TEXT_SAVE_TO_FILE_TEXT=The {{$Text$}} object ,which it is required to output.
TEXT_SAVE_TO_FILE_FILE=A path where to save a file and the file name with an extension.
TEXT_SET_VALUE_GENERAL_DESC=The purpose of the action is to change a specific line in the {{$Text$}} object. A {{$Text$}} object is a text-based pattern which consists of lines. It can be used when it is required to make changes in the object, which has a sufficiently large volume or when there is no access to the source from which it was obtained.
TEXT_SET_VALUE_EXAMPLE={{# \n#Id;#Action;$Content\nTXT1;TextCreate;'Text'\n#Action;$Line;$Text\nTextAddLine;'test';TXT1.Out\n#Action;$Line;$Text\nTextAddLine;'AAA';TXT1.Out\n#Action;$Line;$Text;$Index\nTextSetValue;'string successfully set';TXT1.Out;1#}}
TEXT_SET_VALUE_TEXT=The {{$Text$}} object , in which it is necessary to change a line.
TEXT_SET_VALUE_LINE=The input line.
TEXT_SET_VALUE_INDEX=The line index that it is required to change.
#//endregion

#//region actions.xml
XML_ADD_NODE_EXAMPLE={{`1. Create object Xml similar to the object from the first example.`}}{{`2. Create second Xml object of the following content:`}} {{# \n<ps id=\"gift\"> \n<body>P.S. I have a gift for you...</body> \n</ps>#}} {{`3. Add the Xml structure to it, applying the NewXml parameter.`}}{{`4. Make sure that the structure has been added and contains the transferred attribute.`}} {{# \n#Id;#Action;$File\nXML1;XmlLoadFromFile;'Xml.xml'\n#Action;$NodeName;$Xml;id\nXmlAddNode;'ps';XML1.Out;'gift'\n#Assert;#Message\nXML1.Out.getChild('ps').getAttribute('id') == 'gift';'No such attribute'#}}
XML_ADD_NODE_GENERAL_DESC=The purpose of the action is to add a new element at the end of the parent element of the Xml structure. It can be applied when necessary changes have to be done to the current object. If a NewXml parameter is indicated, then parameters {{$NodeName$}} and {{$Content$}} are ignored.
XML_ADD_NODE_ADDITIONAL_DESC=With the help of additional parameters, attributes can be transferred to the new node. The name of the parameter contains the name of an attribute, in the value of the parameter, the value of an attribute is specified. It is used when the insertion of the node is accompanied by the usage of NodeName and Content parameters.
XML_ADD_NODE_XML=The Xml structure to which the action has to be performed.
XML_ADD_NODE_NODE_NAME=The name of the added element.
XML_ADD_NODE_CONTENT_NAME=The contents of the new element.
XML_ADD_NODE_NEW_XML=The node that has to be added to the original structure. If it is filled, then parameters NodeName and Content are ignored.
XML_CHILDREN_GENERAL_DESC=The purpose of the action is to get the list of all the elements inside the transferred Xml. Later this list can be used for iteration and search for elements using their index.
XML_CHILDREN_OUTPUT_DESC=Returns the list (a List object) of all the affiliated nodes of the transferred element. Later this list can be used for iteration and search for elements using their index.
XML_CHILDREN_EXAMPLE=1. Create an Xml object by downloading it from the file. \n {{`Contents of the xml file:`}} {{# \n<note>\n<to>\n<friend>\n<name id="first">Tove</name>\n</friend>\n</to>\n<from>\n<friend>\n<name id="second">Jani</name>\n</friend>\n</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>#}} {{`2. Get a list of all affiliated elements.`}}{{`3. Make sure the list has been created and its size is more than 0.`}} \n{{# \n#Id;#Action;$File\nXML1;XmlLoadFromFile;'Xml.xml'\n#Id;#Action;$Xml\nXML2;XmlChildren;XML1.Out#}}
XML_CHILDREN_XML=An Xml structure to which an action needs to be applied. From the root of this structure, a list of elements will be drawn.
XML_COMPARE_GENERAL_DESC=The purpose of the action is to compare two Xml structures.
XML_COMPARE_OUTPUT_DESC=True, if the Xml structures are equal.
XML_COMPARE_EXAMPLE={{`1. Create an Xml structure from a file.`}}{{`2. Create two new Xml structures by choosing them using XPath from the uploaded Xml structure.`}}{{`3. Compare two Xml structures.`}}{{`4. Check the results of the comparison.`}} \n{{# \n#Id;#Action;$File\nXML1;XmlLoadFromFile;'Xml.xml'\n#Id;#Action;$Xpath;$NodeName;$Xml\nXML2;XmlSelect;'//friend';'name';XML1.Out\n#Id;#Action;$Expected;$Actual\nXMLCMP1;XmlCompare;XML2.Out.getChildren().get(0);XML2.Out.getChildren().get(1)\n#Assert;#Message\nXMLCMP1.Out;'Xmls does not equals'#}}
XML_COMPARE_ACTUAL=An Xml structure that has to be compared.
XML_COMPARE_EXPECTED=An Xml structure that has to be compared to.
XML_COMPARE_IGNORE_NODE_ORDER=Ignore the node order.
XML_CREATE_GENERAL_DESC=Create a new xml.
XML_CREATE_EXAMPLE={{# \n#Id;#Action \nxml;XmlCreate#}}
XML_FIND_FIRST_GENERAL_DESC=The purpose of the action is to return (restore) the Xml structure, allocated using the Xpath parameter from an Xml document.The first element corresponding to the condition, aswell as all its parts, will be returned. It is used when it is necessary to get a link to the part of a structure from the existing Xml document. The change of an output value of the action will lead to the change in the Xml structure from which it was obtained.
XML_FIND_FIRST_OUTPUT_DESC=The link to the Xml structure that contains the search result.
XML_FIND_FIRST_EXAMPLE={{`1. Create an object by downloading it from the file.`}}{{`Contents of an xml file:`}} {{# \n<note>\n<to>\n<friend>\n<name id="first">Tove</name>\n</friend>\n</to>\n<from>\n<friend>\n<name id="second">Jani</name>\n</friend>\n</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>#}} \n{{`2. Find the first element name.`}}{{`3. Check the output.`}} {{# \n#Id;#Action;$File\nXML2;XmlLoadFromFile;'Xml.xml'\n#Id;#Action;$Xpath;$Xml\nresult;XmlFindFirst;'//name';XML2.Out\n#Id;#Let\nresultNodeName;result.Out.getNodeName()\n#Id;#Let\nresultAttributeId;result.Out.getAttribute('id')\n#Assert;#Message\nresultNodeName == 'name' && resultAttributeId == 'first';'No such attribute'#}}
XML_FIND_FIRST_XML=An Xml structure in which the element needs to be detected.
XML_FIND_FIRST_X_PATH=The Xpath, the path to the element.
XML_FROM_TEXT_GENERAL_DESC=The purpose of this action is to parse the XML structure from a text.
XML_FROM_TEXT_OUTPUT_DESC=An XML structure.
XML_FROM_TEXT_EXAMPLE={{# \n#Id;#RawText;#Kind\nTEXT1;Text;Xml\n~;"<note>"\n~;"<to>"\n~;"<friend>"\n~;"<name id=""first"">Tove</name>"\n~;"</friend>"\n~;"</to>"\n~;"<from>"\n~;"<friend>"\n~;"<name id=""second"">Jani</name>"\n~;"</friend>"\n~;"</from>"\n~;"<heading>Reminder</heading>"\n~;"<body>Don't forget me this weekend!</body>"\n~;"</note>"\n#EndRawText\n#Id;#Action;$Text\nXML1;XmlFromText;TEXT1\n#Assert;#Message\nXML1.Result.toString() == 'Passed';'No such attribute'#}}
XML_FROM_TEXT_TEXT=A {{$Text$}} object related to the xml.
XML_LOAD_FROM_FILE_GENERAL_DESC=The purpose of this action is to download the XML structure from a file.
XML_LOAD_FROM_FILE_OUTPUT_DESC=An XML structure.
XML_LOAD_FROM_FILE_EXAMPLE={{`1. Create an Xml object by downloading it from the file.`}} {{`The ontents of the xml file:`}} {{# \n<note>\n<to>\n<friend>\n<name id="first">Tove</name>\n</friend>\n</to>\n<from>\n<friend>\n<name id="second">Jani</name>\n</friend>\n</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>#}} \n{{`2. Make sure that the object has been created and contains nodes.`}} {{# \n#Id;#Action;$File\nXML1;XmlLoadFromFile;'Xml.xml'\n#Action;$Xml;$Title\nXmlReport;XML1.Out;'XML'\n#Assert;#Message\nXML1.Result.toString() == 'Passed';'No such attribute'#}}
XML_LOAD_FROM_FILE_FILE=The path to the file.
XML_REMOVE_GENERAL_DESC=The purpose of this action is to delete all the elements appropriate for the given XPath.
XML_REMOVE_EXAMPLE={{`1. Create an Xml object by downloading it from the file.`}}{{`The contents of an xml file:`}} {{# \n<note>\n<to>\n<friend>\n<name id="first">Tove</name>\n</friend>\n</to>\n<from>\n<friend>\n<name id="second">Jani</name>\n</friend>\n</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>#}} \n{{`2. Delete the element in transferring XPath.`}}{{`3. Make sure that the element has been deleted and its content is not in the report.`}} {{# \n#Id;#Action;$File\nXML2;XmlLoadFromFile;'Xml.xml'\n#Action;$Xpath;$Xml\nXmlRemove;'//from';XML2.Out\n#Action;$Xml;$Title\nXmlReport;XML2.Out;'Report Title'#}}
XML_REMOVE_XML=An Xml structure that needs to be changed (altered).
XML_REMOVE_XPATH=The formula for the element search.
XML_REPORT_GENERAL_DESC=The purpose of this action is to map the content of the Xml object in the report of a matrix run. It is used when there is a need to go through the content of the Xml object.
XML_REPORT_EXAMPLE={{`1. Create an Xml object by downloading it from the file.`}}{{`The contents of the xml file:`}} {{# \n<note>\n<to>\n<friend>\n<name id="first">Tove</name>\n</friend>\n</to>\n<from>\n<friend>\n<name id="second">Jani</name>\n</friend>\n</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>#}} \n{{`2. Reflect the content of the Xml object in the report.`}} {{# \n#Id;#Action;$File\nXML2;XmlLoadFromFile;'Xml.xml'\n#Action;$Xml;$Title\nXmlReport;XML2.Out;'Report Title'#}}
XML_REPORT_XML=The Xml structure that needs to be kept (preserved).
XML_REPORT_TITLE=The heading of the output Xml structure.
XML_REPORT_TO_REPORT=This parameter is used for directing the output from the given object to the external report created by the {{$ReportStart$}} action.
XML_REPORT_BEFORE_TESTCASE=Allows to output the table to the highest level of the report.
XML_SAVE_TO_FILE_EXAMPLE={{`1. Save the Xml object to a filename.xml file`}}{{`2. Make sure that the check went well.`}}{{# \n#Id;#Action;$File\nXML2;XmlLoadFromFile;'Xml.xml'\n#Id;#Action;$Xml;$File\nXSTF;XmlSaveToFile;XML2.Out;'filename.xml'\n#Assert;#Message\nXSTF.Out;'File was not saved'#}}
XML_SAVE_TO_FILE_GENERAL_DESC=The purpose of this action is to keep (store) the transferred Xml structure in the assigned file.
XML_SAVE_TO_FILE_OUTPUT_DESC=True, if saved successfully.
XML_SAVE_TO_FILE_XML=The Xml structure that needs to be kept (preserved).
XML_SAVE_TO_FILE_FILE_NAME=The path to the file. If the given path already contains a file, then it will be replaced.
XML_SELECT_GENERAL_DESC=The purpose of the action is to return (restore) the Xml structure allocated using the Xpath parameter from an Xml document. The action returns all the elements corresponding the condition (an element) and all their (its) parts. The output value is a separate Xml structure and is not connected to the structure transferred in the Xml parameter.
XML_SELECT_OUTPUT_DESC=An Xml structure that contains the result of the selection.
XML_SELECT_EXAMPLE={{`Create an Xml object by downloading it from the file.`}}{{`The contents of the xml file:`}} {{# \n<note>\n<to>\n<friend>\n<name id="first">Tove</name>\n</friend>\n</to>\n<from>\n<friend>\n<name id="second">Jani</name>\n</friend>\n</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>#}}  \n{{`2. Find the element from.`}}{{`3. Make sure that a new Xml structure has been created.`}} {{# \nId;#Action;$File\nXML1;XmlLoadFromFile;'Xml.xml'\n#Id;#Action;$Xml;$Xpath;$NodeName\nXS;XmlSelect;XML1.Out;'//friend';'result_xml'\n#Action;$Xml;$Title\nXmlReport;XS.Out;'Result'\n#Assert;#Message\nXS.Out != null && XS.Out.getChildren().size() == 2;'Object is null or count of found children is not equals to 2'#}}
XML_SELECT_FIRST_GENERAL_DESC=The purpose of the action is to return (restore) the Xml structure allocated using the Xpath parameter from an Xml document. The first element conforming to the condition and all its parts will be returned. The output value is a separate Xml structure and is not connected to the structure transferred in the Xml parameter.
XML_SELECT_FIRST_OUTPUT_DESC=An Xml structure containing the result of a demand.
XML_SELECT_FIRST_EXAMPLE={{`1. Create an Xml object by downloading it from the file.`}}{{`The contents of the xml file:`}} {{# \n<note>\n<to>\n<friend>\n<name id="first">Tove</name>\n</friend>\n</to>\n<from>\n<friend>\n<name id="second">Jani</name>\n</friend>\n</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>#}} \n{{`2. Find the first element from.`}} {{`3. Check the outcome`}} {{# \n#Id;#Action;$File\nXML2;XmlLoadFromFile;'Xml.xml'\n#Id;#Action;$Xpath;$Xml\nresult;XmlFindFirst;'//name';XML2.Out\n#Assert;#Message\nresult.Out.getAttribute('id') == 'first';'No such attribute'#}}
XML_SELECT_XML=An Xml structure, in which the element needs to be detected.
XML_SELECT_NODE_NAME=The name of a core element to which the collection of the found elements will be allocated.
XML_SELECT_X_PATH=The Xpath, the path to the element.
XML_SELECT_FIRST_X_PATH=The Xpath, the path to the element.
XML_SELECT_FIRST_XML=An Xml structure in which an operation needs to be done.
XML_SELECT_FIRST_NODE_NAME=Insert the selection result into the assigned tag.
XML_SET_NODE_GENERAL_DESC=The purpose of the action is to transfer the content of the core element of the Xml structure.
XML_SET_NODE_ADDITIONAL_DESC=With the help of additional parameters, attributes for the the core node can be transferred. A parameter is given the name of an attribute, the value of the parameter has the value of the attribute.
XML_SET_NODE_EXAMPLE={{`1. Create an Xml object by downloading it from the file.`}}{{`2. Transfer the 'Text for insert' content to the core element`}}{{`3. The contents of the xml file:`}} {{# \n<note>\n<to>\n<friend>\n<name id="first">Tove</name>\n</friend>\n</to>\n<from>\n<friend>\n<name id="second">Jani</name>\n</friend>\n</from>\n<heading>Reminder</heading>\n<body>Don't forget me this weekend!</body>\n</note>#}} \n{{# \n#Id;#Action;$File\nXML2;XmlLoadFromFile;'Xml.xml'\n#Id;#Action;$Text;$Xml\nXSN;XmlSetNode;'Text for insert';XML2.Out.getChildren().get(0)\n#Action;$Xml;$Title\nXmlReport;XML2.Out;'Result'#}}
XML_SET_NODE_TEXT=The content that has to be transferred to the element.
XML_SET_NODE_XML=A type of Xml object to which an action needs to be applied.
#//endregion

#//endregion

#region api.wizard
WIZARD_CATEGORY_MATRIX=Matrix wizard
WIZARD_CATEGORY_CONFIGURATION=Configuration wizard
WIZARD_CATEGORY_GUI_DIC=GUI dictionary wizard
WIZARD_CATEGORY_MESSAGE_DIC=Message dictionary wizard
WIZARD_CATEGORY_OTHER=Universal wizard
#endregion

#//region tool

#region tool.main
TOOL_MENU_FILE=File
TOOL_OPEN_PROJECT=Open project
TOOL_CREATE_PROJECT=Create project
TOOL_PROJECT_FROM_GIT=Project from Git
TOOL_DICTIONARY=Dictionary
TOOL_MENU_LOAD=Load
TOOL_SYSTEM_VARIABLES=System variables
TOOL_MENU_MATRIX=Matrix
TOOL_MATRIX=Matrix
TOOL_PLAIN_TEXT=Plain text
TOOL_CSV=Csv
TOOL_MENU_NEW=New
TOOL_NEW_SYSTEM_VARS=System vars
TOOL_NEW_MATRIX=Matrix
TOOL_NEW_LIBRARY=Library
TOOL_NEW_DICTIONARY=Dictionary
TOOL_NEW_PLAIN_TEXT=Plain text
TOOL_NEW_CSV=Csv
TOOL_SAVE=Save
TOOL_SAVE_AS=Save as..
TOOL_SAVE_ALL=Save all
TOOL_LAST_OPENED_MATRIX=Last opened matrix
TOOL_RUN_FROM_FILE=Run from file
TOOL_OPEN_REPORT=Open report
TOOL_EXIT=Exit
TOOL_UNDO=Undo
TOOL_REDO=Redo
TOOL_SETTINGS=Settings
TOOL_SEARCH=Search
TOOL_LOGS=Logs
TOOL_STORE=Store
TOOL_SHOW_TABS=Show tabs
TOOL_MENU_EDIT=Edit
TOOL_MENU_VIEW=View
TOOL_MATRIX_START=Matrix start
TOOL_MATRIX_STOP=Matrix stop
TOOL_SHOW_WAITS=Show waits
TOOL_MATRIX_SCHEDULE=Matrix schedule
TOOL_MENU_GIT=Git
TOOL_MENU_PUBLISHING=Publishing
TOOL_CLONE=Clone
TOOL_COMMIT=Commit
TOOL_PUSH=Push
TOOL_PULL=Pull
TOOL_RESET=Reset
TOOL_STATUS=Status
TOOL_IGNORE=Ignore
TOOL_RESOLVE_CONFLICT=Resolve conflict
TOOL_BRANCHES=Branches
TOOL_TAGS=Tags
TOOL_CHANGE_CREDENTIAL=Change credential
TOOL_MENU_HELP=Help
TOOL_ACTIONS_HELP=Actions help
TOOL_ABOUT_PROGRAM=About program
TOOL_BUTTON_OPEN_MATRIX=Open matrix
TOOL_BUTTON_NEW_MATRIX=New matrix
TOOL_BUTTON_SAVE_DOCUMENT=Save {0}
TOOL_BUTTON_SAVE_AS_DOCUMENT=Save as.. {0}
TOOL_BUTTON_OPEN_MAIN_LOG=Show log \n
TOOL_BUTTON_SHOW_CALCULATOR=Show calculator \n
TOOL_BUTTON_UNDO=Undo \n{0}
TOOL_BUTTON_REDO=Redo \n{0}
TOOL_PROJECT=Project
TOOL_SAVE_CONFIGURATION=Save configuration
TOOL_RELOAD_CONFIGURATION=Reload configuration
EMPTY_CONFIGURATION_EXCEPTION= 
PRELOADER_COPYRIGHT=@ 2009-%d Exactpro Systems. All rights reserved.
PRELOADER_LOADING=Loading..
MAIN_INVALID_SETTINGS=Settings are invalid. Using default settings.
MAIN_ERROR_ON_RESTORE_DOCS=Error on restoring opened documents
MAIN_NOTHING_TO_SAVE=Nothing to save
MAIN_SAVE_SUCCESS=%s is saved successfully.
MAIN_ALL_FILES_SUCCESS=All files successfully saved
MAIN_OPEN_REPORT_TITLE=Choose report
MAIN_OPEN_REPORT_FILTER=HTML files (*.html)
MAIN_ADD_TO_TOOLBAR=Matrices %s already added to toolbar
MAIN_SHOW_INFO_CONFIG=Can't scroll outside of the project scope
MAIN_UNKNOWN_TYPE_OF_DOC=Unknown type of document: %s
MAIN_CHOOSE_FILE_TITLE=Choose %s file
MAIN_CHOOSE_FILE_FILTER=%s files (*.%s)
MAIN_LOAD_DOC_NOT_FOUND=File with name %s not found
MAIN_LOAD_DOC_ERROR_CLASS=Error on load %s %s
MAIN_CONTROLLER_ERROR_ON_REFRESH_CONF=Error on refresh configuration
MAIN_CONTROLLER_ERROR_ON_SAVE_CONF=Error on save config
MAIN_CONTROLLER_ERROR_ON_SET_TOOLTIP=Error on set tooltips or images
MAIN_CONTROLLER_ERROR_ON_LOAD_CONF=Error on load configuration
MAIN_CONTROLLER_ERROR_ON_CREATE_NEW_CONF=Error on create new configuration
MAIN_CONTROLLER_ERROR_ON_CLONE_PROJECT=Error on clone project from git
MAIN_CONTROLLER_ERROR_ON_LOAD_DIC=Error on load dictionary
MAIN_CONTROLLER_ERROR_ON_CREATE_DIC=Error on create new dictionary
MAIN_CONTROLLER_ERROR_ON_LOAD_VARS=Error on load system vars
MAIN_CONTROLLER_ERROR_ON_CREATE_VARS=Error on create new system vars
MAIN_CONTROLLER_ERROR_ON_LOAD_MATRIX=Error on load matrix
MAIN_CONTROLLER_ERROR_ON_CREATE_MATRIX=Error on create new matrix
MAIN_CONTROLLER_ERROR_ON_START_MATRIX=Error on start matrix
MAIN_CONTROLLER_ERROR_ON_STOP_MATRIX=Error on stop matrix
MAIN_CONTROLLER_ERROR_ON_RUN_MATRIX=Error on run matrix from file
MAIN_CONTROLLER_ERROR_ON_OPEN_REPORT=Error on open report
MAIN_CONTROLLER_ERROR_ON_TOOLBAR=Error on remove from toolbar
MAIN_CONTROLLER_ERROR_ON_OPEN_MATRIX=Error on open matrix
MAIN_CONTROLLER_ENTER_NAME=Enter a new name
MAIN_CONTROLLER_ERROR_ON_RENAME=Error on rename
MAIN_CONTROLLER_ERROR_ON_LOAD_PLAIN=Error on load plain text
MAIN_CONTROLLER_ERROR_ON_CREATE_PLAIN=Error on create new plain text
MAIN_CONTROLLER_ERROR_ON_LOAD_CSV=Error on load csv file
MAIN_CONTROLLER_ERROR_ON_CREATE_CSV=Error on create new csv file
MAIN_CONTROLLER_ERROR_ON_SAVE_DOC_AS=Error on save document as
MAIN_CONTROLLER_ERROR_ON_SAVE_DOC=Error on save document
MAIN_CONTROLLER_ERROR_ON_SAVE_ALL=Error on save all
MAIN_CONTROLLER_ERROR_ON_UNDO=Error on undo document
MAIN_CONTROLLER_ERROR_ON_REDO=Error on redo document
MAIN_CONTROLLER_ERROR_ON_SHOW_SEARCH=Error on show search
MAIN_CONTROLLER_ERROR_ON_SHOW_STORE=Error on show store
MAIN_CONTROLLER_ERROR_ALL_TABS=Error on show all tabs
MAIN_CONTROLLER_ERROR_ON_CLOSE_APP=Error on close application
MAIN_CONTROLLER_ERROR_ON_SHOW_PANEL=Error on show settings panel
MAIN_CONTROLLER_ERROR_ON_SHOW_ABOUT=Error on show about program
MAIN_CONTROLLER_ERROR_ACTIONS_PANEL=Error on show actions panel
MAIN_CONTROLLER_ERROR_ON_SHOW_CALC=Error on show calculator
MAIN_CONTROLLER_SHOW_CALC_VALUE='Helper'
MAIN_CONTROLLER_ERROR_ON_SHOW_STATUS=Error on show status
MAIN_CONTROLLER_ERROR_ON_MERGE=Error on merge
MAIN_CONTROLLER_ERROR_ON_BRANCHES=Error on show branches
MAIN_CONTROLLER_ERROR_ON_SHOW_TAGS=Error on show tags
MAIN_CONTROLLER_ERROR_ON_STATUS=Error on show status
MAIN_CONTROLLER_ERROR_ON_REPOSITORY=Error on clone repository
MAIN_CONTROLLER_ERROR_ON_COMMIT=Error on commit
MAIN_CONTROLLER_ERROR_ON_PUSH=Error on push
MAIN_CONTROLLER_ERROR_ON_PULL=Error on pull
MAIN_CONTROLLER_ERROR_ON_RESET=Error on reset
MAIN_CONTROLLER_ERROR_ON_SET_SHORTCUTS=Error on set Shortcuts
MAIN_CONTROLLER_CLEAR_LIST=Clear list
MAIN_CONTROLLER_ERROR_ON_CLEAR_LIST=Error on clear list
MAIN_CONTROLLER_ERROR_ON_RAM=Error on update RAM
MAIN_CONTROLLER_CHOOSE_TAB=Choose tab
#endregion

#region tool.wizard
WIZARD_SUCCESS=Wizard '{'{0}'}' success
WIZARD_ERROR_ON_CONFIG_REFRESH=Error on refresh config
WIZARD_ERROR_ON_SHOW_ELEMENT=Error on show element
WIZARD_ERROR_ON_DISPLAY_WINDOW=Error on display window
WIZARD_ERROR_ON_CREATE_DOCUMENT_2=Error on create {0} of kind {1}
WIZARD_ERROR_ON_LOAD_DOC_1=Error on load {0}
WIZARD_ERROR_ON_CREATE_DOC_1=Error on save {0}
WIZARD_WIZARD=Wizard
WIZARDS=Wizards
WIZARD_NO_ONE_ACCESSIBLE=No one wizard is accessible here
WIZARD_CHOOSE_WIZARD=Choose wizard
WIZARD_HELP=Help
WIZARD_ACCEPT=Accept
WIZARD_REFUSE=Refuse
REFACTOR_ADD_ITEM_MESSAGE=Add %s '%s' to '%s'
REFACTOR_SAVE_DOCUMENT=Save document '%s'
REFACTOR_LOAD_DOCUMENT=Load document '%s'
REFACTOR_REMOVE_ITEM_MESSAGE=Remove %s '%s' from '%s'
REFACTOR_SET_FIELD_MESSAGE=Set field '%s' to '%s' in '%s' : %d
#endregion

#region tool.wizard.all
WIZARD_START_CONNECTION=Start
WIZARD_SCAN=Scan
WIZARD_CHECK_TABLE=Check table
WIZARD_SELECT_CONNECTION_INFO=Please select a stored connection and a dialog
WIZARD_SELECT_DIALOG=Select dialog:
WIZARD_SELECT_STORED_CONN=Select stored connection:
WIZARD_CONNECT=Connect
WIZARD_STATUS_FAILED=Failed
WIZARD_STOP_APPLICATION=Stop
WIZARD_ERROR_ON_APPLICATION_STOP=Error on application stop
WIZARD_VARIABLE_WITH_NAME=A variable with name ''{0}'' already exists
WIZARD_STATUS_SUCCESS=Success
WIZARD_STATUS_LOADING=Loading...
WIZARD_ERROR_ON_CLOSE_WIZARD=Error on close wizard
WIZARD_TOOLTIP_NAME_OF_VAR=Enter name of variable here
WIZARD_LABEL_STATUS=Status:
WIZARD_LABEL_STORE_AS=Store as:
WIZARD_SELECT_CONVERTER_FROM_COMBOBOX=Select converter from the above combobox
WIZARD_STATUS_SCANNING=Scanning...
WIZARD_APP_RESIZE_DESCRIPTION=It converts the ApplicationResize action from the old to the new format (since v 4.5.7). \nThe old action contains 3 fields : Maximize, Minimize and Normal. \nThe user can set several parameters and it will throw exception. \nIn the new format, the user can''t do it, because these parameters are replaced with one new parameter : Resize \nExample. \nOld action : \n    #Action;$AppConnection;$Maximize \n    ApplicationResize;CALL_7;true \nwill converted to  \n    #Action;$AppConnection;$Resize \n    ApplicationResize;Resize.Maximize \n
WIZARD_REMOVE_EMPTY_PARAMETERS=It removes all empty parameters, that should be filled, from all matrices and libraries. \nSince JF v 4.5.10, if a parameter should be filled, but it is not filled - there will be an error on executing time. \nAll added parameters should be filled ( if needed) or not presented in the action. \nSee help for an item to understand, which parameters should be filled.
WIZARD_LABEL_DIALOG=Dialog :
WIZARD_LABEL_SELFID=Self id :
WIZARD_ERROR_ON_SET_SELF_ID=Error on set Self id
WIZARD_LABEL_ON_OPEN=On open
WIZARD_LABEL_ON_CLOSE=On close
WIZARD_SELF_ID_NOT_FOUND=Self control not found
WIZARD_SELF_CONTROL_IS_EMPTY=Self control is empty
WIZARD_APPLICATION_NOT_STARTED=Application is not started. \nStart it before calling the wizard.
WIZARD_CANT_FIND_SELF_CONTROL_IN_WINDOW=Can't find the Self control in the current window
WIZARD_DICTIONARY_EXCEPTION=DictionaryWizard exception
WIZARD_ERROR_ON_GENERATE_ON_OPEN=Error on generate onOpen
WIZARD_ERROR_ON_GENERATE_ON_CLOSE=Error on generate onClose
WIZARD_NOTHING_TO_UPDATE_INFO=Nothing to update
WIZARD_UPDATING_ELEMENTS=Updating elements
WIZARD_START_UPDATING_ITEMS=Start updating item {0} of {1}
WIZARD_ERROR_ON_ARRANGE_ONE=Error on arrange one
WIZARD_END_UPDATING=End updating {0} of {1}
WIZARD_ERROR_ON_FIND=Error on find elements
WIZARD_LABEL_CONNECTION=Connection :
WIZARD_NUMBER=Number
WIZARD_ABOUT=About
WIZARD_LESS=Less
WIZARD_GREAT=Great
WIZARD_BETWEEN=Between
WIZARD_LABEL_SELECT_DISTANCE=Select distance :
WIZARD_ALL=All
WIZARD_SIGNIFICANT=Significant
WIZARD_USE_DISTANCE=Use distances :
WIZARD_SELECT_FUNCTIONS=Select functions :
WIZARD_ALL_OK=All ok
WIZARD_CHECKING=Checking...
WIZARD_SELECT_MORE_ELEMENTS=Select more than zero elements from the listView above
WIZARD_CREATING_TABLE=Creating a table...
WIZARD_RELATION=Relation {0} -> {1}
WIZARD_CHECK=Check
WIZARD_SAVE=Save
WIZARD_CANT_SAVE_INVALID_DOSPEC=Can''t save, because {0} is an invalid doSpec function
WIZARD_CANT_CHECK_INVALID_DOSPEC=Can''t check, because {0} is an invalid doSpec function
WIZARD_NAMESPACES=Namespases
WIZARD_WHERE_TO_MOVE=Where to move:
WIZARD_INVOKE_FROM_NAMESPACE=The wizard must be invoked on SubCase from Namespace
WIZARD_MATRIX_CONTAINS_REFERENCES_2={0} contains {1} reference(s)
WIZARD_NO_CHANGES_NEEDED=No changes needed.
WIZARD_ERROR_ON_CREATE_COPY=Error on create copy
WIZARD_OLD_VALUE_1=old value : {0}
WIZARD_SELECT_NEW_VALUE=, select new value :
WIZARD_DICTIONARY_NAME_1=Dictionary : {0}
WIZARD_DICTIONARY_OK=Dictionary is ok
WIZARD_ERROR_ON_TABLE_CREATE=Error while creating the table. Please check file name or file extension.
WIZARD_NO_FILE_NAME=No file name specified.
WIZARD_ERROR_IN_FILENAME=Error in filename.
WIZARD_FILE_NOT_CSV_1=File ''{0}'' is not a CSV.
WIZARD_FILE_READ_ONLY_1=File ''{0}'' is read-only and can''t be changed.
WIZARD_DELIMITER_INCORRECT=Delimiter is incorrect or empty.
WIZARD_ENTER_XPATH=Enter XPath here
WIZARD_HELPER=Helper
WIZARD_RELATIVE=Relative
WIZARD_USE_TEXT=use text()
WIZARD_RESULT_TABLE_DESCRIPTION=It rename parameter 'Decoraded' to 'Decorated' in action ResultTable for all matrix and libraries.
LAYOUT_EDIT_WIZARD_SHORT_DESCRIPTION=Short description
LAYOUT_EDIT_WIZARD_DETAILED_DESCRIPTION=Detailed description
LAYOUT_WIZARD_SHORT_DESCRIPTION=This wizard creates RawTable and the DialogCheckLayout action
LAYOUT_WIZARD_DETAILED_DESCRIPTION={{`First of all, one of the stored connections and  one of the dialogs need to be selected.`}}{{`To store the connection, the user may use {{$ConnectionWizard$}} or store the connection inside a matrix.`}}{{`The image of the selected dialog will appear in the top left corner.`}}{{`Then, select one or more controls from the list or from the image.`}}{{`After it, check the options under the image:`}}{{`RadioButton {{$Number$}} will generate a DoSpec function with a specific number. E.g. {{$DoSpec.width(10)$}}.`}}{{`RadioButton {{$About$}} will generate a DoSpec function with the About function. The boundary values range from 90% to 110%. E.g. {{$DoSpec.width(about(10))$}}.`}}{{`RadioButton {{$Less$}} will generate DoSpec function with the Less function. E.g. {{$DoSpec.width(less(11))$}}.`}}{{`RadioButton {{$Great$}} - will generate DoSpec function with the Great function. E.g. {{$DoSpec.width(great(9))$}}.`}}{{`RadioButton {{$Between$}} - will generate DoSpec function with the Between function. The boundary values range from 0% to 200% E.g. {{$DoSpec.width(between(0, 20))$}}.`}}{{`After, choose the distance that will be generated: {{$All$}} or only {{$Significant$}}.`}}{{`Then, select or deselect the group of functions : `}}{{`visible : {{*DoSpec.visible*}}`}}{{`count : {{*DoSpec.count*}}`}}{{`dimension : {{*DoSpec.width*}} and {{*DoSpec.height*}}`}}{{`contains : {{*DoSpec.contains*}}`}}{{`near : {{*DoSpec.left*}}, {{*DoSpec.right*}}, {{*DoSpec.top*}} and {{*DoSpec.bottom*}}`}}{{`in-functions : {{*DoSpec.inLeft*}}, {{*DoSpec.inRight*}}, {{*DoSpec.inTop*}} and {{*DoSpec.inBottom*}}`}}{{`on-functions : {{*DoSpec.onLeft*}}, {{*DoSpec.onRight*}}, {{*DoSpec.onTop*}} and {{*DoSpec.onBottom*}}`}}{{`align : {{*DoSpec.lAlign*}}, {{*DoSpec.rAlign*}}, {{*DoSpec.tAlign*}} and {{*DoSpec.bAlign*}}`}}`}}{{`horizontally centered : {{*DoSpec.hCentered*}}`}}{{`vertically centered : {{*DoSpec.vCentered*}}`}}{{`For the selected controls, a table with relations between controls will be generated.`}}{{`The user can see the created relation by switching a toggle button at control intersections.`}}{{`The user can edit the created relation (add/remove/edit functions) and {{$save$}} it or {{$check$}}.`}}{{`The user can check the whole table by pushing the {{$Check table$}} button.`}}{{`The check result will appear in the area at the bottom of the wizard.`}}{{`After pressing the 'Accept' button, there will be 2 items added to the matrix - a {{$RowTable$}} with relations and the {{$DialogCheckLayout$}} action with the link to the RowTable`}}.
AUTOMATE_CONVERT_WIZARD_SHORT_DESCRIPTION=This wizard can help users automatically change something.
AUTOMATE_CONVERT_WIZARD_DETAILED_DESCRIPTION={{`This wizard can help users automatically change the matrix, dictionaries, etc., when new features are added.`}}{{`The user needs to select one of the available converters from the {{$combobox$}}.`}}{{`In the {{$area$}} below (under the combobox), there will be a short description of the converter.`}}{{`After that, click the {{$Scan$}} button and wait, until the wizard will find documents.`}}{{`Then, accept the changes by pushing the Accept button or refuse by pushing the Refuse button.`}}
CODE_EXAMPLE_WIZARD_SHORT_DESCRIPTION=This wizard creates an example from the matrix in java code.
CODE_EXAMPLE_WIZARD_DETAILED_DESCRIPTION=This wizard creates an example from the matrix in java code.
CONNECTION_WIZARD_SHORT_DESCRIPTION=The wizard creates a connection and saves it into the Store (View->Store).
CONNECTION_WIZARD_DETAILED_DESCRIPTION={{`You can use the saved connection in the dictionary and the matrices.`}}{{`The buttons for starting, connecting and stoping an application are on the top of the Wizard.`}}{{`The connection status indicator is under the buttons.`}}{{`Under the indicator, there is a textfield for the name of the variable for the created connection.`}}
DIALOG_FILL_WIZARD_SHORT_DESCRIPTION=This wizard creates DialogFills.
DIALOG_FILL_WIZARD_DETAILED_DESCRIPTION={{`First of all, select one of your stored connections and one of the dialogs.`}}{{`In the top-right corner, a list of controls from selected dialog will appear.`}}{{`In the center, the image of the selected dialog will appear.`}}{{`It is possible to select controls both from the list and the image.`}}{{`After pressing the 'Scan' button, a list of controls and their values will appear in bottom-right corner.`}}{{`After the 'Accept' button is pressed, DialogFill with selected controls and already filled 'Do' operations will be created in the matrix.`}}{{`The wizard only works with the following kind of controls: TextBox, Button, CheckBox, RadioButton, Label, Spinner and elements with 'Many' addition`}}
DICTIONARY_WIZARD_SHORT_DESCRIPTION=The wizard helps to fill dialogs with elements and find them after they were changed.
DICTIONARY_WIZARD_DETAILED_DESCRIPTION=To open the wizard, perform the following steps:`}}{{`1. Start the application.`}}{{`2. Fill the 'Self' section with a valid 'Self' control.`}}{{` `}}{{`All changes only apply after pressing the Accept button. If some changes are entered and the Refuse button is clicked - nothing happens.`}}{{` `}}{{`After opening the wizard, it starts to load and display the image and the tree from the application. `}}{{`After successfully displaying the tree, the wizard starts to search for the elements from the Run section and display these elements on the tree via special icons.`}}{{` `}}{{`The image pane (the top left pane) possibilities are:`}}{{`   1. Zoom in/out.`}}{{`   2. Inspect element (like in the XPath wizard)`}}{{`   3. Show/hide the ids of the found elements.`}}{{`   4. Show the mouse coordinates and the pixel color under the cursor.`}}{{` `}}{{`The table (top right pane) possibilities`}}{{`   1. Change the name of the current dialog.`}}{{`   2. Create and recreate an element in sections OnClose and OnOpen.`}}{{`If the OnClose/OnOpen button is red/green, this means, that the OnClose/OnOpen section is empty/not empty. `}}{{`When you press the OnClose/OnOpen button, this button will change to green and the element will appear in the OnClose/OnOpen section.`}}{{`
GHERKIN_WIZARD_SHORT_DESCRIPTION=This wizard creates a matrix structure from the Gherkin code
GHERKIN_WIZARD_DETAILED_DESCRIPTION={{`Paste the Gherkin text into the editor on the left. The editor highlights Gherkin keywords.`}}{{`When you paste a text, you may push the {{$Preview$}} button on the right to show the preview structure.`}}{{`A simple matrix structure is shown on the {{$tree$}} under the Preview button.`}}{{`The {{$Future$}} keyword will be converted to a comment for the first TestCase`}}{{`The {{$Scenario$}} keywords will be converted to a TestCase with a description.`}}{{`The other steps ({{$Given, And, etc$}}) will be converted to a Step with a description.`}}{{``}}{{`{{3Example:3}}`}}{{`The following items will be generated for the Gherkin code above (after pushing the {{$Accept$}} button ):`}}{{#// Some terse yet descriptive text of what is desired \n// In order to realize a named business value \n// As an explicit system actor \n// I want to gain some beneficial outcome which furthers the goal \n#TestCase;#Kind;#Depends;#For \nTestCase (Scenario) Some determinable business situation;;; \n    #Step;#Kind;#For;#Depends \n    'Step [Given ] some precondition';;; \n    #EndStep \n \n    #Step;#Kind;#For;#Depends \n    'Step [And ] some other precondition';;; \n    #EndStep \n \n    #Step;#Kind;#For;#Depends \n    'Step [When ] some action by the actor';;; \n    #EndStep \n \n    #Step;#Kind;#For;#Depends \n    'Step [And ] some other action';;; \n    #EndStep \n \n    #Step;#Kind;#For;#Depends \n    'Step [And ] yet another action';;; \n    #EndStep \n \n    #Step;#Kind;#For;#Depends \n    'Step [Then ] some testable outcome is achieved';;; \n    #EndStep \n \n    #Step;#Kind;#For;#Depends \n    'Step [And ] something else we can check happens too';;; \n    #EndStep \n#}}
GHERKIN_WIZARD_ENTER_CODE=Enter or paste the Gherkin code below :
GHERKIN_WIZARD_PREVIEW=Preview
GHERKIN_WIZARD_ERROR_PARSING=An error with parsing the text
NAMESPACE_WIZARD_SHORT_DESCRIPTION=This wizard helps to move SubCases between NameSpaces
NAMESPACE_WIZARD_DETAILED_DESCRIPTION={{`The wizard moves SubCases from one NameSpace to another and brings changes to all the affected matrices`}}{{`Simply choose SubCases that you want to move.`}}{{`Then, choose another NameSpace in the dropbox and press Scan(important).`}}{{`After, you will see the list of changes in the section below.`}}{{`Press accept to apply changes.`}}{{`It is recommended to make a backup of your files before calling this wizard.`}}
NAMESPACE_WIZARD_SCAN=Scan
REFACTOR_WIZARD_SHORT_DESCRIPTION=This wizard helps to manage SubCases.
REFACTOR_WIZARD_DETAILED_DESCRIPTION={{`The wizard is used to move SubCases from one NameSpace to another.`}}{{`At the top of the wizard, you can see information about the ID of the current SubCase and NameSpace, as well as text fields for a new ID.`}}{{`Press the Scan button to see which files will be affected.`}}{{`The wizard is used to move SubCase from one NameSpace to another and bring changes to all the affected matrices.`}}{{`To rename a SubCase, type the new ID into the text field.`}}{{`To move a SubCase, select another NameSpace in the combobox.`}}{{`You can both rename and move a SubCase at once.`}}
SUPPORTED_CONTROL_WIZARD_SHORT_DESCRIPTION=This wizard checks the dictionary for supported controls
SUPPORTED_CONTROL_WIZARD_DETAILED_DESCRIPTION=Since the {{$build 4.5.2$}}, before executing an operation, the tool checks that the current control is supported for the started plugin.{{`All the supported controls for the plugin are shown on the plugin help.`}}{{`The wizard can help check all the controls from the dictionary very easily.`}}{{`The wizard is a simple tree with one changable parameter - a new control value. For all the control that are not supported, it is necessary to change the control to a valid value.`}}{{`For example, for the web plugin, the tool does't support controls {{*treeItem*}} and {{*menuItem*}}.`}}{{`The tree root element is the name of the dictionary. All children of the root element are the dialogs.`}}{{` The children of the windows are the dialogs. And the children of the sections are the controls of the type that is not supported.`}}{{`After changing controls and pressing the {{$Accept$}} button, the dictionary will be saved.
TABLE_WIZARD_SHORT_DESCRIPTION=This wizard makes it easier to work with tables.
TABLE_WIZARD_DETAILED_DESCRIPTION={{`This wizard allows for the TableLoadFromFile action.`}}{{`With it, it is possible to change a table directly in the matrix, without using other tools.`}}
XPATH_WIZARD_SHORT_DESCRIPTION=This wizard helps to build an XPath expression to find an element on the screen.
XPATH_WIZARD_DETAILED_DESCRIPTION={{`The wizard has a screenshot of an application in the top and a tree of elements in the bottom.`}}{{`For selecting an element, you can use the selector (next to the zoom button) for selecting the items on the image or use elements tree.`}}{{`On the bottom of the wizard is Helper which helps to make xpath for an element.`}}{{`On the right bottom corner of the Helper is \"magic\" button which creates the best xpath for the current control.`}}{{`On press accept button xpath will be bound with current control.`}}{{`On press refuse button xpath nothing will happen.`}}
XPATH_WIZARD_COPY_TO_RELATIVE=Rel
REFACTOR_WIZARD_SCAN=Scan
REFACTOR_WIZARD_AFFECTED_FILES=Affected files:
REFACTOR_WIZARD_WRONG_PARAMETERS=Wrong parameters.
REFACTOR_WIZARD_SUBCASE=SubCase:
REFACTOR_WIZARD_NAMESPACE=NameSpace:
XPATH_WIZARD_NAME=XPath wizard
TABLE_WIZARD_NAME=Table wizard
SUPPORTED_CONTROLS_WIZARD_NAME=Supported controls wizard
REFACTOR_WIZARD_NAME=Refactor wizard
REFACTOR_WIZARD_NAMESPACES=Namespases
NAMESPACE_WIZARD_NAME=NameSpace wizard
GHERKIN_WIZARD_NAME=Gherkin wizard
DICTIONARY_WIZARD_NAME=Dictionary wizard
DIALOG_FILL_WIZARD_NAME=DialogFill wizard
AUTOMATE_CONVERT_WIZARD_NAME=Universal automate wizard
CONNECTION_WIZARD_NAME=Connection wizard
CODE_EXAMPLE_WIZARD_NAME=Code example wizard
LAYOUT_WIZARD_NAME=Layout wizard
LAYOUT_EDIT_WIZARD_NAME=Layout edit wizard
#endregion

#//region tool.dictionary.actions
ACTIONS_SEND_KEYS=Send keys
ACTIONS_DO_IT=Do it
ACTIONS_FIND=Find
ACTIONS_CLICK=Click
ACTIONS_GET_VALUE=Get value
ACTIONS_SWITCH_TO_CURRENT=Switch to current
ACTIONS_SWITCH_TO_PARENT=Switch to parent
ACTIONS_BACK=Back
ACTIONS_FORWARD=Forward
ACTIONS_REFRESH=Refresh
ACTIONS_CLOSE_WINDOW=Close window
ACTIONS_NEW_INSTANCE=New Instance
ACTIONS_MOVE=Move
ACTIONS_RESIZE=Resize
ACTIONS_MIN=Min
ACTIONS_MAX=Max
ACTIONS_NORMAL=Normal
ACTIONS_SIZE=Size
ACTIONS_GET=Get
ACTIONS_SET=Set
ACTIONS_START_TOOLTIP=Start the selected application
ACTIONS_CONNECT_TOOLTIP=Connect the selected application
ACTIONS_STOP_TOOLTIP=Stop the selected application
ACTIONS_STORED_CONNECTIONS=Stored connection:
ACTIONS_APP_PLUGIN=Application plugin:
ACTIONS_DO=Do
ACTIONS_SWITCH=Switch
ACTIONS_NAVIGATE=Navigate
ACTIONS_NEW=New
ACTIONS_POS_AND_SIZE=Pos&Size
ACTIONS_PROPS=Props
DIALOGS_POS_SIZE_GET=Dialog
DIALOGS_RESIZE=Resize
DIALOGS_MOVE=Move
DIALOGS_MIN=Min
DIALOGS_MAX=Max
DIALOGS_NORMAL=Normal
DIALOGS_SIZE=Size
DIALOGS_GET=Get
#//endregion

#region tool.search
SEARCH_MATRICES=Matrices
SEARCH_LIBRARIES=Libraries
SEARCH_GUI_DICTIONARIES=GUI dictionaries
SEARCH_CLIENT_DICTIONARIES=Client dictionaries
SEARCH_VARIABLES=System variables
SEARCH_OTHER_FILES=Other files
SEARCH_REPORTS=Reports
SEARCH_CASE_SENSITIVE=Case sensitive
SEARCH_WHOLE_WORD=Whole word
SEARCH_REGEXP=Re_gexp
SEARCH_MULTI_LINE=Multi line
SEARCH_SEARCHING=Searching...
SEARCH_FILE_MASK_AND_SCOPE=File mask and scope
SEARCH_CONTAINING_TEXT=Containing text
SEARCH_RESULTS=Results
SEARCH_SEARCH=Search
SEARCH_MATCHES_2={0} matches in {1} files
#endregion

#region tool.matrix.schedule
SCHEDULE_TITLE=Monitoring matrices
SCHEDULE_MATRIX_NAME=Matrix name
SCHEDULE_START_DATE=Start date
SCHEDULE_STATE=State
SCHEDULE_DONE=Done
SCHEDULE_REPORT=Report
#endregion

#region tool.matrix.watch
WATCHER_ADD_NEW=Add new
WATCHER_ADD_ALL=Add all
WATCHER_FX_CONTR_ERROR_ALL=Error on add all variables
WATCHER_FX_CONTR_ERROR_NEW=Error on add new expression
WATCHER_FX_CONTR_ERROR_CLOSE=Error on close watcher
WATCHER_FX_CONTR_WATCHER=Watcher
WATCHER_FX_CONTR_WATCHER_FOR=Watcher for %s
#endregion

#region tool.git

#region tool.git.branch
GIT_BRANCH_START=Start creating branch
GIT_BRANCH_ERROR_CREATE=Error on create new branch
GIT_BRANCH_CREATED=New branch was created
GIT_BRANCH_DELETE_MESSAGE=Are you sure that you want to delete the branch?
GIT_BRANCH_DELETE_QUESTION=Delete branch
GIT_BRANCH_CONTR_INIT_TITLE=Branches
GIT_BRANCH_CONTR_ENTER_NAME=Enter branch name
GIT_BRANCH_CONTR_ERROR_RENAME=Error on rename branch
GIT_BRANCH_CONTR_ERROR_CHECKOUT=Error on checkout
GIT_BRANCH_CONTR_ERROR_DELETE=Error on delete branch
GIT_BRANCH_CONTR_ENTER_NEW_NAME=Enter new name
GIT_BRANCH_NEW=New
GIT_BRANCH_RENAME=Rename
GIT_BRANCH_CHECKOUT=Checkout
GIT_BRANCH_MERGE=Merge
GIT_BRANCH_DELETE=Delete
GIT_BRANCH_CLOSE=Close
#endregion

#region tool.git.clone
GIT_CLONE_START=Start cloning
GIT_CLONE_SUCCESS=Successful cloning repo %s
GIT_CLONE_CANCELED_BY_USER=Task canceled by user
GIT_CLONE_ERROR=Error on cloning repository %s
GIT_CLONE_CONTR_CHOOSE_FOLDER=Choose folder to clone project
GIT_CLONE_CONTR_CLONE_ERROR=Error on clone project
GIT_CLONE_CONTR_ERROR_CANCEL=Error on cancel
GIT_CLONE_CONTR_INIT_DIALOG_TITLE=Clone Project
GIT_CLONE_LOCATION=Location to clone :
GIT_CLONE_URI=URI :
GIT_CLONE_PROJECT_NAME=Project Name :
GIT_CLONE_OPEN=Open project
GIT_CLONE_CLOSE=Clone
GIT_CLONE_CANCEL=Cancel
#endregion

#region tool.git.commit
GIT_COMMIT_START=Start commiting
GIT_COMMIT_SUCCESS=Successful committing
GIT_COMMIT_ERROR_ON_PUSH=Error on push
GIT_COMMIT_CANCELED_BY_USER=Task canceled by user
GIT_COMMIT_ERROR=Error on commiting \n %s
GIT_COMMIT_CONTR_SELECT_FILES=Need select one or more files to commit
GIT_COMMIT_CONTR_ERROR_CLOSE_CANCEL=Error on close/cancel
GIT_COMMIT_MESSAGE=Commit message
GIT_COMMIT_COMMIT=Commit
GIT_COMMIT_COMMIT_PUSH=Commit and push
GIT_COMMIT_CLOSE=Close
#endregion

#region tool.git.merge
MERGE_EDITOR_CONTR_ERROR_ON_CLOSE=Error on close
MERGE_EDITOR_CONTR_ERROR_SAVE_RESULT=Error on save result
MERGE_EDITOR_CONTR_MERGE_FOR_FILE=Merge editor for file '%s'
GIT_MERGE_CONTR_ACCEPT_THEIRS=Error on accept theirs
GIT_MERGE_CONTR_ACCEPT_YOURS=Error on accept yours
GIT_MERGE_CONTR_ERROR_ON_MERGE=Error on merge
GIT_MERGE_CONTR_RESOLVE_CONFLICTS=Resolve conflicts
MERGE_EDITOR_ACCEPT_YOURS=Accept yours
MERGE_EDITOR_ACCEPT_THEIRS=Accept theirs
MERGE_EDITOR_SAVE=Save
MERGE_EDITOR_CLOSE=Close
MERGE_EDITOR_YOUR_VERSION=Your version
MERGE_EDITOR_RESULT=Result
MERGE_EDITOR_THEIR_VERSION=Their version
GIT_MERGE_ACCEPT_THEIRS=Accept theirs
GIT_MERGE_ACCEPT_YOURS=Accept yours
GIT_MERGE_MERGE=Merge
GIT_MERGE_CLOSE=Close
#endregion

#region tool.git.pull
GIT_PULL_START=Start pulling
GIT_PULL_SUCCESS=Successful pulling
GIT_PULL_DONE=Pull done. All files up to date
GIT_PULL_ERROR_ON_DISPLAY=Error on display files
GIT_PULL_CANCELED_BY_USER=Task canceled by user
GIT_PULL_ERROR_ON_PULLING=Error on pulling
GIT_PULL_BEAN_NEED_MERGE=%s needMerge : %s
GIT_PULL_CONTR_ERROR_CLOSE_CANCEL=Error on close/cancel
GIT_PULL_CONTR_ERROR_PULLING=Error on pulling
GIT_PULL_CONTR_START_PULLING=Start pulling...
GIT_PULL_CONTR_PULLING=Pulling
GIT_PULL_CONTR_FILE_NAME=File name
GIT_PULL_CONTR_MERGE=Merge
GIT_PULL_CONTR_NEED_MERGE=Need merge
GIT_PULL_CONTR_ACCEPT_THEIRS=Accept Theirs
GIT_PULL_CONTR_ACCEPT_YOURS=Accept Yours
GIT_PULL_CONTR_ERROR_THEIRS=Error on accept theirs
GIT_PULL_CONTR_ERROR_YOURS=Error on accept ours
GIT_PULL_CONTR_ERROR_ON_MERGE=Error on merge
GIT_PULL_CONTR_ALL_OK=All ok
GIT_PULL_CANCEL=Cancel
GIT_PULL_PULL_FROM=Pull from:
GIT_PULL_PULL=Pull
#endregion

#region tool.git.push
GIT_PUSH_START=Start pushing
GIT_PUSH_SUCCESS=Successful pushing
GIT_PUSH_CANCELED_BY_USER=Task canceled by user
GIT_PUSH_ERROR_ON_PUSHING=Error on pushing \n %s
GIT_PUSH_ERROR_ON_DISPLAY=Error on display files
GIT_PUSH_COMMITS=Push commits
GIT_PUSH_ERROR_ON_CLOSE=Error on close
GIT_PUSH_ERROR_ON_PUSH=Error on push
GIT_PUSH_PUSH=Push
GIT_PUSH_CLOSE=Close
#endregion

#region tool.git.reset
GIT_RESET_CONTR_ERROR_ON_SELECT=Error on select
GIT_RESET_CONTR_ERROR_ON_RESET=Error on reset
GIT_RESET_CONTR_INIT_DIALOG_TITLE=Git reset
GIT_RESET_CONTR_COLUMN_ID=CommitId
GIT_RESET_CONTR_USERNAME=Username
GIT_RESET_CONTR_DATE=Date
GIT_RESET_TO=Reset to %s
GIT_RESET_COMMIT_MESSAGE=Commit message:
GIT_RESET_RESET=Reset
GIT_RESET_CANCEL=Cancel
#endregion

#region tool.git.status
GIT_STATUS_CONTR_ERROR_ON_REVERT=Error on revert selected items
GIT_STATUS_CONTR_GIT_STATUS=Git status
GIT_STATUS_CONTR_UP_TO_DATE=%s , Already up-to-date
GIT_STATUS_REVERT_SELECTED=Revert selected
GIT_STATUS_IGNORE_SELECTED=Ignore selected
GIT_STATUS_IGNORE_BY_PATTERN=Ignore by pattern
GIT_STATUS_FILE_PATTERN=File pattern:
GIT_STATUS_SELECT=Select
#endregion

#region tool.git.tag
GIT_TAG_START=Start pushing tags...
GIT_TAG_ERROR_ON_PUSH=Error on push tags
GIT_TAG_ALL_PUSHED=All tags were pushed
GIT_TAG_ERROR_ON_UPDATE_TASK=Error on updateTask
GIT_TAG_CONTR_INIT_TITLE=Tags
GIT_TAG_CONTR_ERROR_ON_DELETE=Error on delete tag
GIT_TAG_CONTR_ENTER_VERSION=Enter the version
GIT_TAG_CONTR_ENTER_MESSAGE=Enter the message
GIT_TAG_CONTR_ERROR_ON_PUSH=Error on push tag
GIT_TAG_NEW_TAG=New tag
GIT_TAG_PUSH_ALL=Push all tags
GIT_TAG_DELETE_TAG=Delete tag
GIT_TAG_CLOSE=Close
#endregion

CREDENTIAL_DIALOG_USERNAME=Username
CREDENTIAL_DIALOG_PASSWORD=Password
CREDENTIAL_DIALOG_CREDENTIAL=Credential
CREDENTIAL_DIALOG_STORE_CREDENTIAL=Store credential
GIT_UTIL_GIT_PUSH_EXCEPTION=You need to pull your local copy, merge, and after that, push
GIT_UTIL_GIT_PULL_EXCEPTION=\nNeed to commit the files before pulling :
#endregion

#region tool.matrix
PARAM_GRID_PANE_ERROR_CURRENT_ROW=Error on select current row
PARAM_GRID_PANE_ERROR_CHANGE_PARAMS=Error on change parameters
PARAM_PANE_CHOOSE_FILE_TO_OPEN=Choose file to open
PARAM_PANE_CHOOSE_FILE_TO_SAVE=Choose file to save
PARAM_PANE_CHOOSE_DIR=Choose directory
MATRIX_SCHEDULER_CHOOSE_MATRICES=Choose matrices
MATRIX_SCHEDULER_ERROR_START_MATRIX=Error on start matrix
MATRIX_SCHEDULER_ERROR_OPEN_REPORT=Error on report open
MATRIX_SCHEDULER_OPER_MATRIX_ERROR=Couldn't open the matrix %s
SCHEDULE_CONTR_ERROR_START=Error on start matrices
SCHEDULE_CONTR_ERROR_STOP=Error on stop matrices
SCHEDULE_CONTR_ERROR_SHOW=Error on show matrices
SCHEDULE_CONTR_ERROR_LOAD=Error on load matrices
WATCHER_FX_EMPTY_NAME_ERROR=Can't create a variable with an empty name
WATCHER_FX_NAME_ALREADY_EXISTS=Watcher already contains expression with this name '%s'
MATRIX_FX_NEIGHBORS_REMOVE=Only neighbors can be removed
MATRIX_FX_NEIGHBORS_COPY=Only neighbors can be copied
MATRIX_FX_MATRIX_STOPPED=Matrix stopped
MATRIX_FX_START_AT=Matrix will start at
MATRIX_FX_CONTR_MATRIX_STARTED=Matrix '%s' started...
MATRIX_FX_CONTR_MATRIX_FINISHED=Matrix '%s' finished.
MATRIX_FX_CONTR_PAUSED_ON=%d : Paused on
MATRIX_FX_CONTR_PARAMETER_FOR_START=Parameter for start
MATRIX_FX_CONTR_ERROR_ON_START=Error on starting matrix. See the matrix output for details.
MATRIX_FX_CONTR_ERROR_ON_MARKING=Error on marking all items
MATRIX_FX_CONTR_ERROR_SET_SHORTCUTS=Error on setting shortcuts
MATRIX_FX_CONTR_ERROR_SHOW_WATCHER=Error on showing watcher
MATRIX_FX_CONTR_COLOR_OFF=Color off
MATRIX_FX_CONTR_COLOR_ON=Color on
MATRIX_FX_ON_OFF=On/Off
MATRIX_FX_SWITCH_OFF_ALL=Switch off all
MATRIX_FX_SWITCH_ON_ALL=Switch on all
MATRIX_FX_OPEN_WATCHER=Open watcher
MATRIX_FX_STEP_MATRIX=Step matrix (Execute the current item and stop on the next one)
MATRIX_FX_SHOW_REPORT=Show report for the matrix
MATRIX_FX_DEFAULT_APP=Default app
MATRIX_FX_DEFAULT_CLIENT=Default client
#endregion

#region tool.newconfig

#region tool.newconfig.nodes
VARIABLES_TREE_NODE_REMOVE_VARS=Remove vars file
VARIABLES_TREE_NODE_OPEN_VARS_FILE=Open vars file
SQL_TREE_NODE_ADD_NEW=Add new sql
SQL_TREE_NODE_REMOVE=Remove
SQL_TREE_NODE_TEST=Test
SERVICE_TREE_NODE_ADD_NEW_SERVICE=Add new service
SERVICE_TREE_NODE_TEST_VERSION=Test versions
SERVICE_TREE_NODE_CLOSE_SERVICES=Stop services
SERVICE_TREE_NODE_REMOVE=Remove
SERVICE_TREE_NODE_START_SERVICE=Start service
SERVICE_TREE_NODE_STOP_SERVICE=Stop service
SERVICE_TREE_NODE_ADD_ALL_KNOWN_PARAMETERS=Add all known parameters
REPORT_TREE_NODE_CLEAR_FOLDER=Clear folder
REPORT_TREE_NODE_REFRESH=Refresh
REPORT_TREE_NODE_OPEN_REPORT=Open report
REPORT_TREE_NODE_REMOVE_REPORT=Remove report
MATRIX_TREE_NODE_REFRESH=Refresh
MATRIX_TREE_NODE_RENAME=Rename
MATRIX_TREE_NODE_OPEN_MATRIX=Open matrix
MATRIX_TREE_NODE_OPEN_AS_TEXT=Open as text
MATRIX_TREE_NODE_ADD_NEW_MATRIX=Add new matrix
MATRIX_TREE_NODE_REMOVE=Remove matrix
MATRIX_TREE_NODE_ADD_TO_TOOLBAR=Add to toolbar
MATRIX_TREE_NODE_REMOVE_FOLDER=Remove folder
MATRIX_TREE_NODE_EXCLUDE_FOLDER=Exclude matrix dir
LIBRARY_TREE_NODE_REFRESH=Refresh
LIBRARY_TREE_NODE_ADD_NEW=Add new library to
LIBRARY_TREE_NODE_EXCLUDE_FOLDER=Exclude library folder
LIBRARY_TREE_NODE_OPEN=Open library
LIBRARY_TREE_NODE_OPEN_AS_TEXT=Open as text
LIBRARY_TREE_NODE_REMOVE=Remove library
GLOBAL_HANDLER_NODE_CHANGE_HANDLER=Change handler
GLOBAL_HANDLER_NODE_REMOVE_HANDLER=Remove handler
GLOBAL_HANDLER_NODE_ERROR_REMOVE=Error while remove handler
FORMAT_TREE_NODE_ADD_FORMAT=Add format
FORMAT_TREE_NODE_REMOVE=Remove
FORMAT_TREE_NODE_REPLACE=Replace
EVALUATOR_TREE_NODE_REMOVE=Remove
EVALUATOR_TREE_NODE_REPLACE=Replace
EVALUATOR_TREE_NODE_ENTER_NEW=Enter new evaluator
CLIENT_TREE_NODE_ADD_NEW_CLIENT=Add new client
CLIENT_TREE_NODE_TEST_VERSIONS=Test versions
CLIENT_TREE_NODE_REFRESH=Refresh
CLIENT_TREE_NODE_EXCLUDE_FOLDER=Exclude client dictionary folder
CLIENT_TREE_NODE_OPEN_DICTIONARY=Open dictionary
CLIENT_TREE_NODE_REMOVE=Remove
CLIENT_TREE_NODE_POSSIBILITIES=Possibilities
CLIENT_TREE_NODE_ADD_ALL_KNOWN_PARAMETERS=Add all known parameters
APP_TREE_NODE_TEST_VERSION=Test versions
APP_TREE_NODE_STOP_APP=Stop apps
APP_TREE_NODE_REFRESH=Refresh
APP_TREE_NODE_EXCLUDE_FOLDER=Exclude app dictionary folder
APP_TREE_NODE_OPEN_DICTIONARY=Open dictionary
APP_TREE_NODE_REMOVE=Remove
APP_TREE_NODE_ADD_ALL_KNOWN_PARAMETERS=Add all known parameters
APP_TREE_NODE_SHOW_HELP=Show help
ABSTRACT_ENTRY_NODE_NOT_SUPPORTED=Not supported
ABSTRACT_ENTRY_NODE_ERROR=Error on set value of '%s' to parameter '%s' on class '%s'
APP_TREE_NODE_ADD_NEW_APP=Add new app
APP_TREE_NODE_ENTER_NEW_NAME=Enter new app name
APP_TREE_NODE_ERROR_ON_ADD=Error on add new application
APP_TREE_NODE_ERROR_ON_TEST=Error on test app version
APP_TREE_NODE_ERROR_ON_CLOSE=Error on close all applications
APP_TREE_NODE_ERROR_ON_STOP=Error on stop application. See log for details
APP_TREE_NODE_ERROR_OPEN_DIC=Error on open dictionary
APP_TREE_NODE_ERROR_REMOVE_ENTRY=Error on remove entry '%s'
APP_TREE_NODE_ERROR_ADD_ALL_PARAMS=Error on add all parameters for entry '%s'
APP_TREE_NODE_ERROR_SHOW_HELP=Error on show help
APP_TREE_NODE_APP_ENTRIES=App entries
APP_TREE_NODE_CHOOSE_PLUGIN=Choose plugin for adapter %s
APP_TREE_NODE_CHOOSE_DIC=Choose dictionary
APP_TREE_NODE_APP_DIC=App dictionaries
APP_TREE_NODE_ERROR_REFRESH_APP_DIC=Error on refresh app dictionaries
APP_TREE_NODE_ERROR_EXCLUDED_DIR=Error on excluded matrix directory
CLIENT_TREE_NODE_ADD_CLIENT=Add client
CLIENT_TREE_NODE_ENTRE_NEW_NAME=Enter new client name
CLIENT_TREE_NODE_ERROR_ADD_NEW_CLIENT=Error on add new client
CLIENT_TREE_NODE_CLIENT_ENTRIES=Client entries
CLIENT_TREE_NODE_ERROR_REMOVE_ENTRY=Error on remove entry '%s'
CLIENT_TREE_NODE_ERROR_ON_SHOW_POSSIBILITIES=Error on show possibilities for entry '%s'
CLIENT_TREE_NODE_ERROR_ADD_ALL_PARAMS=Error on add all parameters for entry '%s'
CLIENT_TREE_NODE_CHOOSE_CLIENT=Choose client for %s
CLIENT_TREE_NODE_CHOOSE_CLIENT_DIC=Choose client dictionary
CLIENT_TREE_NODE_CLIENT_DIC=Client dictionaries
CLIENT_TREE_NODE_REFRESH_CLIENT_DIC=Error on refresh client dictionaries
CLIENT_TREE_NODE_ERROR_OPEN_DIC=Error on open client dictionary
CLIENT_TREE_NODE_ERROR_EXCLUDED_DIR=Error on excluded matrix directory
CLIENT_TREE_NODE_ERROR_ON_TEST=Error on test app version
CONF_TREE_NODE_REFRESH=Refresh
CONF_TREE_NODE_ERROR_ON_REFRESH_CONF=Error on refresh configuration
CONF_TREE_NODE_SYSTEM_VARS=System variables
CONF_TREE_NODE_LIBRARY=Library
CONF_TREE_NODE_PLAIN_TEXT=Plain text
CONF_TREE_NODE_ERROR_ON_CREATE_DIC=Error on create new dictionary
CONF_TREE_NODE_ERROR_ON_CREATE_NEW=Error on create new %s
EVALUATOR_TREE_NODE_ADD_IMPORT=Add import
EVALUATOR_TREE_NODE_ENTER_IMPORT=Enter new import
EVALUATOR_TREE_NODE_ERROR_ON_ADD=Error on add new import
EVALUATOR_TREE_NODE_EVALUATOR=Evaluator
EVALUATOR_TREE_NODE_ERROR_REMOVE=Error on remove import
EVALUATOR_TREE_NODE_ERROR_CHANGE=Error on change evaluator import
FILE_SYSTEM_TN_VIEW=File system
FILE_SYSTEM_TN_USE_AS_MATRIX=Use as matrix src
FILE_SYSTEM_TN_ERROR_AS_MATRIX=Error on add folder as matrix src
FILE_SYSTEM_TN_USE_AS_LIBRARY=Use as library src
FILE_SYSTEM_TN_ERROR_AS_LIBRARY=Error on add folder as library
FILE_SYSTEM_TN_USE_AS_APP=Use as app dictionary
FILE_SYSTEM_TN_USE_AS_CLIENT=Use as Client dictionary
FILE_SYSTEM_TN_ERROR_AS_APP=Error on add folder as app dictionary
FILE_SYSTEM_TN_ERROR_AS_CLIENT=Error on add folder as client dictionary
FILE_SYSTEM_TN_SET_DIR=Set report dir
FILE_SYSTEM_TN_ERROR_SET=Error on set report folder
FILE_SYSTEM_TN_ADD_VAR=Add as user variables
FILE_SYSTEM_TN_ERROR_ADD_CSV=Error on add csv
FILE_TN_COPY_NAME=Copy name
FORMAT_TN_ADD_FORMAT=Add format
FORMAT_TN_ENTER_NEW=Enter new format
FORMAT_TN_ERROR_ON_ADD=Error on add new format
FORMAT_TN_VIEW=Format
FORMAT_TN_ERROR_ON_CHANGE=Error on change format
FORMAT_TN_ERROR_ON_REMOVE=Error on remove format
FORMAT_TN_ERROR_ON_REPLACE=Error on replace format
FORMAT_TN_REPLACE=Replace
FORMAT_TB_ERROR_REPLACE_FORMAT=Error on replace format
GLOBAL_HANDLER_NODE_VIEW=Global handlers
GLOBAL_HANDLER_NODE_ERROR_CHANGE=Error on change handler
GLOBAL_HANDLER_NODE_CHOOSE_SUBCASE=Choose subCase for handler %s
GLOBAL_HANDLER_NODE_ERROR_UPDATE=Error on update value
LIBRARY_TN_VIEW=Library
LIBRARY_TN_REFRESH_LIBS=Error on refresh libraries
LIBRARY_TN_ADD_NEW_TO=Add new library to
LIBRARY_TN_ENTER_NAME=Enter new name
LIBRARY_TN_ERROR_ON_CREATE=Error on create new library
LIBRARY_TN_EXCLUDE_FOLDER=Exclude library folder
LIBRARY_TN_ERROR_ON_EXCLUDE=Error on exclude library folder
LIBRARY_TN_ERROR_ON_OPEN_FILE=Error on open library file
LIBRARY_TN_ERROR_ON_REMOVE=Error on remove library
LIBRARY_TN_REMOVE_LIBRARY=Remove library
MATRIX_TN_VIEW=Matrix
MATRIX_TN_ERROR_ON_REFRESH=Error on refresh matrices
MATRIX_TN_ERROR_ON_REMOVE_DIR=Error on remove matrix directory
MATRIX_TN_ERROR_ON_OPEN_MATRIX=Error on open matrix
MATRIX_TN_ENTER_NEW_NAME=Enter new name
MATRIX_TN_ERROR_ON_CREATE_MATRIX=Error on create new matrix
MATRIX_TN_ERROR_ON_ADD_MATRIX=Error on add new matrix
MATRIX_TN_ERROR_ON_REMOVE=Error on remove matrix
MATRIX_TN_ERROR_ADD_TO_TOOLBAR=Error on add matrix to toolbar
MATRIX_TN_ERROR_ON_RENAME=Error on rename matrix
MATRIX_TN_ERROR_ON_REMOVE_FOLDER=Error on remove folder
MATRIX_TN_ERROR_ON_OPEN_MATRIX_FILE=Error on open matrix file
REPORT_TN_VIEW=Report folder
REPORT_TN_ERROR_ON_CLEAR=Error on clear folder
REPORT_TN_ERROR_ON_REFRESH=Error on refresh report folder
REPORT_TN_ERROR_ON_OPEN=Error on open report
REPORT_TN_ERROR_ON_REMOVE=Error on remove report
SERVICE_TN_ADD_SERVICE=Add service
SERVICE_TN_ENTER_NEW_NAME=Enter new service name
SERVICE_TN_ERROR_ON_ADD_NEW=Error on add new service
SERVICE_TN_ERROR_ON_TEST_VERSION=Error on test service version
SERVICE_TN_ERROR_ON_STOP_ALL=Error on stop all services
SERVICE_TN_ERROR_ON_STOP_APP=Error on stop application. See log for details
SERVICE_TN_VIEW=Service entries
SERVICE_TN_ERROR_REMOVE_ENTRY=Error on remove entry '%s'
SERVICE_TN_ERROR_ADD_ALL_PARAMS=Error on add all parameters for entry '%s'
SERVICE_TN_START_SERVICE=Start service
SERVICE_TN_ERROR_ON_START=Error on start entry
SERVICE_TN_STOP_SERVICE=Stop service
SERVICE_TN_ERROR_ON_STOP=Error on stop entry
SERVICE_TN_CHOOSE_SERVICE=Choose service
SQL_TN_ADD_NEW=Add new sql
SQL_TN_ENTER_NEW_NAME=Enter new sql name
SQL_TN_ERROR_ON_ADD_IMPORT=Error on add new import
SQL_TN_VIEW=Sql entries
SQL_TN_ERROR_ON_REMOVE_ENTRY=Error on remove sql entry
SQL_TN_ERROR_ON_TEST_ENTRY=Error on test sql entry
SQL_TN_CHOOSE_SQL=Choose sql
SQL_TN_ERROR_ON_SHOW_TEST_PANEL=Error on show test sql panel
SQL_TN_ERROR_ON_SHOW_TESTING_PANEL=Error on show testing panel
VARS_TN_VIEW=vars
VARS_TN_ERROR_ON_REMOVE=Error on remove vars file
VARS_TN_ERROR_ON_SAVE=Error on load system variable
#endregion

#region tool.newconfig.wizard
WIZARD_CC_CHOOSE_FOLDER=Choose folder to create new project
WIZARD_CC_DISPLAY_TITLE=New Project
WIZARD_CC_BUTTON_CREATE=Create
WIZARD_CC_BUTTON_CANCEL=Cancel
WIZARD_CONFIGURATION_PROJECT_NAME=Project name :
WIZARD_CONFIGURATION_PROJECT_LOCATION=Project location :
WIZARD_CONFIGURATION_MATRIX=Matrix
WIZARD_CONFIGURATION_LIBRARY=Library
WIZARD_CONFIGURATION_APP_DIC=App dic
WIZARD_CONFIGURATION_CLIENT_DIC=Client dic
WIZARD_CONFIGURATION_VARIABLES=Variables
WIZARD_CONFIGURATION_REPORT=Report
#endregion

#region tool.newconfig.testing
TESTING_CONNECTION_FX_SQL_SERVER=SQL server
TESTING_CONNECTION_FX_SERVER=Server
TESTING_CONNECTION_FX_DATABASE_NAME=Database name
TESTING_CONNECTION_FX_USER=User
TESTING_CONNECTION_FX_PASSWORD=Password
TESTING_CONNECTION_FX_TEST=Test
TESTING_CONNECTION_FX_CONTR_CONNECTED=Connected!
TESTING_CONNECTION_FX_CONTR_FAILED=Failed!
TESTING_CONNECTION_FX_CONTR_TEST=Test connection for %s
TESTING_CONNECTION_FX_CONTR_ERROR=Error on test sql connection
#endregion

COMPARE_ENUM_ALPHABET_ASC=Alphabet asc
COMPARE_ENUM_ALPHABET_DESC=Alphabet desc
COMPARE_ENUM_DATE_ASC=Date asc
COMPARE_ENUM_DATE_DESC=Date desc
CONFIG_FX_REFRESH_SUCCESS=Configuration was refreshed successfully!
CONFIG_FX_ENTER_NAME=Enter new name:
CONFIG_FX_FILE_EXISTS=A file with path %s already exists. The file will be rewritten.
CONFIG_FX_CONTINUE_QUESTION=Would you like to continue?
CONFIG_FX_FILE_CHANGED=The File was changed. Before renaming, the file will be saved.
CONFIG_FX_ENTER_VISIBLE_NAME=Enter a visible name
CONFIG_FX_MANY_NAMESPACES=Current library contains many namespaces : %s
CONFIG_FX_REMOVE_ANYWAY=Remove it anyway?
CONFIG_FX_OPEN_CLIENT_DIC=CLIENT DICTIONARY PATH '%s' IS OPENED
CONFIG_FX_ENTRY_ALREADY_STARTED=Entry with id '%s' already started
CONFIG_FX_EMPTY_ENTRY_NAME=Empty %s entry name
CONFIG_FX_ENTRY_ALREADY_PRESENT=%s entry with name %s already exists
CONFIG_FX_CANT_CREATE_FILE=Can't create new file
CONFIG_FX_POSSIBILITIES_FOR=Possibilities for %s
CONFIG_FX_POSSIBILITIES=Possibilities
CONF_FX_CONTR_ERROR_DISPLAY_EVALUATOR=Error on display evaluator
CONF_FX_CONTR_ERROR_DISPLAY_MATRIX=Error on display matrix
CONF_FX_CONTR_ERROR_DISPLAY_LIBS=Error on display libs
CONF_FX_CONTR_ERROR_DISPLAY_VARS=Error on display vars
CONF_FX_CONTR_ERROR_DISPLAY_SQL=Error on display sql entries
CONF_FX_CONTR_ERROR_DISPLAY_CLIENT_ENTRIES=Error on display client entries
CONF_FX_CONTR_ERROR_DISPLAY_SERVICE_ENTRIES=Error on display service entries
CONF_FX_CONTR_ERROR_DISPLAY_APP_ENTRIES=Error on display apps entries
CONF_FX_CONTR_ERROR_DISPLAY_FOLDER=Error on display report folder
CONF_FX_CONTR_CONFIG_SAVED=Config successfully saved
CONFIG_TOOL_BAR_SORTING_VIA=Sorting via %s
CONFIG_TREE_VIEW_ERROR_CALL=Error on call
#endregion

#region tool.search
SEARCH_SELECT_SCOPES=Select one or more scopes
SEARCH_ERROR_PLAIN_TEXT=Error on open plain text
SEARCH_ERROR_OPEN_MATRIX=Error on open matrix
SEARCH_ERROR_OPEN_DICTIONARY=Error on open dictionary
SEARCH_ERROR_OPEN_VARS=Error on open vars
SEARCH_ERROR_OPEN_FILE=Error on open file
SEARCH_INVALID_REGEXP=Invalid regexp pattern
SEARCH_INVALID_FILE_MASK=Invalid file mask pattern
AGGREGATE_RESULT_SCROLL=Scroll from configuration
AGGREGATE_RESULT_OPEN_AS_PLAIN=Open as plain text
AGGREGATE_RESULT_OPEN_AS_DOC=Open as document
#endregion

#region tool.settings
SETTINGS_PANEL_CONTR_SAVE_PASS=Settings saved to file [%s]  \n Restart application for all changes to apply
SETTINGS_PANEL_CONTR_SAVE_FAIL=Error to save. \nSee log for details
GIT_TAB_CONTR_CHOOSE_HOST=Choose known host file
GIT_TAB_CONTR_CHOOSE_SSH=Choose ssh identity file
SHORTCUTS_TAB_CONTR_NAVIGATION=Navigation
SHORTCUTS_TAB_CONTR_ACTIONS=Actions
SHORTCUTS_TAB_CONTR_SHORTCUTS_USED=This shortcut is used %s
SETTINGS_MAIN=Main
SETTINGS_SHORTCUTS=Shortcuts
SETTINGS_LOG=Log
SETTINGS_COLORS=Color
SETTINGS_GIT=Git
SETTINGS_MATRIX=Matrix
SETTINGS_WIZARD=Wizard
SETTINGS_RESTORE_DEFAULT=Restore all to default
WIZARD_TAB_MIN=Min
WIZARD_TAB_MAX=Max
WIZARD_TAB_TYPE=Type :
WIZARD_TAB_PATH=Path :
WIZARD_TAB_SIZE=Size :
WIZARD_TAB_POSITION=Position :
WIZARD_TAB_ATTR=Attr :
WIZARD_TAB_THRESHOLD=Threshold :
WIZARD_TAB_RESTORE_DEFAULT=Restore default
SHORTCUTS_TAB_FOR=Shortcuts for :
SHORTCUTS_TAB_ACCEPT=Accept
SHORTCUTS_TAB_DEFAULT=Default
SHORTCUTS_TAB_DELETE=Delete
SHORTCUTS_TAB_RESTORE_DEFAULT=Restore default
MATRIX_TAB_SCREENSHOT=Default Screenshot type
MATRIX_TAB_POPUP=Popup
MATRIX_TAB_POPUP_TOOLTIP=Show popups when a TestCase/Step starts (with a "started" message) or an error occurs during TestCase/Step execution ( with an error message) 
MATRIX_TAB_FOLD_NEW=Fold new items
MATRIX_TAB_FOLD_NEW_TOOLTIP=After pasting items into a matrix, these items will fold if this parameter is true 
MATRIX_TAB_RESTORE_DEFAULT=Restore default
MATRIX_TAB_OPEN_REPORT_AFTER_FINISHED=Open a report after executing a matrix
MAIN_TAB_MAX_COUNT=Max last matrix count :
MAIN_TAB_TIME_NOTIFICATION=Time notification :
MAIN_TAB_SEC=sec.
MAIN_TAB_THEME=Theme :
MAIN_TAB_FONT=Font :
MAIN_TAB_FONT_SIZE=Font size :
MAIN_TAB_SELECT_LANGUAGE=Select language:
MAIN_TAB_FULLSCREEN_MODE=Use fullscreen mode
MAIN_TAB_VIEWER=Use external report viewer
MAIN_TAB_XPATH=Use fullscreen XPath dialog
MAIN_TAB_COPYRIGHT=Copyright
MAIN_TAB_RESTORE_DEFAULT=Restore default
LOG_TAB_FATAL=FATAL :
LOG_TAB_ERROR=ERROR :
LOG_TAB_WARN=WARN :
LOG_TAB_ALL=ALL :
LOG_TAB_INFO=INFO :
LOG_TAB_DEBUG=DEBUG :
LOG_TAB_TRACE=TRACE :
LOG_TAB_RESTORE_DEFAULT=Restore default
GIT_TAB_HOSTS=Git known hosts :
GIT_TAB_SSH=Git SSH identity :
GIT_TAB_RESTORE_DEFAULT=Restore default
COLORS_TAB_DEFAULT=Default
COLORS_TAB_EXPAND_ALL=Expand all
COLORS_TAB_COLLAPSE_ALL=Colapse all
COLORS_TAB_CLEAR_ALL=Clear all
COLORS_TAB_RESTORE_DEFAULT=Restore default
#//endregion

#region tool.helpers
DIALOGS_HELPER_PARAMETERS=Parameters
DIALOGS_HELPER_WARNING=Warning
DIALOGS_HELPER_FILE_CHANGE_HEADER=File %s was changed by another process
DIALOGS_HELPER_FILE_CHANGE_CONTENT=Reload it?
DIALOGS_HELPER_DT_PICKER_TITLE=Select date
DIALOGS_HELPER_DT_PICKER_HEADER=Choose date
DIALOGS_HELPER_SAVE=Save
DIALOGS_HELPER_NOTHING_TO_SHOW=Nothing to show
DIALOGS_HELPER_SAVE_FILE_HEADER=File %s was changed
DIALOGS_HELPER_SAVE_FILE_CONTENT=Do you want to save?
DIALOGS_HELPER_UNSUPPORTED_MODE=Unsupported mode
DIALOGS_HELPER_EXCEPTION_UNKNOWN_TYPE=Unknown type of document:
DIALOGS_HELPER_HELP_FOR=Help for %s
DIALOGS_HELPER_ABOUT_PROGRAM=About program
DIALOGS_HELPER_VERSION_FORMAT=Version: %25s
DIALOGS_HELPER_COPYRIGHT=\n \n \nThis is unpublished, licensed software, confidential and proprietary information which is the \nproperty of Exactpro Systems, LLC or its licensors. \nQuality Assurance & Related Development for Innovative Trading Systems. \n \nCopyright (c) 2009-2018, Exactpro Systems, LLC. All rights reserved.
DIALOGS_HELPER_ERROR_ON=Error on . \n
DIALOGS_HELPER_DESKTOP_NOT_SUPPORTED=Desktop is not supported. Used internal report browser.
DIALOGS_HELPER_REPORT_TITLE=Report
DIALOGS_HELPER_UNKNOWN_MATRIX=Unknown matrix
DIALOGS_HELPER_REPORT_FOR=Report for %s
DIALOGS_HELPER_ERROR_ON_OPEN=Error on open matrix from report
DIALOGS_HELPER_ERROR_ON_SHOW=Error on show report
DIALOGS_HELPER_ACTIONS_HELP=Actions help
DIALOGS_HELPER_SAVE_AS_TITLE=Save %s
DIALOGS_HELPER_SAVE_AS_FILTER=%s files(*.%s)
#endregion

#region tool.custom
FIND_LIST_VIEW_FIND=find
USER_INPUT_DIALOG_CHOOSE_FILE=Choose file to open
USER_INPUT_DIALOG_CHOOSE_DIR=Choose directory
USER_INPUT_DIALOG_TITLE=Title

#region tool.custom.browser
REPORT_BROWSER_ERROR_ON_LOAD=Error on load matrix
#endregion

#region tool.custom.date
DATE_TIME_PICKER_SKIN_HOURS=Hours:
DATE_TIME_PICKER_SKIN_MINUTES=Minutes:
DATE_TIME_PICKER_SKIN_SECONDS=Seconds:
#endregion

#region tool.custom.logs
LOGS_SELECT_FILE=Select log file :
LOGS_REFRESH=Refresh
LOGS_LOGS=Logs
#endregion

#region tool.custom.elementstable
EDIT_ELEMENT=Edit element
REMOVE_ELEMENT=Remove element
ERROR_ON_EDIT=Error on edit element
REMOVE_ELEMENT_QUESTION=Are you sure you want to remove this element?
SET_RELATION=Set relation
CHANGE_ELEMENT=Change element
ERROR_ON_SET_PARAMETER=Error on set parameters
ERROR_ON_SET_NEW_COLUMN=Error on set new columns
ELEMENTS_TABLE_ID=Id
ELEMENTS_TABLE_KIND=Kind
ELEMENTS_TABLE_XPATH=XPath
ELEMENTS_TABLE_NEW=New
ELEMENTS_TABLE_COUNT=Count
ELEMENTS_TABLE_OPTION=Option
ELEMENTS_TABLE_OWNER=Owner
ELEMENTS_TABLE_ADDITIONAL=Additional
ELEMENTS_TABLE_REF=Ref
ELEMENTS_TABLE_TIMEOUT=Timeout
ELEMENTS_TABLE_VISIBILITY=Visibility
ELEMENTS_TABLE_COLUMNS=Columns
ELEMENTS_TABLE_WEAK=Weak
ELEMENTS_TABLE_UID=UID
ELEMENTS_TABLE_CLASS=Class
ELEMENTS_TABLE_NAME=Name
ELEMENTS_TABLE_TITLE=Title
ELEMENTS_TABLE_ACTION=Action
ELEMENTS_TABLE_TEXT=Text
ELEMENTS_TABLE_TOOLTIP=Tooltip
#endregion

#regionexpfield
ERROR_ON_CONFIGURATION=Error on configuration [%s]
#endregion

#//region tool.custom.find
FIND_PANEL_MATCH_CASE=Match case
FIND_PANEL_MATCH_CASE_WHOLE_WORD=Whole word
FIND_PANEL_MATCH_CASE_FOUND_ZERO=Found 0
FIND_PANEL_MATCH_CASE_FIND=Find
FIND_PANEL_MATCH_CASE_FIND_PREVIOUS=Previous
FIND_PANEL_MATCH_CASE_FIND_FOUND_2={0} of {1}
FIND_PANEL_MATCH_CASE_FIND_FOUND_1=Found {0}
FIND_PANEL_MATCH_CASE_FIND_NEXT=Next
#endregion

#region tool.custom.grideditor
SSC_ADD_BEFORE=Add column before
SSC_ADD_AFTER=Add column after
SSC_MOVE_LEFT=Move left this column
SSC_MOVE_RIGTH=Move right this column
SSC_REMOVE=Remove columns
SSC_RENAME=Rename
SSC_SWITCH_OFF=Switch off
SSC_SWITCH_ON=Switch on
SSW_ADD_BEFORE=Add before
SSW_ADD_AFTER=Add after
SSW_MOVE_UP=Move up this row
SSW_MOVE_DOWN=Move down this row
SSW_REMOVE=Remove
SSW_COPY=Copy
SSW_COPY_WITH_HEADER=Copy with header
SSW_PASTE=Paste
SSW_PASTE_WITH_HEADER=Paste with header
SSW_PASTE_ERROR=Can't paste to the selected cells, because there are more than one selected cells
CANT_REMOVE_ALL_ROWS=Can't remove all rows from table
VERTICAL_HEADER_ADD_BEFORE=Add before row %d
VERTICAL_HEADER_ADD_AFTER=Add after row %d
VERTICAL_HEADER_MOVE_UP=Move this row up 
VERTICAL_HEADER_MOVE_DOWN=Move this row down 
VERTICAL_HEADER_REMOVE=Remove rows
RECTANGLE_SELECTION_GRID_RANGE=GridRange{top=%d, bottom=%d, left=%d, right=%d}
SPREADSHEET_CELL_BASE_TO_STRING=cell[%d][%d]
#endregion

#region tool.custom.helper
FORMULA_INTERPRETER=Formula interpreter
PARAMETERS_NAME=Parameters name = {0}
ALL_VARIABLES_FOR_CURRENT_MATRIX=All variables for current matrix
HELPER_ERROR_STATIC_METHODS=Error on change visible static methods
HELPER_ERROR_VOID_METHODS=Error on change visible void methods
HELPER_ERROR_ON_SORTING_METHODS=Error on sorting methods
HELPER_ERROR_ON_ALL_VARS=Error on show all variables
HELPER_ERROR_ON_SHOWING=Error on showing
HELPER_ERROR_ON_EVALUATE=Error on evaluate
HELPER_ERROR_ON_FUNCTION_INSERT=Error on function insertion
HELPER_ERROR_ON_CLICK=Error on click
HELPER_ERROR_ON_KEY_PRESSED=Error on key pressed
HELPER_ERROR_COMPILE=Compile error.  \n %s
HELPER_ERROR_EVALUATE=Can't evaluate.  \n %s
HELPER_ERROR_SET_VARIABLES=Error on set variables
HELPER_FX_VOID=void f()
HELPER_FX_STATIC=static
HELPER_FX_A_Z=A..Z
HELPER_FX_VARS=vars
HELPER_FX_CLASS=Class
#//endregion

#region tool.custom.find
CUSTOM_GRID_ERROR=Before show grid, you need to set group
IMAGE_VIEW_WAITING=Waiting for image...
IMAGE_VIEW_PIXEL_COLOR=Pixel color :
#endregion

#region tool.custom.store
STORE_CONTROLLER_STORE=Store
STORE_CONTROLLER_EDIT_STORE_VARIABLE=Edit store variable
STORE_VARIABLE_NAME=Name
STORE_VARIABLE_TYPE=Type
STORE_VARIABLE_VALUE=Value
STORE_VARIABLE_DEL=Del
#endregion

#region tool.custom.tab
CUSTOM_TAB_ERROR_ON_RELOAD=Error on reload
#endregion

#region tool.custom.table
CUSTOM_TABLE_ADD_NEW=Add new variable
CUSTOM_TABLE_REMOVE_SELECTED=Delete selected
CUSTOM_TABLE_REMOVE_ALL=Delete all
#endregion

#region tool.custom.treetable
DISPLAY_DRIVER_FX_EMPTY_FIELD=Field can't be empty. The initial size was set.
DISPLAY_DRIVER_FX_CANT_OPEN=Couldn't open the matrix %s
MATRIX_CM_BREAKPOINT=Breakpoint
MATRIX_CM_ADD_ITEM=Add item
MATRIX_CM_DELETE=Delete
MATRIX_CM_COPY=Copy
MATRIX_CM_CUT=Cut
MATRIX_CM_PASTE=Paste
MATRIX_CM_GO_TO_LINE=Go to line..
MATRIX_CM_HELP=Help
MATRIX_CM_ADD_PARAM=Add param to end
MATRIX_CM_ERROR_ON_ADD=Error on add before
MATRIX_CM_ERROR_ON_COPY=Error on copy
MATRIX_CM_ERROR_ON_PASTE=Error on paste
MATRIX_CM_ERROR_ON_MATRIX_NUMBER=Matrix item with number '%d' not found
MATRIX_CM_ERROR_ON_SHOW_HELP=Error on show help
MATRIX_CM_ENTER_NUMBER=Enter line number
MATRIX_PCM_REMOVE=Remove
MATRIX_PCM_MOVE_LEFT=Move left
MATRIX_PCM_MOVE_RIGHT=Move right
MATRIX_PCM_ADD=Add parameter after
MATRIX_PCM_ALL=All parameters ...
MATRIX_PCM_FOR=For parameter
MATRIX_PCM_WIZARD_ERROR=No one wizard is accessible here
MATRIX_PCM_CHOOSE_WIZARD=Choose wizard
MATRIX_PCM_ERROR_SHOW_ALL=Error on show all parameters
MATRIX_TREE_VIEW_ERROR_ON_DO=Error on do actions by shortcuts
MATRIX_TREE_VIEW_ERROR_ON_HIDE=Error on hide all
MATRIX_TREE_VIEW_SET_REPORT_ITEM=Set report %s item
MATRIX_TREE_VIEW_SET_ITEM=Set %s item
RAW_MESSAGE_TV_ADD_ALL_REQUIRED=Add all required
RAW_MESSAGE_TV_ADD_FIELDS=Add fields
RAW_MESSAGE_TV_ADD_ITEM=Add item
RAW_MESSAGE_TV_ADD_GROUP=Add group
RAW_MESSAGE_TREE_VIEW_CHOOSE_FOR=Choose for
MESSAGE_BEAN_TO_STRING_WITH_VALUE=Name= '%s', Value= '%s'
MESSAGE_BEAN_TO_STRING=Name= '%s'
#endregion

#region tool.custom.xmltree
XML_TREE_TABLE_CELL_COPY_NODE=Copy node
XML_TREE_VIEW_WAITING=Waiting for document...
#endregion

#endregion

#region tool.documents
CSV_FX_CONTROLLER_ERROR_DELIMITER=Error on set delimiter
ACTIONS_CONTROLLER_TITLE=Actions
ACTIONS_CONTROLLER_ERROR_ON_START=Error on start application
ACTIONS_CONTROLLER_ERROR_ON_CONNECT=Error on connect to application
ACTIONS_CONTROLLER_ERROR_ON_STOP=Error on stop application
ACTIONS_CONTROLLER_ERROR_ON_OPERATE=Error on operate
ACTIONS_CONTROLLER_ERROR_ON_SEND_KEYS=Error on send keys
ACTIONS_CONTROLLER_ERROR_ON_CLICK=Error on click
ACTIONS_CONTROLLER_ERROR_ON_FIND=Error on find
ACTIONS_CONTROLLER_ERROR_ON_GET_VALUE=Error on get value
ACTIONS_CONTROLLER_ERROR_ON_SWITCH=Error on switch to window
ACTIONS_CONTROLLER_ERROR_ON_SWITCH_TO_CURRENT=Error on switch to current
ACTIONS_CONTROLLER_ERROR_ON_REFRESH=Error on refresh
ACTIONS_CONTROLLER_ERROR_ON_REFRESH_TITLES=Error on refresh titles
ACTIONS_CONTROLLER_ERROR_ON_NAVIGATE_BACK=Error on navigate back
ACTIONS_CONTROLLER_ERROR_ON_NAVIGATE_FORWARD=Error on navigate forward
ACTIONS_CONTROLLER_ERROR_ON_CLOSE_WINDOW=Error on close window
ACTIONS_CONTROLLER_ERROR_ON_NEW_INSTANCE=Error on new instance
ACTIONS_CONTROLLER_ERROR_ON_MOVE_TO=Error on move to
ACTIONS_CONTROLLER_ERROR_ON_SET_PROP=Error on set property
ACTIONS_CONTROLLER_ERROR_ON_GET_PROP=Error on get property
ACTIONS_CONTROLLER_ERROR_ON_RESIZE=Error on resize
ACTIONS_CONTROLLER_ERROR_ON_FILL_RESIZE=No one resizing parameter is filled.
ELEMENT_IC_TITLE=Element info
ELEMENT_IC_ERROR_ON_CHANGE_OWNER=Error on change owner
ELEMENT_IC_ERROR_ON_CHANGE_CK=Error on change ControlKind
ELEMENT_IC_ERROR_ON_CHANGE_ADDITION=Error on change addition
ELEMENT_IC_ERROR_ON_CHANGE_REFERENCE=Error on change reference
ELEMENT_IC_ERROR_ON_CHANGE_VISIBILITY=Error on change visibility
ELEMENT_IC_ERROR_ON_CHANGE_HEADER=Error on header
ELEMENT_IC_ERROR_ON_CHANGE_ROWS=Error on change rows
ELEMENT_IC_ERROR_ON_CHANGE_WEAKNESS=Error on change weakness
ELEMENT_IC_ERROR_ELEMENT_EXISTS=Element with id %s already exists.
ELEMENT_IC_ERROR_ON_UPDATE_FIELD=Error on update field '%s'
ELEMENT_IC_ERROR_SUPPORT_CONTROL=Plugin %s doesn't support control %s. Control changed to Any.
NAVIGATION_CONTROLLER_COPY_DIALOG=Error on copy dialog
NAVIGATION_CONTROLLER_COPY_ELEMENT=Error on copy element
NAVIGATION_CONTROLLER_PASTE_DIALOG=Error on paste dialog
NAVIGATION_CONTROLLER_PASTE_ELEMENT=Error on paste element
NAVIGATION_CONTROLLER_NEW_ELEMENT=Error on new element
DICTIONARY_FX_NO_DIALOGS_FOR_PASTE=No available dialogs for pasting. First, copy a dialog before pasting.
DICTIONARY_FX_ERROR_ON_SET_OWNER=Error on set owner
DICTIONARY_FX_REMOVE_HEADER=This element is the owner for other elements
DICTIONARY_FX_REMOVE_BODY=Remove it anyway?
DICTIONARY_FX_SET_FIELD_ERROR=Cannot set field '%s' to value '%s'
DICTIONARY_FX_CHECK_FAIL=Check is failed:
DICTIONARY_FX_CHECK_PASS=Check is passed
DICTIONARY_FX_TITLES_REFRESH=Titles refreshed successfully
DICTIONARY_FX_CANT_CLOSE_WINDOW=Can not close the window
DICTIONARY_FX_SERIALIZABLE_ONLY=You must only set a Serializable or a null value
DICTIONARY_FX_SELF_CONTROL_ERROR=Can't find the 'Self' control for the current window.
DICTIONARY_FX_START_BEFORE=Start an application before performing any actions
DICTIONARY_FX_WAIT=Please wait until the previous command is complete
SYSTEMS_VARS_FX_CONTR_ERROR=Error on adding new var
FX_DOC_FACTORY_ERROR_INFO=ControllerInfo attribute is not found for %s
CSV_FX_DELIMITER=Delimiter
CSV_FX_CONTR_COMMA=comma
CSV_FX_CONTR_SEMICOLON=semicolon
CSV_FX_CONTR_COLON=colon
CSV_FX_CONTR_DASH=dash
CSV_FX_CONTR_TAB=tab
ELEMENT_INF0_OWNER=Owner:
ELEMENT_INF0_ID=ID:
ELEMENT_INF0_CONTROL=Control:
ELEMENT_INF0_ADDITION=Addition:
ELEMENT_INF0_REF=Ref:
ELEMENT_INF0_TIMEOUT=Timeout:
ELEMENT_INF0_G=G
ELEMENT_INF0_VISIBILITY=Visibility:
ELEMENT_INF0_HEADER=Header:
ELEMENT_INF0_ROWS=Rows:
ELEMENT_INF0_WEAK=Weak:
ELEMENT_INF0_UID=UID:
ELEMENT_INF0_XPATH=XPath:
ELEMENT_INF0_CLASS=Class:
ELEMENT_INF0_NAME=Name:
ELEMENT_INF0_TITLE=Title:
ELEMENT_INF0_ACTION=Action:
ELEMENT_INF0_TEXT=Text:
ELEMENT_INF0_TOOLTIP=Tooltip:
ELEMENT_INF0_COLUMNS=Columns:
ELEMENT_INF0_EXPRESSION=Expression:
EDIT_VARIABLE_DIALOG_TITLE=Edit variables
EDIT_VARIABLE_DIALOG_NAME=Name
EDIT_VARIABLE_DIALOG_EXPRESSION=Expression
EDIT_VARIABLE_DIALOG_VALUE=Value
EDIT_VARIABLE_DIALOG_DEL=Del
EDIT_VARIABLE_DIALOG_ADD_NEW=Add new variable
EDIT_VARIABLE_DIALOG_PARAM_NAME=name
EDIT_VARIABLE_DIALOG_EXPRESSION_VALUE='expression'
NAVIGATION_CONTR_DIALOG_EXISTS=Dialog with name %s already exists.
NAVIGATION_CREATE=Create new dialog
NAVIGATION_DELETE=Delete selected dialog
NAVIGATION_COPY=Copy current dialog with all elements
NAVIGATION_PASTE=Paste copied dialog
NAVIGATION_SELF=Self
NAVIGATION_ON_OPEN=On open
NAVIGATION_RUN=Run
NAVIGATION_ON_CLOSE=On close
NAVIGATION_CLOSE=Close
NAVIGATION_CREATE_ELEMENT=Create new Element
NAVIGATION_DELETE_ELEMENT=Delete current element
NAVIGATION_COPY_ELEMENT=Copy current element
NAVIGATION_PASTE_ELEMENT=Paste copied element
NAVIGATION_TEST_ALL=Test all controls in the current section
DICTIONARY_FX_NOT_ALLOWED=Not allowed
SYSTEM_VARS_FX_NAME=name
SYSTEM_VARS_FX_EXPRESSION='expression'
SYSTEM_VARS_FX_CONTR_NAME=Name
SYSTEM_VARS_FX_CONTR_EXPRESSION=Expression
SYSTEM_VARS_FX_CONTR_VALUE=Value
SYSTEM_VARS_FX_CONTR_DESCRIPTION=Description
#endregion

APP_CON_STOP_BEFORE_RUN=You need to stop the old application, before running a new one
APP_CON_CLOSE_FIRSTLY=You should choose app entry at first.
COMM_CANT_LOAD_RESOURCE=Can't load resource:
COMM_FILE_DELETE_HEADER=Removing
COMM_FILE_DELETE_BODY=Are you sure you want to remove %s? \nYou can't undo this action.
#//endregion

#region app
APP_POOL_APP_IS_NOT_LOADED=The application %s is not loaded.
APP_POOL_LOAD_FACTORY=The application factory with id %s' is not found
APP_POOL_ID_NOT_FOUND=Application with id %s not found
#endregion

#region charts
X_AXIS=X axis labels for bar chart
Y_AXIS=Y axis description for bar chart
#endregion

#region common
#region common.documentation
SUPPORTED_CONTROLS=Supported controls
DIFFERENCES=Differences
PARAMETER=Parameter
DESCRIPTION=Description
EXAMPLE=Example
#endregion

#region common.evaluator
LINKED_PROPS_ELEMENTS_SO_OLD=Enumerations are so old-school, don't use them. Use keySet() or entrySet() instead
MVEL_EVALUATOR_WRONG_TYPE_EXCEPTION=Wrong type of precompiled:
#endregion

#region common.report
MARKER_KEY_A_DESCR=Use it if you want to put some part of code inside the current text. The color of inserted code depends on the JF color theme: dark or white.
MARKER_KEY_B_DESCR=Put some code into the container. Used for highlighting a big part of code. The color of inserted code depends on the JF color theme: dark or white.
MARKER_KEY_C_DESCR=Set blue (#00bfff) for the specified text.
MARKER_KEY_D_DESCR=Rotate the specified text by 90 degrees.
MARKER_KEY_E_DESCR=Put text in new paragraph.
MARKER_KEY_F_DESCR=Underline a part of text.
MARKER_KEY_G_DESCR=Highlight a part of text with bold.
MARKER_KEY_H_DESCR=Highlight a part of text with italics.
MARKER_KEY_I_DESCR=Put text in new paragraph.
MARKER_KEY_M_DESCR=Set current text as name of caption of the first level.
MARKER_KEY_N_DESCR=Set current text as name of caption of the second level.
MARKER_KEY_O_DESCR=Set current text as name of caption of the third level.
MARKER_KEY_P_DESCR=Set current text as name of caption of the fourth level.
MARKER_KEY_Q_DESCR=Set current text as name of caption of the fifth level.
#endregion

JF_SIMPLE_FACADE_INIT_EXCEPTION=Configuration is invalid! See the logs for details.
JF_SIMPLE_FACADE_DO_ACTION_EXCEPTION=JackFishFacade not initialized. Call init() before doAction()
JF_SIMPLE_FACADE_BY_NAME_EXCEPTION=Action with name %s is unknown.
JF_SIMPLE_FACADE_START_EXCEPTION=JackFishFacade not initialized. Call init() before start()
JF_SIMPLE_FACADE_CONNECT_TO_EXCEPTION=JackFishFacade not initialized. Call init() before connectTo()
JF_SIMPLE_FACADE_STOP_EXCEPTION=JackFishFacade not initialized. Call init() before stop()
SETTINGS_GET_DEFAULT_VALUE_EXCEPTION=No default settings for the %s key 
#endregion

#region documents.config
CONFIGURATION_OBJECT_FROM_CLASS_NAME_EXCEPTION=Class %s is not assignable from %s
CONTEXT_SET_HANDLER_EXCEPTION=Parameters count for handler %s (subCase %s) must be greater that 0
CONTEXT_HANDLER_NOT_FOUND=Handler %s is not found
#endregion

#region documents.matrix
PARAMETER_TYPE_EXCEPTION=Type %s is not the same type as %s
PARAMETER_ARRAY_EXCEPTION=Type %s is an array. It needs a single %s object 
MATRIX_ENGINE_MATRIX_INCORRECT=Matrix is incorrect. Errors : %s
#endregion

#region documents.matrix.parser
PARSER_VALUE_EXCEPTION=There is no value in the action header. The matrix name is %s
PARSER_HEADER_EXCEPTION=There is no header for the action. The matrix name is %s
PARSER_UNKNOWN_TYPE_EXCEPTION=Unknown type of item %s
PARSER_UNKNOWN_SYNTAX_EXCEPTION=Unknown syntax of item %s
PARSER_TOO_MANY_SYNTAX_EXCEPTION=Too many syntax items are suitable: %s
SCREENSHOTKIND_VALUE_BY_NAME_EXCEPTION=Unknown name: %s

#region documents.matrix.parser.items
ACTION_ITEM_CANT_FIND_ACTION=Can not find the action: %s
ACTION_ITEM_DESCRIPTION=Adds a new action to the matrix
ACTION_UNKNOWN_NAME_EXCEPTION=Action with name %s is unknown.
ASSERT_EXAMPLE={{# \n#Assert;#Message\na == 10;'The value of ' + a + ' does not match 10'#}}
ASSERT_EXPRESSION_EXCEPTION=Assert expression should be boolean
ASSERT_DESCRIPTION=This operator is used to check an assertion. If the assertion is correct, the matrix will run, if the assertion is incorrect, the operator terminates the matrix and it is reported in the user's message. This operator is used to check the equivalency of the expected and the actual values. Fields: Assert - assertion. Message - the message that will be reported.
BREAK_DESCRIPTION=This operator is used to break cycles for, forEach and while.
BREAK_EXAMPLE=Create a cycle from 1 to 10 using operator For. Break the cycle using the Break operator when the variable is a = 9. {{# \n #For;#From;#To;#Step  \n a;1;10;1  \n #If  \n a == 9  \n #Break  \n #EndIf  \n #EndFor#}}
CALL_DESCRIPTION=This operator is used to call a subprogram which is organized with SubCase. Call is performed with the SubCase id, giving the name NameSpace - > NameSpace.SubCaseID \n The SubCase being called can be in the current matrix, as well as in the library (Project directory -> library). \n If the SubCase returns a value, it is available via the id operator Call. \n If the SubCase is being called with operator Call, the factual parameters that are used by performing the SubCase can be transferred.  Arguments should be named.
CALL_EXAMPLE=1. Create a SubCase with an id Add and both arguments firstNumber and secondNumber. \n 2. In the given SubCase, make a sum of values of the firstNumber and the secondNumber parameters. Return the result using the operator Return. \n 3 Call SubCase Add with an operator Call and transfer two numbers as parameters.  \n SubCase will make a sum of the given values and return the result that is accessible by using the SubCase id - Add. {{# \n#Id;#SubCase;firstNumber;secondNumber\nAdd;;1;2\n#Id;#Let\nresult;firstNumber + secondNumber\n#Return\nresult\n#EndSubCase\n#Id;#Call;firstNumber;secondNumber\nCALL1;Add;1;2#}}
CALL_CANT_FIND_SUBCASE=Can't find a sub case with id : [ %s ]
CALL_PARAMS_EXCEPTION=Errors in parameters of the #Call expressions
CASE_DESCRIPTION=This operator is used to describe one variant to compare with for the operator Switch. \n In each operator Case, one of the variants that equals the expression from the operator Switch is given.
CASE_EXAMPLE=(Example #1) \n After one of the blocks - Case - has been performed, operator Switch brakes. \n Example #1: \n Variable a is transmitted into the field Switch. The  Case will be performed, the value which matches the variable value. \n {{# \n#Switch\n1\n#Case\n1\n#Action;Greeting\nPrint;'Hello!'\n#Case\n2\n#Action;Greeting\nPrint;'Bye!'\n#EndSwitch#}}  \nLogical data type which equals true is transferred into field  switch  \n The Case will be performed, which field's expression will returns true. {{# \n#Id;#Let\nexpression;'Annoucements(425)'\n#Switch\ntrue\n#Case\nexpression.matches('[\\\\w|\\\\s]+[(]425{1}[)]')\n#Action;result\nPrint;true\n#Case\nexpression.matches('[\\\\w|\\\\s]+[(]455{1}[)]')\n#Action;result\nPrint;false\n#EndSwitch#}}
CONTINUE_DESCRIPTION=This operator is used to move to the next cycles iteration For, ForEach, While. \n The new iteration starts with checking if the cycle conditions are true.
CONTINUE_EXAMPLE=Create a cycle from 1 to 10 with an operator For and print the value of variable a into the console. If variable a = 9, start a cycle from the beginning with the operator Continue. {{# \n#For;#From;#To;#Step\na;1;10;1\n#If\na == 9\n#Continue\n#EndIf\n#Action;a\nPrint;a\n#EndFor#}}
DEFAULT_DESCRIPTION=This operator describes a part of the operator, which wil be performed if none of the Cases has been performed.  \n This operator is the only one and should be necessarily placed after all Case blocks.
DEFAULT_EXAMPLE=The Number variable is transferred to the Switch field. If the variable value doesn't match any Case, the Default block will be performed. {{# \n#Id;#Let\nnumber;0\n#Switch\nnumber\n#Case\n1\n#Action;Greeting\nPrint;'Hello!'\n#Case\n2\n#Action;Greeting\nPrint;'Hi!'\n#Default\n#Action;Greeting\nPrint;'Farewell'\n#EndSwitch#}}
ELSE_DESCRIPTION=This operator describes a line of the operator If that is performed if condition is false. Line Else is the only one for If.
ELSE_EXAMPLE={{# \n#Id;#Let\nyear;new DateTime().getYears(new Date())\n#If\nyear == 2017\n#Action;today\nPrint;'is 2017'\n#Else\n#Action;today\nPrint;'is not 2017'\n#EndIf#}}
FAIL_DESCRIPTION=This operator generates a failure in the current place of the matrix . If the failure given can't be proceeded with by OnError or by the global error handler, the current TestCase fails.  \nParameter Fail can take a string value, then an error with this message is generated, and this message is shown instead of failure.  The Fail operator can be called by the error handler,and variable err can be passed to it.  \n(see OnError). In this case, the exact failure place can be found.
FAIL_EXAMPLE={{# \n#Id;#TestCase;#Kind;#Depends;#For\naa;Test case;Never;;\n#Fail\n'my error'\n#OnError\n#Action;Where error was\nPrint;err.Where#}}
FOR_DESCRIPTION=Operator For is used to organize a cycle that should be performed a given number of times. This cycle can increase and reduce. Fields:  \nFor - a variable for performing iterations.  \nFrom - a numeric value with which a cycle will be started.  \nTo - a numeric value with which the last iteration will be performed.  \nStep - a step by which the value in the field From is changed.
FOR_EXAMPLE={{# \n#For;#From;#To;#Step\na;1;10;1\n#Action;a\nPrint;a\n#EndFor#}}
FOREACH_DESCRIPTION=Operator ForEach is used to organize a cycle according to the collection elements: list, table, Map, etc.  \nFields: \nForEach - a variable name which is set with the next element value in each iteration.   \nIn - a collection which is needed to organize a cycle.
FOREACH_EXAMPLE={{##ForEach;#In\na;['First', 'Second']\n#Action;a\nPrint;a\n#EndForEach#}}
FOREACH_EXCEPTION_IN=Error in expression #In %s
FOREACH_EXCEPTION=#In is not a collection
IF_DESCRIPTION=This operator creates a matrix branch depending on the condition. The operator If takes a logic expression. If true is a result of this expression, a code block inside of the If operator is performed.  \nIf the expression is false, the operator Else is performed. 
IF_EXAMPLE={{# \n#Id;#Let\nyear;new DateTime().getYears(new Date())\n#If\nyear == 2017\n#Action;today\nPrint;'is 2017'\n#Else\n#Action;today\nPrint;'is not 2017'\n#EndIf#}}
IF_EXPRESSION_EXCEPTION=Error in expression #If. \n %s
LET_DESCRIPTION=This operator is used to name a variable and set a value.  \nIf there is no name, this expression is performed. The variable name is given in the left field, in the right field is the variable value or expression the result of which will be saved in the variable.
LET_EXAMPLE=The variable 'greeting' is set with value Hello World!{{# \n#Id;#Let \ngreeting;'Hello world!'#}}
NAME_SPACE_DESCRIPTION=This operator introduces a name space into the library in order to link to Subcase from this library.  \nThere are SubCases in the operator NameSpace, they can be called with the use of Call - NameSpaceId.SubCase ID afterwards. \n In the name space {{@NameSpace@}} are {{@SubCase@}}.
NAME_SPACE_EXAMPLE=Create a library MyLibrary, which contains SubCase PrintHi. \nAfter the given matrix has been saved to a file, which is used to store libraries, it can be called with the Call operator as follows:  \nMyLibrary.PrintHi \n{{# \n#Id;#NameSpace\nMyLibrary;\n#Id;#SubCase\nSUB1;\n#Action;Greeting\nPrint;'Hello!'\n#EndSubCase\n#EndNameSpace#}}
ON_ERROR_DESCRIPTION=This operator is used to process failures in the matrix when it's running.  It can only be called if there is a failure. It can be put in: TestCase, SubCase, For, ForEach, Step and OnError. \n  If there are failures in these blocks, an error-handler is launched. In this case, the failure feature is removed from the block. After a failure has been processed, the block is performed if there are no more mistakes after the operator OnError. \n As soon as OnError is performed, two local variables 'error' and 'err' are created implicitly. \n err - is a structured object, which contains fields:  \n err.Where - returns the name of the action in which there was a failure.  \nerr.Message - returns a failure message  \nerr.Kind - returns the failure type. \n The 'error' variable keeps the failure message.  \nOnError error-handler has priority over the global error-handler.
ON_ERROR_EXAMPLE=Create an SQLConnect action, but don't give the Connection parameter to it. The failure is processed and discovered. \n As a result of the processed example, the following line will be displayed in the console: The place where the error occurred = ActionItem:SQLexecute. {{# \n#TestCase;#Kind;#Depends;#For\nTest case;Never;;\n#Id;#Action;$Query;$Connection\nSQLEXEC1;SQLexecute;'';\n#OnError\n#Action;Where error was\nPrint;err.Where#}}
RAW_MESSAGE_DESCRIPTION=This operator is used to describe a MapMessage object of the given type.
RAW_MESSAGE_EXAMPLE={{# \n#Id;#RawMessage;#Client \nMSG1;none;FIX \n$;MessageType \n0;none \n#EndRawMessage#}}
RAW_MESSAGE_GET_DICTIONARY_ERROR=Can't load factory %s
RAW_TABLE_DESCRIPTION=This operator is used to describe an object as a Table. In the matrix editor, there is a special mini editor for rawText and rawMessage like this operator.
RAW_TABLE_EXAMPLE={{# \n#Id;#RawTable \nDATA1;Table \n@;newH \n0;newR \n#EndRawTable#}}
RAW_TABLE_CUT_INFO=The current table size is [%s;%s] and the given size is [%s;%s].The table will be cut.
RAW_TABLE_CUT_CONFIRM=Do you want to continue cutting the table?
RAW_TEXT_DESCRIPTION=This operator is used to describe an object as Text. It has its own mini editor.
RAW_TEXT_EXAMPLE={{# \n#Id;#RawText \nTEXT1;Text \n\"Hello world\" \n#EndRawText#}}
RETURN_DESCRIPTION=This operator breaks the SubCase performance and returns the result.
RETURN_EXAMPLE={{# \n#Id;#SubCase \nSUB1; \n#Id;#Let \nresult;2+2*2 \n#Return \nresult \n#EndSubCase#}}
SET_HANDLER_DESCRIPTION=Sets up an event handler for all TestCases or Steps.
SET_HANDLER_EXAMPLE={{# \n#SetHandler#}}
STEP_DESCRIPTION=This is an analogue of TestCase block , it is used to divide TestCase.  \nEach Step keeps its result in a separate row in a system table  (see action ResultTable). \n The step that contains the ResultTable action is always Passed.
STEP_EXAMPLE={{# \n#Step;#Kind \n; \n#EndStep#}}
STEP_NOT_FOUND_EXCEPTION=Fail due the Step this id %s is not found
STEP_FAILED_EXCEPTION=Fail due the Step %s is failed
SUB_CASE_DESCRIPTION=This operator describes a subprogram. The program arguments are described in the parameters, the factual parameters are used in Call. \n  SubCase is performed by the Call operator only. The SubCase operator can even be located in the commented testcases.
SUB_CASE_EXAMPLE={{# \n#Id;#SubCase\nSUB1;\n#Action;Greeting\nPrint;'Hello!'\n#EndSubCase#}}
SWITCH_DESCRIPTION=This operator allows to define multiple branches. The Case and Default operators will be performed when the condition is true. If there are no matching Cases, default is performed.
SWITCH_EXAMPLE= \nNumber 1 is passed into the field Switch, this number matches the number from the first Case given.  \nIf number 2 is passed to Switch, the second Case is performed {{# \n#Switch\n1\n#Case\n1\n#Action;Greeting\nPrint;'Hello!'\n#Case\n2\n#Action;Greeting\nPrint;'Bye!'\n#EndSwitch#}}
SWITCH_CHECK_EXCEPTION=Switch must contain only Cases items or a Default item. But contains %s.
TEST_CASE_DESCRIPTION=The main operator in the matrix structure. It is used to logically divide the matrix into steps. This is a high level operator, it can't be put in any other actions or operators including TestCase.  \nAll TestCases are performed one by one, independently of the performed results in the previous testcases. Nevertheless, the dependence can be set with the field Depends. If TestCase from the parameter Depends fails, the dependendent one will fail too. \n Each TestCase also contains a Screenshot parameter which is used to specify when in the TestCase a screenshot is made.   \nTestCase ID is used to shortly identify and link to it in the parameter BeforeTestCase of actions TableReport, TextReport etc. \n Each TestCase keeps the performed result in a separate row in the system table (see action ResultTable). \n TestCase which has a ResultTable action is always Passed. \n EachTestCase introduces its name space, that means the actions and the variables from one TestCase aren't accessible from another one. \n To get the access from a different TestCase, it is nesessary to enter the parameter Global for an action.(mark checkbox with G).
TEST_CASE_EXAMPLE={{# \n#TestCase;#Kind;#Depends;#For \n;;;#}}
TEST_CASE_NOT_FOUND_EXCEPTION=Fail due to the TestCase id %s not being found
TEST_CASE_FAILED_EXCEPTION=Fail due to the TestCase %s being failed
WHILE_DESCRIPTION=Operator While is used to organized a cycle.
WHILE_EXAMPLE=Identify variable a and set value 1 to it. \nWhile the variable value is a < 10 in While cycle, display its value in the console and increase it by 1. {{# \n#Id;#Let\na;1\n#While\na < 10\n#Action;a\nPrint;a\n#Id;#Let\na;a+1\n#EndWhile#}}
END_RAW_TABLE_DESCRIPTION=Closes the Table operator.
END_RAW_MESSAGE_DESCRIPTION=Closes the Message operator.
END_IF_DESCRIPTION=Closes the If operator.
END_RAW_TEXT_DESCRIPTION=Closes the Text operator.
TEMP_ITEM_DESCRIPTION=Temp action
END_FOR_EACH_DESCRIPTION=Closes the ForEach operator.
END_STEP_DESCRIPTION=Marks end of step.
END_SUBCASE_DESCRIPTION=Marks end of sub case.
MATRIX_ROOT_DESCRIPTION=Root element.
END_SWITCH_DESCRIPTION=Marks the end of the Switch operator.
END_FOR_DESCRIPTION=Closes the For operator.
END_WHILE_DESCRIPTION=Marks the end of the While loop.
END_DESCRIPTION=Visual item only.
END_NAME_SPACE_DESCRIPTION=Marks end of namespace.
HELP_ACTION_ITEM_ACTION=Action
HELP_ACTION_ITEM_ADDITIONAL_FIELDS_YES=Additional fields - Yes
HELP_ACTION_ITEM_ADDITIONAL_FIELDS_NO=Additional fields - Yes
HELP_ACTION_ITEM_EXAMPLES=Examples
HELP_ACTION_ITEM_SEE_ALSO=See also
HELP_ACTION_ITEM_INPUT=Input:
HELP_ACTION_ITEM_FIELD_NAME=Field name
HELP_ACTION_ITEM_FIELD_TYPE=Field type
HELP_ACTION_ITEM_DESCRIPTION=Description
HELP_ACTION_ITEM_MANDATORY=Mandatory
HELP_ACTION_ITEM_DEFAULT=Default
HELP_ACTION_ITEM_SHOULD_FILLED=Should be filled
HELP_ACTION_ITEM_OUTPUT=Output
HELP_ACTION_ITEM_RESULT_TYPE=Result type
HELP_CLASS_METHODS=Methods
HELP_ITEM_EXAMPLES=Examples
HELP_ITEM_SEE_ALSO=See also
HELP_WIZARD_ITEM_WIZARD_CATEGORY=Wizard category:
HELP_WIZARD_ITEM_VIEW_EXAMPLE=View example
#endregion

WINDOW_CHECK_PARAMS_EXCEPTION=The following fields are missing in the dictionary:
#endregion

#region exceptions
COLUMN_IS_PRESENT_EXCEPTION=Column with name '%s' already exists
DIALOG_NOT_FOUND_EXCEPTION=Window %s not found in the dictionary
APP_WAS_CLOSED_EXCEPTION=App with id '%s' has been closed
#endregion

#region functions
ROW_TABLE_HEADER_NOT_FOUND=Header with name '%s' not found in the table
XML_CANT_SET_TEXT_EXCEPTION=Can't set text to the XML document
XML_SET_ATTR_EXCEPTION=Attributes may only be set into into the Element
TABLE_COLUMN_NOT_FOUND=Column with name %s is not found in the table
TABLE_IOOB_EXCEPTION=Index : %d , Size : %d
TABLE_DIFFERENCES=Differences
TABLE_DESCRIPTION=Description
TABLE_EXPECTED=Expected
TABLE_ACTUAL=Actual
#endregion

#region service
#endregion

#region sql
DATA_BASE_POOL_DRIVER_NOT_FOUND=Driver '%s' was not found.
DATA_BASE_POOL_JAR_DOESNT_CONTAINS=Jar file '%s' does not contain an SQL Driver.
DATA_BASE_POOL_NUMBER_OF_PARAMS=The number of transferred params is not equal to the number of required params in the query
DATA_BASE_POOL_SQL_ID_NULL=SQL entry id is null
#endregion

SUPPORTED_ENTRY_TRUE=SupportedEntry{ isSupported=true }
SUPPORTED_ENTRY_FALSE=SupportedEntry{ isSupported=false }

######################################
## PLUGINS part
######################################

#region plugins
PLUGIN_COMMON_DESCRIPTION=empty

#region plugins.client
FIX_CODEC_BEGINSTRING_IS_EMPTY=Property BeginString is empty
FIX_CODEC_UNKNOWN_VALUE=Unknown field '%s'
FIX_CODEC_UNKNOWN_GROUP=Unknown group '%s'
FIX_CODEC_CONVERT_VALUE_EXCEPTION=%s for %s:%s is not found
SFC_CLIENT_NOT_SUPPORTED=Not supported
SFC_CLIENT_TIMEOUT_MUST_BE_POSITIVE=timeout must be a positive number.
#endregion

#region plugins.app.web
WEB_PLUGIN_DESCRIPTION=A web plugin used for testing web applications via a browser. It is based on the Selenium framework and is available for browsers supported by this framework. It supports crossbrowser testing.
WEB_PLUGIN_DIFFERENCE=It is impossible to connect to an already started application. In the Action section of the dictionary, there are some tabs with actions available only for the Web plugin. The {{`Switch`}} tab ?Refresh? button updates the list of all window titles, so you can switch between them. The {{`Navigate`}} tab allows to update and close the current window, switch to the previous or the next page. The {{`New`}} tab opens a new URL, either in a new tab or in a new window, or in a initially opened browser tab. The Prop Tab can get and set some parameters for the tested application. For the Pos&Size tab, the possibilities of moving the testing application or minimizing the browser window are not available. The window can only be maximized if it doesn?t have the max size yet. {{`{{/Actions:/}}`}}{{`Action ApplicationCloseWindow has no differences.`}}{{`Action ApplicationConnectTo is not supported.`}}{{`Action ApplicationMove is not supported.`}}{{`Action ApplicationNavigate has no differences.`}}{{`Action ApplicationNewInstance has no differences.`}}{{`Action ApplicationRefresh has no differences.`}}{{`Action ApplicationResize can?t minimize window.`}}{{`Action ApplicationSetProperties has no differences.`}}{{`Action ApplicationSwitchTo has no differences.`}}{{`Action DialogAlert has no differences.`}}{{`Action DialogSwitchToWindow has no differences.`}}
WEB_PLUGIN_LOG_LEVEL=Set a log level for plugin. It is possible to use 'ALL', 'ERROR', 'INFO', etc. But it is recommended to use 'ALL' (default).
WEB_PLUGIN_JRE_EXEC=If using a version other than the default version of JRE is required, a path to it should be set.
WEB_PLUGIN_JRE_ARGS=Set parameters to run the plugin. For example, the initial and the maximum memory allocation pool
WEB_PLUGIN_CHROME_DRIVER=Set the Google Chrome driver path
WEB_PLUGIN_GECKO_DRIVER=Set the Firefox driver path
WEB_PLUGIN_IE_DRIVER=Set the Internet Explorer driver path
WEB_PLUGIN_CHROME_DRIVER_BINARY=Sets the path to the executable Chrome. This path should exist on the computer which will launch Chrome. The path should either be absolute or relative to the location of the running ChromeDriver server.
WEB_PLUGIN_FIREFOX_PROFILE=Set folder for Firefox user profile, which contains info about the visited sites, etc.
WEB_PLUGIN_PRIVATE_MODE=Private Browsing allows you to browse the Internet without saving any information about which sites and pages you?ve visited. Internet Explorer only.
WEB_PLUGIN_IS_DRIVER_LOGGING=Enable logging browser. Default value 'false'
WEB_PLUGIN_BROWSER=Set the browser via a combobox which should be used to run the application
WEB_PLUGIN_URL=Set the URL which should be opened when the application starts. Set the full path. Remember about the difference between http/https
WEB_PLUGIN_WHERE_OPEN=Set where the new application should be opened: in a new tab, in a new window or in the first opened tab
WEB_PLUGIN_PROPERTY_URL=Allows to get or set the URL property
WEB_PLUGIN_PROPERTY_TITLE=Allows to get or set the title property
WEB_PLUGIN_PROPERTY_ALL_TITLES=Allows to get all the titles of the started application
WEB_PLUGIN_PROPERTY_COOKIE=Allows to get the cookie property
WEB_PLUGIN_PROPERTY_ALL_COOKIES=Allows to get all the cookies from the started browser
WEB_PLUGIN_PROPERTY_ADD_COOKIE=Allows to add a cookie to the browser
WEB_PLUGIN_PROPERTY_REMOVE_COOKIE=Allows to remove the specified cookie. Just set the cookie name.
WEB_PLUGIN_PROPERTY_REMOVE_ALL_COOKIES=Allows to remove all cookies
WEB_PLUGIN_PROPERTY_TAB=empty
BROWSER_SET_CHROME_PATH_EXCEPTION=Allows to set the 'ChromeDriverPath' parameter on the plugin to a valid value
BROWSER_SET_IE_PATH_EXCEPTION=Allows to set the 'IEDriverPath' parameter on the plugin to a valid value
BROWSER_UNKNOWN=Unknown browser : %s
CUSTOM_IE_DRIVER_OS_EXCEPTON=You appear to be running %s. The IE driver only runs on Windows.
SELENIUM_OPERATION_EXECUTOR_ERROR_DRAG_AND_DROP=Error on drag and drop
SELENIUM_OPERATION_EXECUTOR_CANT_SCROLL_TO_INDEX=Can't scroll to index %d. Child size : %d
SELENIUM_OPERATION_EXECUTOR_ELEMENT_OUT_OF_SCREEN=Element outside the screen
SELENIUM_OPERATION_EXECUTOR_ERROR_ON_FIND_INTO_TABLE=Error on find in the table
SELENIUM_OPERATION_EXECUTOR_DONT_SUPPORT=Don't support
SELENIUM_OPERATION_EXECUTOR_CANT_FIND_BY_INDEX=Can't select the element by index %d ,because there are %d elements found
SELENIUM_OPERATION_EXECUTOR_NOT_FOUND_IN_THE_LIST=Element with text '%s' was not found in the list
SELENIUM_OPERATION_EXECUTOR_EMPTY_TABLE=Table is empty
SELENIUM_OPERATION_EXECUTOR_INVALID_INDEX=Invalid index=[%d]. Maximum index=[%d].
SELENIUM_OPERATION_EXECUTOR_HEADERS_NOT_FOUND=Headers not found. Check your header locator or table locator
SELENIUM_OPERATION_EXECUTOR_CANT_FIND_TAG_IN_TABLE=Can't find tag tbody in current table
SELENIUM_REMOTE_APP_EMPTY_BROWSER_EXCEPTION=Browser can't be null or empty.
SELENIUM_REMOTE_APP_EMPTY_URL_EXCEPTION=URL can't be null or empty.
SELENIUM_REMOTE_APP_WRONG_BROWSER_NAME=Wrong browser name.
SELENIUM_REMOTE_APP_PAGE_LOADING=Page loading
SELENIUM_REMOTE_APP_FAIL_DRIVER_CREATION=Driver creation is failed
SELENIUM_REMOTE_APP_ALERT_IS_NOT_PRESENT=Alert is not present
SELENIUM_REMOTE_APP_GET_DIALOG_SIZE=Get dialog size
SELENIUM_REMOTE_APP_GET_DIALOG_POSITION=Get dialog position
SELENIUM_REMOTE_APP_OWNER_NOT_FOUND=Owner was not found.
SELENIUM_REMOTE_APP_TOO_MUCH_OWNERS=%d owners were found instead of 1.
SELENIUM_REMOTE_APP_URL_IS_NULL=url is null
WEB_DRIVER_LISTENER_NO_JS=Current driver instance doesn't support the execution of the javascript
WEB_DRIVER_LISTENER_DRIVER_UNSUPPORT=Current driver instance does not support %s
WEB_DRIVER_LISTENER_NOT_LOCATABLE=Current element instance is not locatable
#endregion

#region plugins.app.win
WIN_PLUGIN_DESCRIPTION=Plugin for testing applications, written for OS Windows. Based on the UIAutomation framework.
WIN_PLUGIN_DIFFERENCE=Can?t work with the table cells as independent elements. Can only work with the table. {{`{{/Actions:/}}`}}{{`The ApplicationCloseWindow action is not supported.`}}{{`The ApplicationConnectTo action has no differences.`}}{{`The lffApplicationMove action has no differences.`}}{{`The ApplicationNavigate action is not supported.`}}{{`The ApplicationNewInstance action is not supported.`}}{{`The ApplicationRefresh action has no differences.`}}{{`The ApplicationResize action - if changing the window size is required, but it is already maximized, then it is necessary to change its size to normal and, after that, to the required size. Same with an already minimized window.`}}{{`The ApplicationSetProperties action is not supported.`}}{{`The ApplicationSwitchTo action is not supported.`}}{{`The DialogAlert action has no differences.`}}{{`The DialogSwitchToWindow action is not supported.`}}
WIN_PLUGIN_LOG_LEVEL=Set a log level for the plugin. You can use 'ALL' or 'ERROR', but it is recommended to use 'ALL' (default)
WIN_PLUGIN_JRE_EXEC=If using a version other than the default version of JRE is required, a path to it should be set.
WIN_PLUGIN_JRE_ARGS=Set params to run the plugin. For example, the initial and the maximum memory allocation pool
WIN_PLUGIN_MAX_TIMEOUT=Set the max wait time for finding elements in the window. Warning! If it is necessary to find a lot of elements in the window, please set a high value.
WIN_PLUGIN_ALWAYS_TO_FRONT=Run the application in the foreground. All actions with the application (clicking, for example) bring the window to the foreground.
WIN_PLUGIN_MAIN_WINDOW=You can connect to an already started application by setting its main window name
WIN_PLUGIN_HEIGHT=You can connect to an already started application by setting its height AND width
WIN_PLUGIN_WIDTH=You can connect to an already started application by setting its width AND height
WIN_PLUGIN_PID=You can connect to a started application via PID (use task manager to get this parameter for the application)
WIN_PLUGIN_CONTROL_KIND=It is possible to connect to the application by setting its ControlKind. You can not only connect to the window (ControlKind.Window), but also to the pane (ControlKind.Pane). Both of them can be found via UIVerify.
WIN_PLUGIN_TIMEOUT=Max time for connecting to an already started application (milliseconds). By default - 5 seconds.
WIN_PLUGIN_EXEC=Set the executed application
WIN_PLUGIN_WORK_DIR=Set a folder for the executed application
WIN_PLUGIN_ARGS=Set params for the executed application
WIN_PLUGIN_RECTANGLE=You can get the width and the height of the started application and coordinates (x, y) on the screen
WIN_PLUGIN_TITLE=You can get the title of the started application
JNA_DRIVER_IMPL_INTERNAL_ERROR=internal error
JNA_DRIVER_IMPL_DLL_NOT_FOUND=Dll is not found
PROXY_WIN_GUI_APP_NEED_WINDOWS=This adapter needs Windows.
WIN_OPERATION_EXECUTOR_JNA_OWNER_NOT_FOUND=Owner was not found. Owner:
WIN_OPERATION_EXECUTOR_JNA_TOO_MUCH_OWNERS=%d owners were found instead of one. Owner:
WIN_OPERATION_EXECUTOR_JNA_TOO_MUCH_ELEMENTS=Found %d elements instead of one. Element :
WIN_OPERATION_EXECUTOR_JNA_NO_PATH_IN_TREE=Path '%s' is not found in the tree.
WIN_OPERATION_EXECUTOR_JNA_UNSUPPORTED_ATTR_VALUE=Unsupported attribute value. Can use only : %s
WIN_OPERATION_EXECUTOR_JNA_CANT_SCROLL_TO_INDEX=Can't scroll to index %d. Child size : %d
WIN_OPERATION_EXECUTOR_JNA_INSIDE_CURRENT_COMPONENT=%d elements with name %d found inside the current component  
WIN_OPERATION_EXECUTOR_JNA_RECTANGLE_PATTERN_EXCEPTION=The returned rectangle does not match pattern %s , rect : %s
WIN_REMOTE_APP_JNA_PARAMETER_EMPTY_NULL=Parameter %s must only be one of %s or empty/null
WIN_REMOTE_APP_JNA_PARAMS_MUST_BE_FILLED=At least one of the parameters (MainWindow, ControlKind, Height, PID, Width) must be filled
WIN_REMOTE_APP_JNA_EXEC_CANT_BE_NULL=Exec can't be null or empty.
WIN_REMOTE_APP_JNA_WORKDIR_CANT_BE_NULL=WorkDir can't be null or empty.
WIN_REMOTE_APP_JNA_CURRENT_WINDOW_NOT_FOUND=Current window not found
WIN_REMOTE_APP_JNA_TOO_MUCH_MAIN_WINDOWS=Found more than one main window : %d
WIN_REMOTE_APP_JNA_PARAM_MUST_BE_MORE_ZERO=Parameter %s must be from 0 to %s or empty/null
#endregion

#region plugins.app.swing
SWING_PLUGIN_DESCRIPTION=Plugin for the testing application, created via the Swing library. It is based on FEST library.
SWING_PLUGIN_DIFFERENCE=Can?t work with the table cells as independent elements. Can only work with the table. {{`{{/Actions:/}}`}}{{`The ApplicationCloseWindow action is not supported.`}}{{`The ApplicationConnectTo action has no differences.`}}{{`The ApplicationMove action has no differences.`}}{{`The ApplicationNavigate action is not supported.`}}{{`The ApplicationNewInstance action is not supported.`}}{{`The ApplicationRefresh action is not supported.`}}{{`The ApplicationResize action has no differences.`}}{{`TheApplicationSetProperties action is not supported.`}}{{`The ApplicationSwitchTo action is not supported.`}}{{`The DialogAlert action has no differences.`}}{{`The DialogSwitchToWindow action is not supported.`}}
SWING_PLUGIN_LOG_LEVEL=Set a log level for plugin. Use 'ALL', 'ERROR', 'INFO', etc. But it is recommended to use 'ALL' (default)
SWING_PLUGIN_JRE_EXEC=If using a version other than the default version of JRE is required, a path to it should be set.
SWING_PLUGIN_JRE_ARGS=Set params to run plugin. For example, the initial and the maximum memory allocation pool
SWING_PLUGIN_MAIN_CLASS=Set the main class of the started application
SWING_PLUGIN_JAR=Set jar to start application
SWING_PLUGIN_ARGS=Set arguments to start application
SWING_PLUGIN_URL=Used to download the application via jnpl and run it
SWING_PLUGIN_TITLE=Allows to get the title of the started application
MATCHER_SWING_WRONG_XPATH=Wrong XPath: %s
SWING_OPERATION_EXECUTOR_UNABLE_TO_FIND_ELEMENT=Unable to find component
SWING_OPERATION_EXECUTOR_ERROR_ON_FIND_INTO_TABLE=Error on find in the table
SWING_OPERATION_EXECUTOR_COMPONENT_IS_DISABLED=Component %s is disabled.
SWING_OPERATION_EXECUTOR_MENU_ELEMENT_NOT_FOUND=The menu element was not found in path '%s'
SWING_OPERATION_EXECUTOR_PATH_NOT_FOUND_IN_THE_TREE=Path '%s' is not found in the tree.
SWING_OPERATION_EXECUTOR_COMBOBOX_IS_NOT_EDITABLE=ComboBox is not editable
SWING_OPERATION_EXECUTOR_COLUMN_NOT_FOUND=Column '%s' is not found. Possible values are: %s
SWING_OPERATION_EXECUTOR_DOESNT_HAVE_LIST_MODEL=Element %s doesn't have a list model. Please try another element.
SWING_REMOTE_APP_CANT_INIT_APP=Can't initialize application
SWING_REMOTE_APP_SELF_IS_NOT_A_WINDOW=Self %s is not in a Window
SWING_REMOTE_APP_SELF_IS_NOT_DIALOG_OR_FRAME=Self %s is not in a Dialog or a Frame
SWING_REMOTE_APP_USE_DIALOG_RESIZE=Can't resize. Please use the width and the height as parameters in the DialogResize action for resizing the current dialog.
#endregion

#region plugins.app.javafx
JAVAFX_PLUGIN_DESCRIPTION=JavaFX plugin description
JAVAFX_PLUGIN_DIFFERENCE=JavaFX plugin difference
JAVAFX_PLUGIN_LOG_LEVEL=JavaFX plugin log level
JAVAFX_PLUGIN_JRE_EXEC=JavaFX plugin jre exec
JAVAFX_PLUGIN_JRE_ARGS=JavaFX plugin jre args
JAVAFX_PLUGIN_MAIN_CLASS=JavaFX plugin main class
JAVAFX_PLUGIN_JAR=JavaFX plugin jar
JAVAFX_PLUGIN_ARGS=JavaFX plugin args
JAVAFX_PLUGIN_URL=JavaFX plugin url
JAVAFX_PLUGIN_TITLE=JavaFX plugin title
JAVAFX_PLUGIN_SIZE=JavaFX plugin size
JAVAFX_PLUGIN_POSITION=JavaFX plugin position
FX_OPERATION_EXECUTOR_ELEMENT_NO_ITEMS=Target element has no items
FX_OPERATION_EXECUTOR_EXPAND_EXCEPTION=Path '%s' is not found in the tree.
FX_OPERATION_EXECUTOR_TEXT_EXCEPTION=ComboBox is not editable
FX_OPERATION_EXECUTOR_GET_TREE_EXCEPTION=Component is not instance of TreeView. Component : %s
FX_OPERATION_EXECUTOR_TEXT_TABLE_CELL_EXCEPTION=Can't set text to a non-text element
FX_OPERATION_EXECUTOR_NOT_TABLE=Target not instance of Table or TreeTable. Target : %s
FX_OPERATION_EXECUTOR_TARGET_IS_NOT_VISIBLE=Target %s is not visible
FX_REMOTE_APPLICATION_NOT_DIALOG_OR_WINDOW=Self %s is not dialog or window
FX_REMOTE_APPLICATION_IS_NOT_INIT_EXCEPTION=Application is not init
FX_REMOTE_APPLICATION_DIALOG_CANT_RESIZE=Dialog '%s' can't be resized.
FX_REMOTE_APPLICATION_USE_DIALOG_RESIZE=Can't resize. Please use the width and the height as parameters in the DialogResize action for resizing the current dialog.
FX_TABLE_VIEW_TOOB_EXCEPTION=Can't get value for row %s because the size of rows is %s
FX_TABLE_VIEW_GET_ROW_NULL_CONDITION=Cant find row via null condition
FX_TABLE_VIEW_GET_ROW_DUPLICATE_KEY=Duplicate key %s
FX_TABLE_VIEW_TOO_MANY_ROWS=Too many rows
FX_TABLE_VIEW_NO_ONE_ROWS=No one row was found
FX_TABLE_VIEW_COLUMN_TOOB_EXCEPTION=Can't get value for column %s because the size of columns is %s
UTILS_FX_NO_ON_STAGES=No one stage was found
UTILS_FX_APP_WAS_CLOSED=Application was closed
#endregion

#endregion

######################################
## API part
######################################

#region api

#region api.app
VISIBILITY_VISIBLE=Makes this element visible
VISIBILITY_ENABLE=Makes this element enabled
PART_TUNE_EXCEPTION=Cannot find control in dialog='%s' section='Run' name='%s'
PIECE_TUNE_EXCEPTION=Cannot find control in dialog='%s' section='Run' name='%s'
PROXY_APPLICATION_SERVICE_CANT_START_EXCEPTION=The service can not start.
REMOTE_APPLICATION_TOO_FEW_ARGUMENTS=Too few arguments : %d
REMOTE_APPLICATION_CREATE_LOGGER_EXCEPTION=Error on createLogger(%s, %s, %s)
REMOTE_APPLICATION_SET_PLUGIN_INFO_EXCEPTION=Error on setPluginInfo(%s)
REMOTE_APPLICATION_CONNECT_EXCEPTION=Error on connect(%s)
REMOTE_APPLICATION_RUN_EXCEPTION=Error on run(%s)
REMOTE_APPLICATION_STOP_ERROR=Error on stop()
REMOTE_APPLICATION_REFRESH_ERROR=Error on refresh()
REMOTE_APPLICATION_GET_ALERT_TEXT_EXCEPTION=Error on getAlertText()
REMOTE_APPLICATION_NAVIGATE_EXCEPTION=Error on navigate(%s)
REMOTE_APPLICATION_SET_ALERT_TEXT_EXCEPTION=Error on setAlertText(%s, %s)
REMOTE_APPLICATION_TITLES_EXCEPTION=Error on titles()
REMOTE_APPLICATION_NEW_INSTANCE_EXCEPTION=Error on newInstance(%s)
REMOTE_APPLICATION_SWITCH_TO_EXCEPTION=Error on switchTo(%s)
REMOTE_APPLICATION_SWITCH_TO_FRAME_EXCEPTION=Error on switchToFrame(%s)
REMOTE_APPLICATION_RESIZE_EXCEPTION=Error on resize(%s, %d, %d)
REMOTE_APPLICATION_FIND_ALL_EXCEPTION=Error on findAll(%s, %s)
REMOTE_APPLICATION_OPERATE_EXCEPTION=Error on operate(%s, %s)
REMOTE_APPLICATION_OPERATE_ERROR=Error on operate(%s, %s, %s)
REMOTE_APPLICATION_CHECK_LAYOUT_EXCEPTION=Error on checkLayout(%s, %s, %s)
REMOTE_APPLICATION_CLOSE_ALL_EXCEPTION=Error on closeAll(%s, %s)
REMOTE_APPLICATION_CLOSE_WINDOW_EXCEPTION=Error on closeWindow
REMOTE_APPLICATION_GET_TREE_BYTES_EXCEPTION=Error on getTreeBytes(%s)
REMOTE_APPLICATION_START_NEW_DIALOG_EXCEPTION=Error on start new dialog
REMOTE_APPLICATION_MOVE_WINDOW_EXCEPTION=Error on moveWindow(%s,%s)
REMOTE_APPLICATION_MOVE_DIALOG_EXCEPTION=Error on moveDialog(%s, %s,%s)
REMOTE_APPLICATION_RESIZE_DIALOG_EXCEPTION=Error on resizeDialog(%s, %s, %s,%s)
REMOTE_APPLICATION_GET_DIALOG_SIZE_EXCEPTION=Error on getDialogSize(%s)
REMOTE_APPLICATION_GET_DIALOG_POSITION_EXCEPTION=Error on getDialogPosition(%s)
REMOTE_APPLICATION_FIRST_FREE_PORT_EXCEPTION=No one free port in range %d - %d
REMOTE_APPLICATION_CLASS_EXCEPTION=class '%s' is not assignable from %s
REMOTE_APPLICATION_PARAMETER_NULL_EXCEPTION=Parameter '%s' is null in call '%s'
DO_DESCRIPTION=This class contains methods which are used in such action as DialogFill to manipulate controls on the screen.
DO_FOREACH=Repeat @operation for every element found by Many locator.
DO_FOREACH_MAX=Repeat @operation for every element found by Many locator but no? more than @max times
DO_REPEAT=Repeat @operation @i times
DO_COUNT=Return count of objects ( if the element has attribute Addition Many)
DO_USE=Use element with index @i. (if element have attribute Addition Many)
DO_APPLY=Apply @operation to the element found by XPath.
DO_IS_ENABLED=Return true, if the current component is enabled.
DO_IS_VISIBLE=Return true, if the current component is visible.
DO_CHECK_LIST=Check that the value list of the current component equals @list. The item order may be ignored by @ignoreOrder
DO_CHECK_COLOR=Check that the color of pixel with coordinates @x, @y equals @color
DO_CHECK=Check that the value of the current component equals @word
DO_CHECK_WITH_COOR=If the current component is a table, and x and y >= 0, then check that value of the cell with column @x and row @y equals @word
DO_CHECK_WITH_COOR_AND_FLAG=If the current component is a table, and x and y >= 0, then check, that value of the cell with column @x and row @y equals @word. \nIf @flag equals true and the value doesn't equal the value of the cell, an exception will be thrown.
DO_CHECK_WITH_FLAG=Check that the value of the current component equals @word. \n If @flag equals true and @text doesn't equal the value of the component, an exception will be thrown.
DO_CHECK_REGEXP_COOR=If the current component is a table, and x and y >=0, check that the value of the cell with column @x and row @y matches @regexp.
DO_CHECK_REGEXP_COOR_AND_FLAG=If the current component is a table, and x and y >=0, check, then the value of the cell with column @x and row @y matches @regexp. \nIf @flag equals true and @regexp doesn't match the value of the cell, an exception will be thrown.
DO_CHECK_REGEXP=Check that the value of the current component matches @regexp
DO_CHECK_REGEXP_WITH_FLAG=Check that the value of the current component matches @regexp. \n If @flag equals true and @regexp doesn't match the value of the component, an exception will be thrown.
DO_CHECK_ATTR=Check that the value of the attribute @name of the current component equals @value
DO_CHECK_ATTR_WITH_FLAG=Check that the value of the attribute @name of the current component equals @value. If @flag is true and @value doesn't equal attribute with name @name, an exception will be thrown.
DO_CHECK_ATTR_REGEXP=Check that the value of the attribute @name of the current component matches @regexp.
DO_CHECK_ATTR_REGEXP_WITH_FLAG=Check that the value of the attribute @name of the current component matches @regexp. If @flag is true and regexp doesn't match, an exception will be thrown.
DO_SET_VALUE=Set @value to component. For example, set progress to any sliders.
DO_GET_COLOR=Returns color for point in coords @x, @y.
DO_GET_VALUE=Returns the value from the current component. For example, for a checkbox this will be true or false (selected or unselected).
DO_GET_VALUE_WITH_COOR=If the current component is a table, and x and y >= 0, then get the text of the table from the @x column and the @y row.
DO_GET_LIST=Returns the values from all the items on this list.
DO_GET_RECTANGLE=Returns the rectangle into which the current component is placed.
DO_PUSH=Push to the current component
DO_SEQUENCE=Converts @text to a keypress sequence for the current component.
DO_PRESS=Press @key on the current component. See the valid variant of @Keyboard.
DO_KEY_DOWN=Press down and hold @key. See the valid variant of @Keyboard.
DO_KEY_UP=Press up and unhold @key. See the valid variant of @Keyboard.
DO_GET=Get the text of the current component
DO_GET_ATTR=Get the attribute with @name of the current component
DO_GET_TREE=Get the tree of the current tree component. See @Tree.
DO_GET_TABLE=Get the table of the current table component. See @Table.
DO_GET_ROW=Returns the row of the current table that matches @valueCondition and @colorCondition. See @Condition.
DO_GET_ROW_ONE_CONDITION=Returns the row of the current table that matches @valueCondition. See @Condition.
DO_GET_ROW_INDEXES=Returns the indexes of the row in the current table that match @valueCondition and @colorCondition. See @Condition.
DO_GET_ROW_INDEXES_ONE_CONDITION=Returns the indexes of the row in the current table, that match @valueCondition. See @Condition.
DO_GET_ROW_BY_INDEX=Returns the row with the @index index of the current table
DO_GET_ROW_WITH_COLOR=Returns the row with colors that has the @index index of the current table
DO_GET_TABLE_SIZE=Return the size of the current table
DO_MOVE=Move the mouse to the current component
DO_MOVE_WITH_COOR=Move the mouse to the current component with index @x and @y. \nIf the current component is a table, then move the mouse to the cell with coordinates @x (column index) and @y (row index)
DO_CLICK=Click on the current component
DO_CLICK_WITH_ACTION=Do the mouse @action for the current component \nIf the current component is a table, then click on the cell with coordinates @x (column index) and @y (row index)
DO_CLICK_WITH_COOR=Click on the current component with coordinates @x and @y. \nIf the current component is a table, then click on the cell with coordinates @x (column index) and @y (row index)
DO_CLICK_WITH_COOR_AND_ACTION=Do @action to the current component with coordinates @x and @y. \nIf the current component is a table, then do @action to cell with index @x column and @y row
DO_TEXT=Set @text to the current component
DO_TEXT_WITH_BOOL=Set @text to the current component. If @clear is true, then before the text is typed in, the component will be cleared.
DO_TEXT_COLUMN_ROW=Set @text to the cell of the table with coordinates @row and @column
DO_TOGGLE=Set the current component to @bool state 
DO_SELECT_BY_INDEX=Select from the current component item with index @index
DO_SELECT=Select from the current component item with text @selectItem
DO_EXPAND=Expand the tree by path @path. Use symbol '/' to separate the items
DO_COLLAPSE=Collapse tree with path @path. Use symbol '/' for separate items
DO_DRAG_N_DROP_CURSOR=DragNdrop method, where the starting coordinates are x1 and y1 inside the current element and the ending coordinates are x2 and y2 inside another element. The method has a parameter for physically moving the cursor.
DO_DRAG_N_DROP=DragNdrop method, where starting coordinates are x1 and x2 inside the current element and the ending coordinates are x2 and y2 inside another element.
DO_DRAG_N_DROP_CENTER_OF_ELEMENT_CURSOR=DragNdrop method, where the starting coordinates are the center of the current element and the ending coordinates are x2 and y2 inside another element. The method has a parameter for physically moving the cursor.
DO_DRAG_N_DROP_CENTER_OF_ELEMENT=DragNdrop method, where the starting coordinates are the center of the current element and the ending coordinates are x2 and y2 inside another element.
DO_SCROLL_TO_INDEX=Scroll list/combobox/tree to the selected index
DO_USE_LOCATOR_ID=Change the context to the locator with id @locator
DO_USE_LOCATOR=Change the context to the locator with dynamic @locator
DO_USE_LOCATOR_KIND=Change the context to the locator with dynamic @locator and locator kind @locatorKind
DO_USE_LOCATOR_ID_KIND=Change the context to the locator with id @locatorId and locator kind @locatorKind
DO_USE_LOCATOR_FOR_TABLE_CELL=Change the context to the component, that will be found in the cell, by column @x and row @y and the dynamic locator @locator \n \nExample: Do.use(1,1,new Locator().kind(ControlKind.Label).text('yourText').visibility(Visibility.Visible)).getValue()
DO_USE_LOCATOR_ID_FOR_TABLE_CELL=Change the context to the component, that will be found in the cell, by column @x and row @y and the element with id @locatorId from the dictionary \n \nExample: Do.use(1,1,'locatorId').getValue()
DO_USE_LOCATOR_ID_FOR_TABLE_ROW=Change the context to the component that will be found in the row by row @x and the element with id @locatorId from the dictionary
DO_DELAY=Delay @ms
DO_WAIT=Wait for the component to become @toAppear ? visible : invisible for @ms
DO_USE_LOCATOR_FOR_TABLE_ROW=Change the context to the component that will be found in the row by row @x and and dynamic locator @locator
DOSPEC_LESS=Check that the number is less than the passed number @n
DOSPEC_GREAT=Check that the number is greater than the passed number @n
DOSPEC_ABOUT=Check that the number is about the passed number @n. The error is 10%
DOSPEC_BETWEEN=Check that the number is in the range from min(@n,@m) to max(@n, @m)
DOSPEC_TEXT=Check that text @text equals the text of the control
DOSPEC_COLOR=Check that color @color equals color of the control
DOSPEC_DBCOLOR=Check that color @color equals the background color of the control
DOSPEC_ATTR=Check that attribute @name of the control has value @value
DOSPEC_VISIBLE=Check that the control is visible
DOSPEC_INVISIBLE=Check that the control is invisible
DOSPEC_COUNT=Check that @count items of the control are found
DOSPEC_COUNT_WITH_PROVIDER=Check that the count of the found items of the control satisfies the passed CheckProvider @func. \nSee DoSpec.less(number), DoSpec.great(number), DoSpec.about(number), DoSpec.between(number,number)
DOSPEC_WIDTH=Check that the current control has the width @width
DOSPEC_WIDTH_WITH_PROVIDER=Check that the width of the control satisfies the passed CheckProvider @func. \nSee DoSpec.less(number), DoSpec.great(number), DoSpec.about(number), DoSpec.between(number,number)
DOSPEC_HEIGHT=Check that the current control has the height @height
DOSPEC_HEIGHT_WITH_PROVIDER=Check that the height of the control satisfies the passed CheckProvider @func. \nSee DoSpec.less(number), DoSpec.great(number), DoSpec.about(number), DoSpec.between(number,number)
DOSPEC_CONTAINS=Check that the current control fully contains inside itself an element with id @another from the dictionary
DOSPEC_LEFT_ANOTHER=Check that the control on the left is at the distance @dist
DOSPEC_LEFT_ANOTHER_WITH_PROVIDER=Check that the control on the left is at the distance, evaluated via CheckProvider @func. \nSee DoSpec.less(number), DoSpec.great(number), DoSpec.about(number), DoSpec.between(number,number)
DOSPEC_LEFT_LOCATOR=Check that the control on the left is at the distance @dist from the dynamic control with locator @locator.
DOSPEC_LEFT_LOCATOR_WITH_PROVIDER=Check that the control on the left is at the distance, evaluated via CheckProvider @func, from the dynamic control with locator @locator. \nSee DoSpec.less(number), DoSpec.great(number), DoSpec.about(number), DoSpec.between(number,number)
DOSPEC_RIGHT_ANOTHER=Check that the control is on the right at the distance @dist from the control with id @another from the dictionary.
DOSPEC_RIGHT_ANOTHER_WITH_PROVIDER=Check that the control on the right is at the distance, evaluated via CheckProvider @func, from the control with id @another from the dictionary.
DOSPEC_RIGHT_LOCATOR=Check that the control on the right  is at a distance @dist from the dynamic control with locator @locator.
DOSPEC_RIGHT_LOCATOR_WITH_PROVIDER=Check that the control on the right is at the distance, evaluated via CheckProvider @func, from the dynamic control with locator @locator.
DOSPEC_TOP_ANOTHER=Check that the control at the top is at the distance @dist from the control with id @another from the dictionary.
DOSPEC_TOP_ANOTHER_WITH_PROVIDER=Check that the control at the top is at the distance, evaluated via CheckProvider @func, from the control with id @another from the dictionary.
DOSPEC_TOP_LOCATOR=Check that the control at the top is at the distance @dist from the dynamic control with locator @locator.
DOSPEC_TOP_LOCATOR_WITH_PROVIDER=Check that the control at the top is at the distance, evaluated via CheckProvider @func, from the dynamic control with locator @locator.
DOSPEC_BOTTOM_ANOTHER=Check that the control at the bottom is at the distance @dist from the control with id @another from the dictionary.
DOSPEC_BOTTOM_ANOTHER_WITH_PROVIDER=Check that the control at the bottom is at the distance, evaluated via CheckProvider @func, from the control with id @another from the dictionary.
DOSPEC_BOTTOM_LOCATOR=Check that the control at the bottom is at the distance @dist from the dynamic control with locator @locator.
DOSPEC_BOTTOM_LOCATOR_WITH_PROVIDER=Check that the control at the bottom is at the distance, evaluated via CheckProvider @func, from the dynamic control with locator @locator.
DOSPEC_INSIDE_LEFT_ANOTHER=Check that the control is inside the control with id @another from the dictionary, and the distance between the left borders equals value @dist.
DOSPEC_INSIDE_LEFT_ANOTHER_WITH_PROVIDER=Check that the control is inside the control with id @another from the dictionary, and the distance between the left borders is evaluated via CheckProvider @func.
DOSPEC_INSIDE_LEFT_LOCATOR=Check that the control is inside the dynamic control with locator @locator, and the distance between the left borders equals value @dist.
DOSPEC_INSIDE_LEFT_LOCATOR_WITH_PROVIDER=Check that the control is inside the dynamic control with locator @locator, and the distance between the left borders is evaluated via CheckProvider @func
DOSPEC_INSIDE_RIGHT_ANOTHER=Check that the control is inside the control with id @another from the dictionary, and the distance between the right borders equals value @dist.
DOSPEC_INSIDE_RIGHT_ANOTHER_WITH_PROVIDER=Check that the control is inside the control with id @another from the dictionary, and the distance between the right borders evaluating via CheckProvider @func.
DOSPEC_INSIDE_RIGHT_LOCATOR=Check that the control is inside the dynamic control with locator @locator, and the distance betweent the right borders equals value @dist.
DOSPEC_INSIDE_RIGHT_LOCATOR_WITH_PROVIDER=Check that the control inside from the dynamic control with locator @locator and distance between right borders evaluating via CheckProvider @func.
DOSPEC_INSIDE_TOP_ANOTHER=Check that the control is inside the control with id @another from the dictionary, and the distance between the top borders equals value @dist.
DOSPEC_INSIDE_TOP_ANOTHER_WITH_PROVIDER=Check that the control is inside the control with id @another from the dictionary, and the distance between the top borders is evaluated via CheckProvider @func.
DOSPEC_INSIDE_TOP_LOCATOR=Check that the control is inside the dynamic control with locator @locator, and the distance between the top borders equals value @dist.
DOSPEC_INSIDE_TOP_LOCATOR_WITH_PROVIDER=Check that the control is inside the dynamic control with locator @locator, and the distance between the top borders is evaluated via CheckProvider @func.
DOSPEC_INSIDE_BOTTOM_ANOTHER=Check that the control is inside the control with id @another from the dictionary, and the distance between the bottom borders equals value @dist.
DOSPEC_INSIDE_BOTTOM_ANOTHER_WITH_PROVIDER=Check that the control is inside the control with id @another from the dictionary, and the distance between the bottom borders is evaluated via CheckProvider @func.
DOSPEC_INSIDE_BOTTOM_LOCATOR=Check that the control is inside the dynamic control with locator @locator, and the distance between the bottom borders equals value @dist.
DOSPEC_INSIDE_BOTTOM_LOCATOR_WITH_PROVIDER=Check that the control is inside the dynamic control with locator @locator, and the distance between the bottom borders is evaluated via CheckProvider @func.
DOSPEC_OUTSIDE_LEFT_ANOTHER=Check that the control is outside the control with id @another from the dictionary, and the distance between the left borders equals value @dist.
DOSPEC_OUTSIDE_LEFT_ANOTHER_WITH_PROVIDER=Check that the control is outside the control with id @another from the dictionary, and the distance between the left borders is evaluated via CheckProvider @func.
DOSPEC_OUTSIDE_LEFT_LOCATOR=Check that the control is outside the dynamic control with locator @locator, and the distance between the left borders equals value @dist.
DOSPEC_OUTSIDE_LEFT_LOCATOR_WITH_PROVIDER=Check that the control is outside the dynamic control with locator @locator, and the distance between the left borders is evaluated via CheckProvider @func.
DOSPEC_OUTSIDE_RIGHT_ANOTHER=Check that the control is outside the control with id @another from the dictionary, and the distance between the right borders equals value @dist.
DOSPEC_OUTSIDE_RIGHT_ANOTHER_WITH_PROVIDER=Check that the control is outside the control with id @another from the dictionary, and the distance between the right borders is evaluated via CheckProvider @func.
DOSPEC_OUTSIDE_RIGHT_LOCATOR=Check that the control is outside the dynamic control with locator @locator, and the distance between the right borders equals value @dist.
DOSPEC_OUTSIDE_RIGHT_LOCATOR_WITH_PROVIDER=Check that the control is outside the dynamic control with locator @locator, and the distance between the right borders is evaluated via CheckProvider @func.
DOSPEC_OUTSIDE_TOP_ANOTHER=Check that the control is outside the control with id @another from the dictionary, and the distance between the top borders equals value @dist.
DOSPEC_OUTSIDE_TOP_ANOTHER_WITH_PROVIDER=Check that the control is outside the control with id @another from the dictionary, and the distance between the top borders is evaluated via CheckProvider @func.
DOSPEC_OUTSIDE_TOP_LOCATOR=Check that the control outside from the dynamic control with locator @locator, and the distance between top borders equals value @dist.
DOSPEC_OUTSIDE_TOP_LOCATOR_WITH_PROVIDER=Check that the control is outside the dynamic control with locator @locator, and the distance between the top borders is evaluated via CheckProvider @func.
DOSPEC_OUTSIDE_BOTTOM_ANOTHER=Check that the control is outside the control with id @another from the dictionary, and the distance between the bottom borders equals value @dist.
DOSPEC_OUTSIDE_BOTTOM_ANOTHER_WITH_PROVIDER=Check that the control is outside the control with id @another from the dictionary, and the distance between the bottom borders is evaluated via CheckProvider @func.
DOSPEC_OUTSIDE_BOTTOM_LOCATOR=Check that the control is outside the dynamic control with locator @locator, and the distance between the bottom borders equals value @dist.
DOSPEC_OUTSIDE_BOTTOM_LOCATOR_WITH_PROVIDER=Check that the control outside the dynamic control with locator @locator, and the distance between the bottom borders is evaluated via CheckProvider @func.
DOSPEC_H_CENTRE_ANOTHER=Check that the control and the control with id @another from the dictionary are horizontally centered and the difference equals value @dist.
DOSPEC_H_CENTRE_ANOTHER_WITH_PROVIDER=Check that the control and the control with id @another from the dictionary are horizontally centered and the difference is evaluated via CheckProvider @func.
DOSPEC_H_CENTRE_LOCATOR=Check that the control and the  dynamic control with locator @locator are horizontally centered and the difference equals value @dist.
DOSPEC_H_CENTRE_LOCATOR_WITH_PROVIDER=Check that the control and the dynamic control with locator @locator are horizontally centered and the difference is evaluated via CheckProvider @func.
DOSPEC_V_CENTRE_ANOTHER=Check that the control and the control with id @another from the dictionary are vertically centered and the difference equals value @dist.
DOSPEC_V_CENTRE_ANOTHER_WITH_PROVIDER=Check that the control and the control with id @another from the dictionary are vertically centered and the difference is evaluated via CheckProvider @func.
DOSPEC_V_CENTRE_LOCATOR=Check that the control and the dynamic control with locator @locator are vertically centered, and the difference equals value @dist.
DOSPEC_V_CENTRE_LOCATOR_WITH_PROVIDER=Check that the control and the dynamic control with locator @locator are vertically centered, and the difference is evaluated via CheckProvider @func.
#endregion

#region api.client
ABSTRACT_CLIENT_TIMEOUT_MUST_BE_POSITIVE=Timeout must be a positive number.
ABSTRACT_DICTIONARY_CODEC_DICTIONARY_IS_NULL=The dictionary is null
ABSTRACT_DICTIONARY_CODEC_UNKNOWN_MESSAGE_TYPE=Unknown message type %s
CLIENT_HELPER_POSSIBILITY_IS_NOT_ALLOWED=For client %s, possibility %s is not allowed.
POSSIBILITY_RECEIVING_MESSAGES=Receiving messages
POSSIBILITY_SENDING_MESSAGES=Sending messages
POSSIBILITY_RAW_SENDING=Sending raw messages
POSSIBILITY_ENCODING=Encoding to raw messages
POSSIBILITY_DECODING=Decoding from raw messages
#endregion

#region api.common
PARAMETERS_KIND_LOAD=Parameters for working with a plugin
PARAMETERS_KIND_START=Parameters for running the application
PARAMETERS_KIND_CONNECT=Parameters for connecting to the application
PARAMETERS_KIND_STOP=Parameters for stopping the application
PARAMETERS_KIND_GET_PROPERTY=Parameters for getting an application property
PARAMETERS_KIND_SET_PROPERTY=Parameters for setting an application property
PARAMETERS_KIND_ENCODE=empty
PARAMETERS_KIND_PROPS=empty
PARAMETERS_KIND_NEW_INSTANCE=Parameters for creating a new instance of the application
CONVERTER_NOT_ENTRY_FOUND=Not entry found
CONVERTER_NO_ENTRY_WITH_NAME=No entry with name %s
CONVERTER_WRONG_STRUCTURE=Wrong structure
CONVERTER_CANT_CONVERT_TYPE=Cannot convert %s from type %s to type %s
CONVERTER_CANT_PARSE_DATE=Can't parse date from %s
ZIP_CREATE_DESCRIPTION=Creates a new Zip object.
ZIP_LOAD_DESCRIPTION=Loads an archive from @path.
ZIP_NOT_EXISTS_OR_NOT_FILE=%s does not exist or is not a file
ZIP_SAVE_DESCRIPTION=Saves the archive to @path.
ZIP_ADD_DESCRIPTION=Adds one file into a zip archive from @path.
ZIP_FILE_NOT_EXIST_OR_ITS_DIR=File %s does not exist or it is a directory
ZIP_REMOVE_DESCRIPTION=Remove an element from Zip by name
ZIP_EXTRACT_DESCRIPTION=Extract one file with @name from the zip archive to @path (directory).
ZIP_PATH_NOT_EXIST_OR_ITS_FILE=Path %s does not exist or it's a file
ZIP_NOT_CONTAINS_FILE=Zip does not contain file %s
UNIQUE_STRING_DESCRIPTION=Get random string that depends on the current time.
SYS_CURRENT_PROCESS_ID_DESCRIPTION=Returns PID of the current process (the tool itself).
SYS_HOST_NAME=Returns the current host name
SYS_USER_NAME=Returns the current user name
SYS_OS_NAME=Returns the OS name
SYS_COPY_TO_CLIPBOARD=Save @text to clipboard
SYS_GET_FROM_CLIPBOARD=Return text from clipboard
SYS_EXISTS=Checks if the file with @paht exists
SYS_COPY_FILE=Copy the file from @pathFrom to @pathTo
SYS_MOVE_FILE=Move/rename file from @pathFrom to @pathTo
SYS_WRITE_FILE=Write data from byte array @buf to file @pathTo
SYS_READ_FILE=Read data as byte array from file @pathFrom
SYS_JF_DIR=Returns the path to the JF folder.
STR_GROUPS=Return an array of strings with groups that were found in string @string by @pattern. \nSee also Regular expressions
STR_ARE_EQUAL=Return true, if strings @s1 and @s2 are equivalents
STR_IS_NULL_OR_EMPTY=Return true, if string @s is empty or null, and, otherwise, false.
STR_AS_STRING=Return String value of @object
RND_TO_NOT_INCLUDE=Generates random integer in range @from - @to. To isn't included. \nThe result can be divided by @step with nothing remaining.
RND_FROM_TO=Generates random double in range @from - @to.
RND_ACCURACY_COUNT=Generates random double with an accuracy of @count digits in range @from - @to
RND_ACCURACY_ONE_DIGIT=Generates random double with an accuracy of 1 digit in range @from - @to
RND_STRING=Generates random String with chars from @donor and length equals @length
DATE_TIME_SET_FORMATS=Sets formats to convert string to date
DATE_TIME_SET_TIME_FROM_STRING=Set time (hours, minutes and seconds) from @str. \n If @str dosen't fit converters, a ParseException will be thrown
DATE_TIME_SET_TIME_TO_CURRENT_DATE=Set @hours, @minutes and @seconds to current date
DATE_TIME_SET_DATE_FROM_STRING=Set date (years, months and days) from @str. \n If @str dosen't match the converters, a ParseException will be thrown
DATE_TIME_SET_DATE_TO_CURRENT_DATE=Set @year, @month and @day to current date
DATE_TIME_SHIFT_TIME=Shift the current time right @hours, @minutes and @seconds
DATE_TIME_SHIFT_DATE=Shift the current date right @year, @month and @day
DATE_TIME_YEARS=Return the current year
DATE_TIME_MONTH=Return the current month (number)
DATE_TIME_DAY_OF_WEEK=Return the current day of week
DATE_TIME_DAYS=Return the current day
DATE_TIME_HOURS=Return the current hour
DATE_TIME_MINUTES=Return the current minute
DATE_TIME_SECONDS=Return the current second
DATE_TIME_MILLISECONDS=Return the current millisecond
DATE_TIME_CONVERT_TO_STRING=Convert this date to string with the date-time converter
DATE_TIME_CONVERT_TO_STRING_VIA_FORMAT=Convert the current instance of date to String via @format
DATE_TIME_CONVERT_TO_STRING_VIA_FORMAT_AND_ZONEID=Convert the current instance of date to String via @format using @zoneId
DATE_TIME_RETURN_CURRENT_DATE=Return the current date
DATE_TIME_RETURN_CURRENT_DATE_FOR_ZONEID=Return the current date for given @zoneId
DATE_TIME_RETURN_CURRENT_TIME=Return the current time
DATE_TIME_RETURN_DATE_FROM_STRING=Return the date from @str using @format for date. If @str doesn't match the converters, a ParseException will be thrown
DATE_TIME_RETURN_DATE_FROM_STRING_ZONEID=Return the date from @str using @format for date using @zoneId. If @str doesn't match the converters, a ParseException will be thrown
DATE_TIME_RETURN_DATE_FROM_STR=Return the date from @str. If @str doesn't match converters, a ParseException will be thrown 
DATE_TIME_RETURN_DATE_YEAR_MONTH_DAY=Return the date with @year, @month and @day
DATE_TIME_RETURN_DATE_WITH_ALL_VALUES=Return the date with @year, @month, @day, @hour, @minute and @second
DATE_TIME_RETURN_TIME_FROM_STRING=Return the time from @str. If @str doesn't match converters, a ParseException will be thrown
DATE_TIME_RETURN_TIME_HOURS_MINUTES_SECONDS=Return the time with @hours, @minutes and @seconds
DATE_TIME_ADD_DAYS_TO_DATE=Add @days to date @d and return the resulting date
DATE_TIME_ADD_HOURS_MINUTES_SECONDS_TO_DATE=Add @hours, @minutes and @seconds to date @d and return the resulting date
DATE_TIME_ADD_DAYS_TO_CURRENT_DATE=Add @days to the current date
DATE_TIME_ADD_HOURS_MINUTES_SECONDS_TO_CURRENT_DATE=Add @hours, @minutes and @seconds to the current date
DATE_TIME_CONVERT_DATE_TO_STRING_VIA_CONVERTER=Convert @date to string with @format converter
DATE_TIME_CONVERT_DATE_TO_STRING_VIA_CONVERTER_ZONEID=Convert @date to string with @format converter
DATE_TIME_CONVERT_DATE_TO_STRING_VIA_DATE_CONVERTER=Convert @date to string with date converter
DATE_TIME_CONVERT_DATE_TO_STRING_VIA_TIME_CONVERTER=Convert @date to string with time converter
DATE_TIME_CONVERT_DATE_TO_STRING_VIA_DATETIME_CONVERTER=Convert @date to string with date-time converter
DATE_TIME_GET_YEAR_FROM_DATE=Get years from @date
DATE_TIME_GET_MONTH_NUMBER_FROM_DATE=Get months (number) from @date
DATE_TIME_GET_DAY_OF_WEEK_FROM_DATE=Get day of week from @date
DATE_TIME_GET_DAYS_FROM_DATE=Get days from @date
DATE_TIME_GET_HOURS_FROM_DATE=Get hours from @date
DATE_TIME_GET_MINUTES_FROM_DATE=Get minutes from @date
DATE_TIME_GET_SECONDS_FROM_DATE=Get seconds from @date
DATE_TIME_GET_MILLISECONDS_FROM_DATE=Get milliseconds from @date
DATE_TIME_GET_DATE_FROM_JAVA_UTIL_DATE=Get date from instance of type java.util.Date @date
DATE_TIME_GET_TIME_FROM_JAVA_UTIL_DATE=Get time from instance of type java.util.Date @date
#endregion

#region api.conditions
AND_CONDITION_DESCRIPTION=Returns rows that satisfy ALL conditions
COLOR_CONDITION_DESCRIPTION=Returns rows that satisfy the conditions applicable to the color of the text or the background
CONDITION_DESCRIPTION=Base class for all conditions. Conditions are special functional classes that allow to search for different elements by the desired criteria.
CONDITION_AND_DESCRIPTION=Creates an instance of AndCondition. You may enumerate several parameters, each of them should be derived from the Condition class.
CONDITION_OR_DESCRIPTION=creates instance of OrCondition. You may enumerate several parameters, each of them should be derived from the Condition class.
CONDITION_NOT_DESCRIPTION=creates an instance of NotCondition. Parameter @cond will be passed to the constructor.
CONDITION_TRUE_DESCRIPTION=creates an instance of TrueCondition.
CONDITION_FALSE_DESCRIPTION=creates an instance of FalseCondition.
CONDITION_EMPTY_DESCRIPTION=creates an instance of StringCondition. Parameter @name will be passed to the constructor.
CONDITION_REGEXP_DESCRIPTION=creates an instance of RegexpCondition. Parameters @name and @pattern will be passed to the constructor.
CONDITION_STRING_DESCRIPTION=creates instance of StringCondition. Parameters @name, @pattern and @ignoreCase will be passed to constructor.
CONDITION_DATE_DESCRIPTION=creates instance of DateCondition. Parameters @name, @ralationStr, @value and @precision will be passed to constructor.
CONDITION_NUMBER_DESCRIPTION=creates instance of NumberCondition. Parameters @name, @relationStr and @value will be passed to constructor.
CONDITION_COLOR_DESCRIPTION=creates instance of ColorCondition. Parameters @name and @color will be passed to constructor.
DATE_CONDITION_DESCRIPTION=Returns the rows that satisfy the given date
DATE_CONDITION_PRECISION_BY_NAME_EXCEPTION=Unknown precision: %s
EMPTY_CONDITION_DESCRIPTION=Return true if the desired value is null or empty
FALSE_CONDITION_DESCRIPTION=Returns false for any matches
NOT_CONDITION_DESCRIPTION=Returns rows that do NOT satisfy the condition
NUMBER_CONDITION_DESCRIPTION=Returns rows which contain the given number
OR_CONDITION_DESCRIPTION=Returns rows that satisfy at least one condition
REGEXP_CONDITION_DESCRIPTION=Returns rows that satisfy the given regular expression
RELATIVE_CONDITION_DESCRIPTION=Return rows, the content of which satisfies the comparison (more, less, equal etc) with the given parameters
STRING_CONDITION_DESCRIPTION=Returns rows which contain the given string
TRUE_CONDITION_DESCRIPTION=Returns all rows from the table
#endregion

#region api.error
ERROR_KIND_EXCEPTION=Exception
ERROR_KIND_EXPRESSION_ERROR=Expression error
ERROR_KIND_ASSERT_IS_FALSE=Assert is false
ERROR_KIND_EMPTY_PARAMETER=Empty parameter
ERROR_KIND_WRONG_PARAMETERS=Wrong parameters
ERROR_KIND_INPUT_CANCELED=User cancelled input
ERROR_KIND_ROW_EXPIRED=Row is not relevant now
ERROR_KIND_LOCATOR_NOT_FOUND=Locator is not found in the dictionary
ERROR_KIND_DIALOG_NOT_FOUND=Dialog is not found
ERROR_KIND_DIALOG_CHECK_LAYOUT=Layout checking failed
ERROR_KIND_ELEMENT_NOT_FOUND=Element is not found
ERROR_KIND_TOO_MANY_ELEMENTS=Too many elements were found
ERROR_KIND_FEATURE_NOT_SUPPORTED=Feature is not supported
ERROR_KIND_OPERATION_NOT_ALLOWED=Operation is not allowed
ERROR_KIND_ELEMENT_NOT_ENABLED=Element is not enabled
ERROR_KIND_OPERATION_FAILED=Operation failed
ERROR_KIND_NOT_EQUAL=Actual and expected are mismatched
ERROR_KIND_SQL_ERROR=SQL error
ERROR_KIND_SERVICE_ERROR=Service error
ERROR_KIND_APPLICATION_ERROR=Application error
ERROR_KIND_CLIENT_ERROR=Client error
ERROR_KIND_TIMEOUT=Timeout
ERROR_KIND_MANY_ERRORS=Many errors
ERROR_KIND_FAIL=Fail
ERROR_KIND_OTHER=Other
ERROR_KIND_CHART_EXCEPTION=Chart exception
ERROR_KIND_MATRIX_ERROR=Matrix error
ERROR_KIND_CONTROL_NOT_SUPPORTED=Control is not supported
ERROR_KIND_APPLICATION_CLOSED=Application was closed

#region api.error.app
ELEMENT_NOT_FOUND_EXCEPTION_BY_LOCATION=Element not found by location (%d,%d)
ELEMENT_NOT_FOUND_EXCEPTION_NO_ELEMENTS=No one element was found. Element: %s
NULL_PARAMETER_EXCEPTION_MESSAGE=%s can't be null or empty
TOO_MANY_ELEMENTS_EXCEPTION_MESSAGE=Too many elements were found. Element: %s
#endregion

#region api.error.client
#endregion

#region api.error.service
MATRIX_EXCEPTION_MESSAGE=Matrix error in #
API_NULL_PARAMETER_EXCEPTION=Parameter %s is null
#endregion

#region api.error.common
SERVICE_POOL_SERVICE_IS_NOT_LOADED=Service '%s' is not loaded or is already stopped.
SERVICE_POOL_SERVICE_ALREADY_STARTED=Service '%s' already started.
SERVICE_POOL_NOT_FOUND=The service factory with serviceId '%s' is not found
#endregion

#endregion

#region api.service
SERVICE_HELPER_POSSIBILITY_IS_NOT_ALLOWED=For client %s, possibility %s is not allowed.
#endregion

#endregion

######################################
## COMMON part
######################################

#region common
COMMON_VALUE=Value
COMMON_IS_NOT_FOUND=is not found
COMMON_CLIENT_IS_NOT_LOADED=The client %s is not loaded.
COMMON_CLIENT_FACTORY_IS_NOT_FOUND=The client factory with id %s is not found
COMMON_ACTION_NAME=actionName
COMMON_CHOOSE_SUB_CASE=Choose the sub case from the list
COMMON_RESULT_IS_NOT_BOOLEAN=Result is not Boolean
COMMON_ERROR_IN_EXPRESSION=Error in expression : %s
COMMON_ON=on
COMMON_OFF=off
COMMON_NAME=name
COMMON_SHIFT_NAME=Name
COMMON_DIALOG=Dialog
COMMON_ELEMENT=Element
COMMON_ERROR=Error
COMMON_JACKFISH=JackFish
COMMON_OPEN=Open
COMMON_CLOSE=Close
COMMON_YES=Yes
COMMON_NO=No
COMMON_COPY=Copy
COMMON_HELP=Help
COMMON_REMOVE=Remove
COMMON_RENAME=Rename
COMMON_WIZARD=Wizard
COMMON_ALL=All
COMMON_START=Start
COMMON_STOP=Stop
COMMON_PAUSE=Pause
COMMON_STEP=Step
COMMON_FIND=Find
COMMON_CONNECT=Connect
COMMON_ERROR_IN=Error in
COMMON_SAVE=Save
COMMON_SETTINGS=Settings
COMMON_GIT=Git
COMMON_JAR_FILTER=Jar files(*.jar)
COMMON_XML_FILTER=Xml files(*.xml)
COMMON_JF_FILTER=jf files (*.jf)
COMMON_NEW=New
COMMON_MATRIX=Matrix
COMMON_DICTIONARY=Dictionary
COMMON_CSV=CSV
COMMON_PARAMETER=Parameter
COMMON_ALL_FILES=All files
COMMON_CANCEL=Cancel
COMMON_SIZE=Size
COMMON_DATE=Date
COMMON_HIDDEN=Hidden
COMMON_IS_DIR=Is directory
COMMON_CLEAR=Clear
COMMON_CLASS=Class
COMMON_EXPRESSION=Expression
COMMON_RESULT=Result
COMMON_OK=Ok
#endregion



